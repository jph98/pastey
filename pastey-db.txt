-- MySQL dump 10.13  Distrib 5.6.16, for osx10.9 (x86_64)
--
-- Host: localhost    Database: pastey
-- ------------------------------------------------------
-- Server version	5.6.16

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `languages`
--

DROP TABLE IF EXISTS `languages`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `languages` (
  `id` int(11) NOT NULL,
  `name` varchar(255) NOT NULL,
  `priority` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `languages`
--

LOCK TABLES `languages` WRITE;
/*!40000 ALTER TABLE `languages` DISABLE KEYS */;
INSERT INTO `languages` VALUES (1,'java',1),(2,'php',2),(3,'html',10),(4,'css',10),(5,'c',10),(6,'text',10),(7,'csharp',10),(8,'cpp',10),(9,'bash',10),(10,'delphi',10),(11,'pascal',10),(12,'patch',10),(13,'diff',10),(14,'groovy',10),(15,'python',10),(17,'ruby',10),(18,'sql',10),(19,'vb',10),(20,'xml',10),(21,'xslt',10);
/*!40000 ALTER TABLE `languages` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `listings`
--

DROP TABLE IF EXISTS `listings`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `listings` (
  `title` varchar(255) DEFAULT 'Untitled',
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) DEFAULT 'Unknown',
  `sourcecode` text,
  `language` int(255) NOT NULL,
  `pastebinkey` varchar(255) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `pastebinkey` (`pastebinkey`)
) ENGINE=MyISAM AUTO_INCREMENT=153 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `listings`
--

LOCK TABLES `listings` WRITE;
/*!40000 ALTER TABLE `listings` DISABLE KEYS */;
INSERT INTO `listings` VALUES ('audit.patch',83,'Unknown','diff -r 1fad4f8fee9c com.elasticpath.cm/WEB-INF/conf/spring/service/serviceHttp.xml\n--- a/com.elasticpath.cm/WEB-INF/conf/spring/service/serviceHttp.xml	Wed Feb 11 17:51:06 2009 -0800\n+++ b/com.elasticpath.cm/WEB-INF/conf/spring/service/serviceHttp.xml	Mon Feb 16 15:44:38 2009 -0800\n@@ -50,7 +50,7 @@\n 	</bean>\n \n 	\n-	<bean id=\"httpProductService\" class=\"org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter\">\n+	<bean id=\"httpProductService\" class=\"com.elasticpath.service.audit.impl.AuditHttpInvokerServiceExporter\">\n 		<property name=\"service\">\n 			<ref bean=\"productService\"/>\n 		</property>\n@@ -58,6 +58,8 @@\n 			<value>com.elasticpath.service.catalog.ProductService</value>\n 		</property>\n 	</bean>\n+	\n+	\n 	<bean id=\"httpDigitalAssetAuditService\" class=\"org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter\">\n 		<property name=\"service\">\n 			<ref bean=\"digitalAssetAuditService\"/>\n@@ -533,5 +535,5 @@\n 			<value>com.elasticpath.service.campaign.DynamicContentService</value>\n 		</property>\n 	</bean>\n-\n+	\n </beans>\ndiff -r 1fad4f8fee9c com.elasticpath.cmclient/com.elasticpath.cmclient.core/conf/spring/service/serviceCMClient.xml\n--- a/com.elasticpath.cmclient/com.elasticpath.cmclient.core/conf/spring/service/serviceCMClient.xml	Wed Feb 11 17:51:06 2009 -0800\n+++ b/com.elasticpath.cmclient/com.elasticpath.cmclient.core/conf/spring/service/serviceCMClient.xml	Mon Feb 16 15:44:38 2009 -0800\n@@ -63,7 +63,7 @@\n   		</property>\n 	</bean>\n 	\n-	<bean id=\"productService\" class=\"com.elasticpath.cmclient.core.EpHttpInvokerProxyFactoryBean\">\n+	<bean id=\"productService\" class=\"com.elasticpath.cmclient.core.AuditHttpInvokerProxyFactoryBean\">\n 		<property name=\"serviceUrl\">\n 			<value>productService.remote</value>\n 		</property>\n@@ -545,5 +545,6 @@\n 	<bean id=\"changeSetService\" class=\"com.elasticpath.cmclient.core.EpHttpInvokerProxyFactoryBean\">\n 		<property name=\"serviceUrl\" value=\"changeSetService.remote\"/>\n 		<property name=\"serviceInterface\" value=\"com.elasticpath.service.changeset.ChangeSetService\"/>\n-	</bean>\n+	</bean>\n+	\n </beans>\ndiff -r 1fad4f8fee9c com.elasticpath.core/WEB-INF/conf/spring/dataaccess/openjpa/openjpa.xml\n--- a/com.elasticpath.core/WEB-INF/conf/spring/dataaccess/openjpa/openjpa.xml	Wed Feb 11 17:51:06 2009 -0800\n+++ b/com.elasticpath.core/WEB-INF/conf/spring/dataaccess/openjpa/openjpa.xml	Mon Feb 16 15:44:38 2009 -0800\n@@ -19,6 +19,47 @@\n     <bean id=\"sessionFactory\" class=\"com.elasticpath.persistence.impl.JpaSessionFactoryImpl\">\n       <property name=\"entityManagerFactory\" ref=\"entityManagerFactory\"/>\n     </bean>\n+    \n+	<bean id=\"auditingPersistenceEngineTarget\"\n+		class=\"com.elasticpath.domain.audit.impl.AuditingPersistenceEngineImpl\">\n+		<property name=\"entityManager\" ref=\"sharedEntityManager\"/>\n+		<property name=\"sessionFactory\" ref=\"sessionFactory\"/>\n+		<property name=\"beanFactory\" ref=\"coreBeanFactory\"/>\n+		<property name=\"auditableClasses\">\n+			<set>\n+				<value>com.elasticpath.domain.attribute.impl.AbstractAttributeValueImpl</value>\n+				<value>com.elasticpath.domain.attribute.impl.ProductAttributeValueImpl</value>\n+				<value>com.elasticpath.domain.attribute.impl.SkuAttributeValueImpl</value>\n+				<value>com.elasticpath.domain.catalog.impl.AbstractPriceImpl</value>\n+				<value>com.elasticpath.domain.catalog.impl.AbstractPriceTierImpl</value>\n+				<value>com.elasticpath.domain.catalog.impl.CatalogProductPriceImpl</value>\n+				<value>com.elasticpath.domain.catalog.impl.CatalogSkuPriceImpl</value>\n+				<value>com.elasticpath.domain.catalog.impl.DigitalAssetImpl</value>\n+				<value>com.elasticpath.domain.catalog.impl.AbstractLocaleDependantFieldsImpl</value>\n+				<value>com.elasticpath.domain.catalog.impl.ProductAssociationImpl</value>\n+				<value>com.elasticpath.domain.catalog.impl.ProductCategoryImpl</value>\n+				<value>com.elasticpath.domain.catalog.impl.ProductImpl</value>\n+				<value>com.elasticpath.domain.catalog.impl.ProductLocaleDependantFieldsImpl</value>\n+				<value>com.elasticpath.domain.catalog.impl.ProductPriceImpl</value>\n+				<value>com.elasticpath.domain.catalog.impl.ProductPriceTierImpl</value>\n+				<value>com.elasticpath.domain.catalog.impl.ProductSkuImpl</value>\n+				<value>com.elasticpath.domain.catalog.impl.ProductTypeImpl</value>\n+				<value>com.elasticpath.domain.catalog.impl.SkuPriceImpl</value>\n+				<value>com.elasticpath.domain.catalog.impl.SkuPriceTierImpl</value>\n+				<value>com.elasticpath.domain.skuconfiguration.impl.JpaAdaptorOfSkuOptionValueImpl</value>\n+				<value>com.elasticpath.domain.skuconfiguration.impl.SkuOptionImpl</value>\n+				<value>com.elasticpath.domain.skuconfiguration.impl.SkuOptionValueImpl</value>\n+				<value>com.elasticpath.domain.rules.impl.AbstractRuleElementImpl</value>\n+				<value>com.elasticpath.domain.rules.impl.AbstractRuleExceptionImpl</value>\n+				<value>com.elasticpath.domain.rules.impl.AbstractRuleImpl</value>\n+				<value>com.elasticpath.domain.rules.impl.AppliedRuleImpl</value>\n+				<value>com.elasticpath.domain.rules.impl.PromotionRuleImpl</value>\n+				<value>com.elasticpath.domain.rules.impl.RuleParameterImpl</value>\n+				<value>com.elasticpath.domain.rules.impl.RuleSetImpl</value>\n+			</set>\n+		</property>\n+	</bean>\n+	\n \n 	<bean id=\"persistenceEngineTarget\"\n 		class=\"com.elasticpath.persistence.impl.JpaPersistenceEngineImpl\">\n@@ -34,7 +75,7 @@\n 			<value>com.elasticpath.persistence.PersistenceEngine</value>\n 		</property>\n 		<property name=\"target\">\n-			<ref local=\"persistenceEngineTarget\" />\n+			<ref local=\"auditingPersistenceEngineTarget\" />\n 		</property>\n 	</bean>\n \ndiff -r 1fad4f8fee9c com.elasticpath.core/WEB-INF/conf/spring/service/service.xml\n--- a/com.elasticpath.core/WEB-INF/conf/spring/service/service.xml	Wed Feb 11 17:51:06 2009 -0800\n+++ b/com.elasticpath.core/WEB-INF/conf/spring/service/service.xml	Mon Feb 16 15:44:38 2009 -0800\n@@ -1358,6 +1358,9 @@\n                 </entry>\n   			</map>\n 		</property>\n+	</bean>\n+	\n+	<bean id=\"auditService\" class=\"com.elasticpath.service.audit.impl.AuditServiceImpl\" scope=\"singleton\">\n 	</bean>\n 	\n </beans>\ndiff -r 1fad4f8fee9c com.elasticpath.core/WEB-INF/src/main/java/META-INF/persistence.xml.vm\n--- a/com.elasticpath.core/WEB-INF/src/main/java/META-INF/persistence.xml.vm	Wed Feb 11 17:51:06 2009 -0800\n+++ b/com.elasticpath.core/WEB-INF/src/main/java/META-INF/persistence.xml.vm	Mon Feb 16 15:44:38 2009 -0800\n@@ -23,6 +23,7 @@\n 		<mapping-file>META-INF/pricing-orm.xml</mapping-file>\n 		<mapping-file>META-INF/changeset-orm.xml</mapping-file>\n 		<mapping-file>META-INF/campaign-orm.xml</mapping-file>\n+		<mapping-file>META-INF/audit-orm.xml</mapping-file>\n \n 		<class>com.elasticpath.domain.attribute.impl.AbstractAttributeValueImpl</class>\n 		<class>com.elasticpath.domain.attribute.impl.AttributeGroupAttributeImpl</class>\n@@ -216,6 +217,9 @@\n 		<class>com.elasticpath.domain.campaign.impl.ActionImpl</class>\n 		<class>com.elasticpath.domain.contentspace.impl.ParameterValueImpl</class>\n 		<class>com.elasticpath.domain.contentspace.impl.ParameterLocaleDependantValueImpl</class>		\n+		<class>com.elasticpath.domain.audit.impl.ChangeTransactionImpl</class>		\n+		<class>com.elasticpath.domain.audit.impl.ChangeOperationImpl</class>		\n+		<class>com.elasticpath.domain.audit.impl.DataChangedImpl</class>		\n 		\n 		<properties>\n 			<property name=\"openjpa.ConnectionFactoryName\" value=\"java:comp/env/${ep_jndi}\"/>\ndiff -r 1fad4f8fee9c com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/audit/ChangeOperation.java\n--- /dev/null	Thu Jan 01 00:00:00 1970 +0000\n+++ b/com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/audit/ChangeOperation.java	Mon Feb 16 15:44:38 2009 -0800\n@@ -0,0 +1,81 @@\n+/**\n+ * Copyright (c) Elastic Path Software Inc., 2009\n+ */\n+package com.elasticpath.domain.audit;\n+\n+import com.elasticpath.domain.Entity;\n+\n+/**\n+ *  An operation that results in changes.\n+ */\n+public interface ChangeOperation extends Entity {\n+	/**\n+	 * Get the business transaction this operation belongs to.\n+	 *\n+	 * @return the changeTransaction\n+	 */\n+	ChangeTransaction getChangeTransaction();\n+\n+	/**\n+	 * Set the business transaction this operation belongs to.\n+	 *\n+	 * @param changeTransaction the changeTransaction to set\n+	 */\n+	void setChangeTransaction(final ChangeTransaction changeTransaction);\n+\n+	/**\n+	 * @return the order\n+	 */\n+	int getOperationOrder();\n+\n+	/**\n+	 * @param operationOrder the order to set\n+	 */\n+	void setOperationOrder(final int operationOrder);\n+\n+	/**\n+	 * @return the rootObjectName\n+	 */\n+	String getRootObjectName();\n+\n+	/**\n+	 * @param rootObjectName the rootObjectName to set\n+	 */\n+	void setRootObjectName(final String rootObjectName);\n+\n+	/**\n+	 * @return the rootObjectUid\n+	 */\n+	long getRootObjectUid();\n+\n+	/**\n+	 * @param rootObjectUid the rootObjectUid to set\n+	 */\n+	void setRootObjectUid(final long rootObjectUid);\n+\n+	/**\n+	 * @return the rootObjectGuid\n+	 */\n+	String getRootObjectGuid();\n+\n+	/**\n+	 * @param rootObjectGuid the rootObjectGuid to set\n+	 */\n+	void setRootObjectGuid(final String rootObjectGuid);\n+\n+	/**\n+	 * Get the change type.\n+	 *\n+	 * @return the changeType\n+	 */\n+	ChangeType getChangeType();\n+\n+	/**\n+	 * Set the change type.\n+	 *\n+	 * @param changeType the changeType to set\n+	 */\n+	void setChangeType(final ChangeType changeType);\n+\n+\n+}\ndiff -r 1fad4f8fee9c com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/audit/ChangeTransaction.java\n--- /dev/null	Thu Jan 01 00:00:00 1970 +0000\n+++ b/com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/audit/ChangeTransaction.java	Mon Feb 16 15:44:38 2009 -0800\n@@ -0,0 +1,56 @@\n+/**\n+ * Copyright (c) Elastic Path Software Inc., 2009\n+ */\n+package com.elasticpath.domain.audit;\n+\n+import com.elasticpath.domain.Entity;\n+\n+/**\n+ * Defines a change transaction. This is the transaction that\n+ * surrounds a collection of change operations.\n+ */\n+public interface ChangeTransaction extends Entity {\n+\n+	/**\n+	 * Get the GUID of the Change Set this transaction belongs to.\n+	 * \n+	 * @return a <code>ChangeSet</code> GUID.\n+	 */\n+	String getChangeSetGuid();\n+	\n+	/**\n+	 * Set the GUID of the Change Set that owns this transaction.\n+	 * \n+	 * @param changeSetGuid the <code>ChangeSet</code> GUID to set.\n+	 */\n+	void setChangeSetGuid(final String changeSetGuid);\n+\n+	/**\n+	 * Get the GUID of the user making the change.\n+	 *\n+	 * @return the user GUID\n+	 */\n+	String getUserGuid();\n+\n+	/**\n+	 * Set the GUID of the user making the change.\n+	 *\n+	 * @param userGuid the user GUID to set\n+	 */\n+	void setUserGuid(final String userGuid);\n+\n+	/**\n+	 * Get an identifier for the transaction.\n+	 *\n+	 * @return the transactionId\n+	 */\n+	String getTransactionId();\n+\n+	/**\n+	 * Set the transaction identifier.\n+	 *\n+	 * @param transactionId the transactionId to set\n+	 */\n+	void setTransactionId(final String transactionId);\n+\n+}\ndiff -r 1fad4f8fee9c com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/audit/ChangeType.java\n--- /dev/null	Thu Jan 01 00:00:00 1970 +0000\n+++ b/com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/audit/ChangeType.java	Mon Feb 16 15:44:38 2009 -0800\n@@ -0,0 +1,68 @@\n+/**\n+ * Copyright (c) Elastic Path Software Inc., 2009\n+ */\n+package com.elasticpath.domain.audit;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.commons.lang.enums.Enum;\n+\n+/**\n+ * Type-safe enumeration of audited change types.\n+ */\n+public class ChangeType extends Enum {\n+\n+	/**\n+	 * Change type that represents an update.\n+	 */\n+	public static final ChangeType UPDATE = new ChangeType(\"Update\");\n+	\n+	/**\n+	 * Change type that represents a deletion. \n+	 */\n+	public static final ChangeType DELETE = new ChangeType(\"Delete\");\n+	\n+	/**\n+	 * Change type that represents a new object. \n+	 */\n+	public static final ChangeType CREATE = new ChangeType(\"Create\");\n+\n+	/**\n+	 * Construct a new ChangeType from the given name.\n+	 * \n+	 * @param name the name of a change type\n+	 */\n+	protected ChangeType(final String name) {\n+		super(name);\n+	}\n+	\n+	/**\n+	 * Return the list of change types.\n+	 * \n+	 * @return a list of change types.\n+	 */\n+	public static List<ChangeType> getEnumList() {\n+		return getEnumList(ChangeType.class);\n+	}\n+	\n+	/**\n+	 * Return a map of change types by name.\n+	 * \n+	 * @return a map of change types by name\n+	 */\n+	public static Map<String, ChangeType> getEnumMap() {\n+		return getEnumMap(ChangeType.class);\n+	}\n+	\n+	/**\n+	 * Get a change type by name.\n+	 * \n+	 * @param name the name of the change type\n+	 * @return the change type\n+	 */\n+	public static ChangeType getEnum(final String name) {\n+		return (ChangeType) getEnum(ChangeType.class, name);\n+	}\n+\n+}\ndiff -r 1fad4f8fee9c com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/audit/DataChanged.java\n--- /dev/null	Thu Jan 01 00:00:00 1970 +0000\n+++ b/com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/audit/DataChanged.java	Mon Feb 16 15:44:38 2009 -0800\n@@ -0,0 +1,125 @@\n+/**\n+ * Copyright (c) Elastic Path Software Inc., 2009\n+ */\n+package com.elasticpath.domain.audit;\n+\n+import com.elasticpath.domain.Entity;\n+\n+/**\n+ * Represents a change to a field of an object.\n+ */\n+public interface DataChanged extends Entity {\n+\n+	/**\n+	 * Get the name of the object that has a change.\n+	 *\n+	 * @return the object name\n+	 */\n+	String getObjectName();\n+\n+	/**\n+	 * Set the name of the object that has a change.\n+	 *\n+	 * @param objectName the object name to set\n+	 */\n+	void setObjectName(final String objectName);\n+\n+	/**\n+	 * Get the identity of the changed object.\n+	 *\n+	 * @return the objectUid\n+	 */\n+	long getObjectUid();\n+\n+	/**\n+	 * Set the UID of the changed object.\n+	 *\n+	 * @param objectUid the objectUid to set\n+	 */\n+	void setObjectUid(final long objectUid);\n+\n+	/**\n+	 * Get the object GUID.\n+	 *\n+	 * @return the objectGuid\n+	 */\n+	String getObjectGuid();\n+\n+	/**\n+	 * Set the object GUID.\n+	 *\n+	 * @param objectGuid the objectGuid to set\n+	 */\n+	void setObjectGuid(final String objectGuid);\n+\n+	/**\n+	 * Get the name of the field that has changed.\n+	 *\n+	 * @return the fieldName\n+	 */\n+	String getFieldName();\n+\n+	/**\n+	 * Set the name of the field that has changed.\n+	 *\n+	 * @param fieldName the fieldName to set\n+	 */\n+	void setFieldName(final String fieldName);\n+\n+	/**\n+	 * Get the previous value of the changed field.\n+	 *\n+	 * @return the previous value of the field\n+	 */\n+	String getFieldOldValue();\n+\n+	/**\n+	 * Set the previous value of the changed field.\n+	 *\n+	 * @param fieldValue the old fieldValue to set\n+	 */\n+	void setFieldOldValue(final String fieldValue);\n+\n+	/**\n+	 * Get the new value of the changed field.\n+	 *\n+	 * @return the fieldValue\n+	 */\n+	String getFieldNewValue();\n+\n+	/**\n+	 * Set the new value of the changed field.\n+	 *\n+	 * @param fieldValue the fieldValue to set\n+	 */\n+	void setFieldNewValue(final String fieldValue);\n+\n+	/**\n+	 * Get the change type.\n+	 *\n+	 * @return the changeType\n+	 */\n+	ChangeType getChangeType();\n+\n+	/**\n+	 * Set the change type.\n+	 *\n+	 * @param changeType the changeType to set\n+	 */\n+	void setChangeType(final ChangeType changeType);\n+\n+	/**\n+	 * Get the operation this change record is part of.\n+	 *\n+	 * @return the changeOperation\n+	 */\n+	ChangeOperation getChangeOperation();\n+\n+	/**\n+	 * Set the operation this change record is part of.\n+	 *\n+	 * @param changeOperation the changeOperation to set\n+	 */\n+	void setChangeOperation(final ChangeOperation changeOperation);\n+\n+}\ndiff -r 1fad4f8fee9c com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/audit/impl/AuditingPersistenceEngineImpl.java\n--- /dev/null	Thu Jan 01 00:00:00 1970 +0000\n+++ b/com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/audit/impl/AuditingPersistenceEngineImpl.java	Mon Feb 16 15:44:38 2009 -0800\n@@ -0,0 +1,502 @@\n+/**\n+ * Copyright (c) Elastic Path Software Inc., 2009\n+ */\n+package com.elasticpath.domain.audit.impl;\n+\n+import java.lang.reflect.Method;\n+import java.util.BitSet;\n+import java.util.Collection;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.log4j.Logger;\n+import org.apache.renamed.openjpa.ee.ManagedRuntime;\n+import org.apache.renamed.openjpa.enhance.PersistenceCapable;\n+import org.apache.renamed.openjpa.enhance.Reflection;\n+import org.apache.renamed.openjpa.event.AttachListener;\n+import org.apache.renamed.openjpa.event.DeleteListener;\n+import org.apache.renamed.openjpa.event.LifecycleEvent;\n+import org.apache.renamed.openjpa.event.PersistListener;\n+import org.apache.renamed.openjpa.kernel.Broker;\n+import org.apache.renamed.openjpa.kernel.OpenJPAStateManager;\n+import org.apache.renamed.openjpa.meta.ClassMetaData;\n+import org.apache.renamed.openjpa.meta.FieldMetaData;\n+import org.apache.renamed.openjpa.persistence.JPAFacadeHelper;\n+import org.apache.renamed.openjpa.persistence.OpenJPAEntityManager;\n+import org.apache.renamed.openjpa.persistence.OpenJPAPersistence;\n+\n+import com.elasticpath.commons.beanframework.BeanFactory;\n+import com.elasticpath.domain.Entity;\n+import com.elasticpath.domain.Persistence;\n+import com.elasticpath.domain.audit.ChangeOperation;\n+import com.elasticpath.domain.audit.ChangeTransaction;\n+import com.elasticpath.domain.audit.ChangeType;\n+import com.elasticpath.domain.audit.DataChanged;\n+import com.elasticpath.persistence.EpPersistenceException;\n+import com.elasticpath.persistence.PersistenceSession;\n+import com.elasticpath.persistence.Transaction;\n+import com.elasticpath.persistence.impl.JpaPersistenceEngineImpl;\n+import com.elasticpath.service.audit.AuditService;\n+\n+/**\n+ * Persistence engine that sits on top of JPA and deals with change sets.\n+ */\n+public class AuditingPersistenceEngineImpl extends JpaPersistenceEngineImpl {\n+\n+	/**\n+	 * Listener for persist events. This will be used to ensure entirely new objects are saved.\n+	 */\n+	public class AuditPersistListener implements PersistListener {\n+\n+		/**\n+		 * Post persistence actions (currently none).\n+		 *\n+		 * @param event the persist event\n+		 */\n+		public void afterPersist(final LifecycleEvent event) {\n+			// Do nothing\n+		}\n+\n+		/**\n+		 * Before persisting, save changeset details for a new object.\n+		 *\n+		 * @param event the persist event\n+		 */\n+		public void beforePersist(final LifecycleEvent event) {\n+			Object object = event.getSource();\n+			if (!getAuditableClasses().contains(object.getClass().getName())) {\n+				return;\n+			}\n+			LOG.info(\"The following object is being persisted: \" + object);\n+			saveNewObject((Persistence) object);\n+		}\n+\n+	}\n+\n+	/**\n+	 * Listener for attach events. This is used to ensure new objects created as part of a merge are tracked.\n+	 */\n+	public class AuditAttachListener implements AttachListener {\n+\n+		/**\n+		 * Post attach actions (currently none).\n+		 *\n+		 * @param event the attach event\n+		 */\n+		public void afterAttach(final LifecycleEvent event) {\n+			// Do nothing\n+		}\n+\n+		/**\n+		 * Before attaching, check if we are attaching a new object and if so save change details.\n+		 *\n+		 * @param event the attach event\n+		 */\n+		public void beforeAttach(final LifecycleEvent event) {\n+			Object object = event.getSource();\n+			if (!getAuditableClasses().contains(object.getClass().getName())) {\n+				return;\n+			}\n+			LOG.info(\"The following object is being stored: \" + object);\n+			PersistenceCapable pcObject = (PersistenceCapable) object;\n+			if (pcObject.pcGetStateManager() == null) {\n+				saveNewObject((Persistence) object);\n+			} else {\n+				saveChangedFields(pcObject);\n+			}\n+		}\n+\n+	}\n+\n+	/**\n+	 * Listen to delete events.\n+	 */\n+	public class AuditDeleteListener implements DeleteListener {\n+		/**\n+		 * Intercept delete and save a delete type changeset.\n+		 *\n+		 * @param event the delete event\n+		 */\n+		public void beforeDelete(final LifecycleEvent event) {\n+			Persistence sourceObject = (Persistence) event.getSource();\n+			if (!getAuditableClasses().contains(sourceObject.getClass().getName())) {\n+				return;\n+			}\n+			createDeleteset(sourceObject);\n+		}\n+\n+		/**\n+		 * Do nothing, we won\'t be deleting.\n+		 *\n+		 * @param event the delete event\n+		 */\n+		public void afterDelete(final LifecycleEvent event) {\n+			// Do nothing\n+		}\n+\n+	}\n+	\n+	private static final Logger LOG = Logger.getLogger(AuditingPersistenceEngineImpl.class);\n+\n+	private Collection<String> auditableClasses;\n+\n+	private BeanFactory beanFactory;\n+\n+	private final ThreadLocal<ChangeOperation> changeOperation = new ThreadLocal<ChangeOperation>();\n+\n+	private final ThreadLocal<Collection<Object>> tlListeners = new ThreadLocal<Collection<Object>>();\n+	\n+	/**\n+	 * Merge the given persistent instance.\n+	 *\n+	 * @param <T> the type of the object\n+	 * @param object the instance to merge\n+	 * @throws EpPersistenceException - in case of persistence errors\n+	 * @return the merged object\n+	 */\n+	@Override\n+	public <T extends Persistence> T merge(final T object) throws EpPersistenceException {\n+\n+		String dirtyClassName = object.getClass().getName();\n+\n+		// Exit if this is not a class we want to track as part of a change set\n+		if (!getAuditableClasses().contains(dirtyClassName)) {\n+			return super.merge(object);\n+		}\n+\n+		beginOperation(object, ChangeType.UPDATE);\n+		T result = super.merge(object);\n+		endOperation();\n+		return result;\n+	}\n+\n+	/**\n+	 * Persist the given instance.\n+	 *\n+	 * @param object the instance to save.\n+	 * @throws EpPersistenceException - in case of persistence errors\n+	 */\n+	@Override\n+	public void save(final Persistence object) throws EpPersistenceException {\n+\n+		String dirtyClassName = object.getClass().getName();\n+\n+		// Exit if this is not a class we want to track as part of a changeset\n+		if (!getAuditableClasses().contains(dirtyClassName)) {\n+			super.save(object);\n+			return;\n+		}\n+\n+		beginOperation(object, ChangeType.CREATE);\n+		addEventListener(new AuditPersistListener());\n+		try {\n+			super.save(object);\n+		} finally {\n+			endOperation();\n+		}\n+	}\n+\n+	/**\n+	 * Update the given persistent instance. Same as merge.\n+	 *\n+	 * @param <T> the type of the object\n+	 * @param object the instance to merge\n+	 * @throws EpPersistenceException - in case of persistence errors\n+	 * @return the merged object\n+	 */\n+	@Override\n+	public <T extends Persistence> T update(final T object) throws EpPersistenceException {\n+		return merge(object);\n+	}\n+\n+	/**\n+	 * Delete an object.\n+	 *\n+	 * @param object the object to delete\n+	 * @throws EpPersistenceException in case of error\n+	 */\n+	@Override\n+	public void delete(final Persistence object) throws EpPersistenceException {\n+		beginOperation(object, ChangeType.DELETE);\n+		super.delete(object);\n+		endOperation();\n+	}\n+\n+	/**\n+	 * Start a new changeset operation.\n+	 *\n+	 * @param object the persistence object being operated on\n+	 * @param type the changeset type\n+	 */\n+	protected void beginOperation(final Persistence object, final ChangeType type) {\n+		addEventListener(new AuditDeleteListener());\n+		addEventListener(new AuditAttachListener());\n+		ChangeTransaction csTransaction = joinTransaction(getTransactionId());\n+		ChangeOperation operation = getBeanFactory().getBean(\"changeOperation\");\n+		operation.setChangeTransaction(csTransaction);\n+		operation.setRootObjectName(object.getClass().getName());\n+		operation.setRootObjectUid(object.getUidPk());\n+		if (object instanceof Entity) {\n+			operation.setRootObjectGuid(((Entity) object).getGuid());\n+		}\n+		operation.setChangeType(type);\n+		operation.setOperationOrder(getNextOperationIndex(csTransaction.getTransactionId()));\n+		PersistenceSession session = getPersistenceSession();\n+		Transaction transaction = session.beginTransaction();\n+		super.save(operation);\n+		transaction.commit();\n+		changeOperation.set(operation);\n+	}\n+\n+	/**\n+	 * End the changeset operation.\n+	 */\n+	protected void endOperation() {\n+		changeOperation.set(null);\n+		Broker broker = getBroker();\n+		Collection<Object> listeners = tlListeners.get();\n+		if (listeners != null) {\n+			for (Object listener : listeners) {\n+				broker.removeLifecycleListener(listener);\n+			}\n+			listeners.clear();\n+		}\n+	}\n+\n+	/**\n+	 * Get the index of the next operation in the given transaction.\n+	 *\n+	 * @param transactionId the ID of the transaction this operation belongs to\n+	 * @return the next operation index (1 if this is the first)\n+	 */\n+	protected int getNextOperationIndex(final String transactionId) {\n+		List<Integer> result = super.retrieveByNamedQuery(\"GET_MAX_CHANGE_OPERATION_INDEX\", new Object[] { transactionId });\n+		if (result.size() > 0 && result.get(0) != null) {\n+			return result.get(0).intValue() + 1;\n+		}\n+		return 1;\n+	}\n+\n+	/**\n+	 * Join the changeset transaction identified, or create a new one if none exist.\n+	 * @param transactionId the ID of the transaction to join.\n+	 *\n+	 * @return a <code>ChangesetTransaction</code>\n+	 */\n+	protected ChangeTransaction joinTransaction(final String transactionId) {\n+		List<ChangeTransaction> result = super.retrieveByNamedQuery(\"FIND_CHANGE_TRANSACTION\", new Object[] { transactionId });\n+		if (result.size() > 0) {\n+			return result.get(0);\n+		}\n+\n+		ChangeTransaction csTransaction = getBeanFactory().getBean(\"changeTransaction\");\n+		csTransaction.setChangeSetGuid(getAuditMetadata().get(\"changeSetGuid\"));\n+		csTransaction.setTransactionId(transactionId);\n+		csTransaction.setUserGuid(getAuditMetadata().get(\"userGuid\"));\n+		PersistenceSession session = getPersistenceSession();\n+		Transaction transaction = session.beginTransaction();\n+		super.save(csTransaction);\n+		transaction.commit();\n+		return csTransaction;\n+	}\n+\n+	/**\n+	 * Get the audit metadata.\n+	 * \n+	 * @return a map of key, value metadata\n+	 */\n+	protected Map<String, String> getAuditMetadata() {\n+		AuditService auditService = getBeanFactory().getBean(\"auditService\");\n+		return auditService.getMetadata();\n+	}\n+	\n+	/**\n+	 * Add the load listener to the broker.\n+	 * @param eventListener the listener to add.\n+	 */\n+	private void addEventListener(final Object eventListener) {\n+		Broker broker = getBroker();\n+		broker.addLifecycleListener(eventListener, null);\n+		if (tlListeners.get() == null) {\n+			tlListeners.set(new HashSet<Object>());\n+		}\n+		tlListeners.get().add(eventListener);\n+	}\n+\n+	private void saveNewObject(final Persistence object) {\n+		if (object instanceof PersistenceCapable) {\n+			ClassMetaData metaData = JPAFacadeHelper.getMetaData(getEntityManager(), object.getClass());\n+			for (FieldMetaData fieldMetaData : metaData.getFields()) {\n+				if (fieldMetaData.isPrimaryKey()) {\n+					LOG.info(\"Field \" + fieldMetaData.getName() + \" is an identity field, ignoring\");\n+					continue;\n+				}\n+				Method method = Reflection.findGetter(object.getClass(), fieldMetaData.getName(), true);\n+				saveChangedField(fieldMetaData.getName(), Reflection.get(object, method), object, ChangeType.CREATE);\n+			}\n+		}\n+	}\n+\n+	/**\n+	 * Save the dirty fields of the given object.\n+	 *\n+	 * @param object\n+	 */\n+	private void saveChangedFields(final PersistenceCapable object) {\n+		OpenJPAStateManager manager = (OpenJPAStateManager) object.pcGetStateManager();\n+		ClassMetaData metaData = JPAFacadeHelper.getMetaData(getEntityManager(), object.getClass());\n+		BitSet dirtySet = manager.getDirty();\n+		for (int dirtyIndex = dirtySet.nextSetBit(0); dirtyIndex >= 0; dirtyIndex = dirtySet.nextSetBit(dirtyIndex + 1)) {\n+			FieldMetaData fieldMetaData = metaData.getField(dirtyIndex);\n+			if (fieldMetaData.isVersion()) {\n+				LOG.info(\"Field \" + fieldMetaData.getName() + \" is a version field, ignoring\");\n+				continue;\n+			}\n+			Method method = Reflection.findGetter(object.getClass(), fieldMetaData.getName(), true);\n+			saveChangedField(fieldMetaData.getName(), Reflection.get(object, method), (Persistence) object, ChangeType.UPDATE);\n+		}\n+	}\n+\n+	/**\n+	 * Log the dirty state of the given object. If the object is a persistence object,\n+	 * we examine it recursively. If it is a collection, we iterate through the values\n+	 * and examine then. Otherwise we just look at the dirty state of the object and leave it at that.\n+	 *\n+	 * @param fieldName the name of the field to save\n+	 * @param field the field object\n+	 * @param parent the object that owns the field\n+	 * @param changeType the type of change\n+	 */\n+	private void saveChangedField(final String fieldName, final Object field, final Persistence parent, final ChangeType changeType) {\n+		if (field instanceof Collection) {\n+			for (Object member : (Collection<Object>) field) {\n+				saveChangedField(fieldName, member, parent, changeType);\n+			}\n+			return;\n+		}\n+\n+		if (field instanceof Map) {\n+			for (Map.Entry<Object, Object> entry : ((Map<Object, Object>) field).entrySet()) {\n+				saveChangedField(fieldName, entry.getValue(), parent, changeType);\n+			}\n+			return;\n+		}\n+\n+		recordDataChanged(parent, fieldName, field, changeType);\n+}\n+\n+	private void recordDataChanged(final Persistence object, final String fieldName, final Object field, final ChangeType changeType) {\n+		DataChanged dataChanged = getBeanFactory().getBean(\"dataChanged\");\n+		dataChanged.setObjectName(object.getClass().getName());\n+		dataChanged.setObjectUid(object.getUidPk());\n+		if (object instanceof Entity) {\n+			dataChanged.setObjectGuid(((Entity) object).getGuid());\n+		}\n+		dataChanged.setFieldName(fieldName);\n+		dataChanged.setFieldNewValue(getFieldValue(field));\n+		dataChanged.setChangeType(changeType);\n+		dataChanged.setChangeOperation(changeOperation.get());\n+		\n+		if (ChangeType.UPDATE.equals(changeType)) {\n+			Persistence oldObject = super.get(object.getClass(), object.getUidPk());\n+			Method method = Reflection.findGetter(oldObject.getClass(), fieldName, true);\n+			dataChanged.setFieldOldValue(getFieldValue(Reflection.get(object, method)));\n+		}\n+		\n+		super.saveOrMerge(dataChanged);\n+	}\n+\n+	private String getFieldValue(final Object field) {\n+		if (field == null) {\n+			return null;\n+		}\n+		if (field instanceof Entity) {\n+			return ((Entity) field).getGuid();\n+		}\n+		if (field instanceof Persistence) {\n+			return String.valueOf(((Persistence) field).getUidPk());\n+		}\n+		return field.toString();\n+	}\n+\n+	private void createDeleteset(final Persistence object) {\n+		DataChanged dataChanged = getBeanFactory().getBean(\"dataChanged\");\n+		dataChanged.setObjectName(object.getClass().getName());\n+		dataChanged.setObjectUid(object.getUidPk());\n+		if (object instanceof Entity) {\n+			dataChanged.setObjectGuid(((Entity) object).getGuid());\n+		}\n+		dataChanged.setChangeType(ChangeType.DELETE);\n+		dataChanged.setChangeOperation(changeOperation.get());\n+		PersistenceSession session = getPersistenceSession();\n+		Transaction transaction = session.beginTransaction();\n+		session.save(dataChanged);\n+		transaction.commit();\n+	}\n+\n+	/**\n+	 * Get the collection of class names that we want to audit.\n+	 *\n+	 * @return the collection of auditable classes.\n+	 */\n+	public Collection<String> getAuditableClasses() {\n+		return auditableClasses;\n+	}\n+\n+	/**\n+	 * Set the list of class names whose changes can be audited.\n+	 *\n+	 * @param auditableClasses the collection of auditable classes to set\n+	 */\n+	public void setAuditableClasses(final Collection<String> auditableClasses) {\n+		this.auditableClasses = auditableClasses;\n+	}\n+\n+	/**\n+	 * Get the bean factory for creating new beans.\n+	 *\n+	 * @return the beanFactory\n+	 */\n+	protected BeanFactory getBeanFactory() {\n+		return beanFactory;\n+	}\n+\n+	/**\n+	 * Set the factory used for creating new beans.\n+	 *\n+	 * @param beanFactory the beanFactory to set\n+	 */\n+	public void setBeanFactory(final BeanFactory beanFactory) {\n+		this.beanFactory = beanFactory;\n+	}\n+\n+	/**\n+	 * Get an identifier for this transaction.\n+	 *\n+	 * @return the transaction key hashcode as a string\n+	 */\n+	public String getTransactionId() {\n+		ManagedRuntime runtime = getBroker().getManagedRuntime();\n+		int transactionId = 0;\n+		try {\n+			Object key = runtime.getTransactionKey();\n+			transactionId = key.hashCode();\n+		} catch (Exception e) {\n+			LOG.error(\"Error trying to find transaction\", e);\n+		}\n+		return String.valueOf(transactionId);\n+	}\n+\n+	/**\n+	 * Get the OpenJPA Broker.\n+	 *\n+	 * @return the broker\n+	 */\n+	protected Broker getBroker() {\n+		OpenJPAEntityManager openjpaEM = OpenJPAPersistence.cast(getEntityManager());\n+		return JPAFacadeHelper.toBroker(openjpaEM);\n+	}\n+\n+}\n+\ndiff -r 1fad4f8fee9c com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/audit/impl/ChangeOperationImpl.java\n--- /dev/null	Thu Jan 01 00:00:00 1970 +0000\n+++ b/com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/audit/impl/ChangeOperationImpl.java	Mon Feb 16 15:44:38 2009 -0800\n@@ -0,0 +1,182 @@\n+/**\n+ *\n+ */\n+package com.elasticpath.domain.audit.impl;\n+\n+import javax.persistence.Basic;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.Table;\n+import javax.persistence.TableGenerator;\n+\n+import org.apache.renamed.openjpa.persistence.Externalizer;\n+import org.apache.renamed.openjpa.persistence.Factory;\n+import org.apache.renamed.openjpa.persistence.Persistent;\n+import org.apache.renamed.openjpa.persistence.jdbc.ForeignKey;\n+\n+import com.elasticpath.domain.audit.ChangeOperation;\n+import com.elasticpath.domain.audit.ChangeTransaction;\n+import com.elasticpath.domain.audit.ChangeType;\n+import com.elasticpath.domain.impl.AbstractEntityImpl;\n+\n+/**\n+ * An operation that results in a set of changes.\n+ *\n+ */\n+@Entity\n+@Table(name = ChangeOperationImpl.TABLE_NAME)\n+public class ChangeOperationImpl extends AbstractEntityImpl implements ChangeOperation {\n+\n+	/** The name of the table & generator to use for persistence. */\n+	public static final String TABLE_NAME = \"TCHANGEOPERATION\";\n+\n+	private long uidPk;\n+\n+	private ChangeTransaction changeTransaction;\n+\n+	private int operationOrder;\n+\n+	private String rootObjectName;\n+\n+	private long rootObjectUid;\n+\n+	private String rootObjectGuid;\n+\n+	private ChangeType changeType;\n+\n+	/**\n+	 * Gets the unique identifier for this domain model object.\n+	 * @return the unique identifier.\n+	 */\n+	@Id\n+	@Column(name = \"UIDPK\")\n+	@GeneratedValue(strategy = GenerationType.TABLE, generator = TABLE_NAME)\n+	@TableGenerator(name = TABLE_NAME, table = \"JPA_GENERATED_KEYS\",\n+					pkColumnName = \"ID\", valueColumnName = \"LAST_VALUE\", pkColumnValue = TABLE_NAME)\n+	public long getUidPk() {\n+		return uidPk;\n+	}\n+\n+	/**\n+	 * Sets the unique identifier for this domain model object.\n+	 *\n+	 * @param uidPk the new unique identifier.\n+	 */\n+	public void setUidPk(final long uidPk) {\n+		this.uidPk = uidPk;\n+	}\n+\n+	/**\n+	 * Get the business transaction this operation belongs to.\n+	 *\n+	 * @return the changesetTransaction\n+	 */\n+	@ManyToOne(targetEntity = ChangeTransactionImpl.class)\n+	@JoinColumn(name = \"CHANGE_TRANSACTION_UID\")\n+	@ForeignKey\n+	public ChangeTransaction getChangeTransaction() {\n+		return changeTransaction;\n+	}\n+\n+	/**\n+	 * Set the business transaction this operation belongs to.\n+	 *\n+	 * @param changeTransaction the changeTransaction to set\n+	 */\n+	public void setChangeTransaction(final ChangeTransaction changeTransaction) {\n+		this.changeTransaction = changeTransaction;\n+	}\n+\n+	/**\n+	 * @return the order\n+	 */\n+	@Basic\n+	@Column(name = \"OPERATION_ORDER\")\n+	public int getOperationOrder() {\n+		return operationOrder;\n+	}\n+\n+	/**\n+	 * @param operationOrder the order to set\n+	 */\n+	public void setOperationOrder(final int operationOrder) {\n+		this.operationOrder = operationOrder;\n+	}\n+\n+	/**\n+	 * @return the rootObjectName\n+	 */\n+	@Basic\n+	@Column(name = \"ROOT_OBJECT_NAME\")\n+	public String getRootObjectName() {\n+		return rootObjectName;\n+	}\n+\n+	/**\n+	 * @param rootObjectName the rootObjectName to set\n+	 */\n+	public void setRootObjectName(final String rootObjectName) {\n+		this.rootObjectName = rootObjectName;\n+	}\n+\n+	/**\n+	 * @return the rootObjectUid\n+	 */\n+	@Basic\n+	@Column(name = \"ROOT_OBJECT_UID\")\n+	public long getRootObjectUid() {\n+		return rootObjectUid;\n+	}\n+\n+	/**\n+	 * @param rootObjectUid the rootObjectUid to set\n+	 */\n+	public void setRootObjectUid(final long rootObjectUid) {\n+		this.rootObjectUid = rootObjectUid;\n+	}\n+\n+	/**\n+	 * @return the rootObjectGuid\n+	 */\n+	@Basic\n+	@Column(name = \"ROOT_OBJECT_GUID\")\n+	public String getRootObjectGuid() {\n+		return rootObjectGuid;\n+	}\n+\n+	/**\n+	 * @param rootObjectGuid the rootObjectGuid to set\n+	 */\n+	public void setRootObjectGuid(final String rootObjectGuid) {\n+		this.rootObjectGuid = rootObjectGuid;\n+	}\n+\n+	/**\n+	 * Get the change type.\n+	 *\n+	 * @return the <code>ChangeType</code>\n+	 */\n+	@Persistent\n+	@Column(name = \"CHANGE_TYPE\")\n+	@Externalizer(\"getName\")\n+	@Factory(\"getEnum\")\n+	public ChangeType getChangeType() {\n+		return changeType;\n+	}\n+\n+	/**\n+	 * Set the change type.\n+	 *\n+	 * @param changeType the <code>ChangeType</code> to set\n+	 */\n+	public void setChangeType(final ChangeType changeType) {\n+		this.changeType = changeType;\n+	}\n+\n+\n+}\ndiff -r 1fad4f8fee9c com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/audit/impl/ChangeTransactionImpl.java\n--- /dev/null	Thu Jan 01 00:00:00 1970 +0000\n+++ b/com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/audit/impl/ChangeTransactionImpl.java	Mon Feb 16 15:44:38 2009 -0800\n@@ -0,0 +1,119 @@\n+/**\n+ * Copyright (c) Elastic Path Software Inc., 2009\n+ */\n+package com.elasticpath.domain.audit.impl;\n+\n+import javax.persistence.Basic;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.Table;\n+import javax.persistence.TableGenerator;\n+\n+import com.elasticpath.domain.audit.ChangeTransaction;\n+import com.elasticpath.domain.impl.AbstractEntityImpl;\n+\n+/**\n+ * Defines a change transaction. This is the <b>business</b> transaction that\n+ * surrounds a collection of change operations.\n+ */\n+@Entity\n+@Table(name = ChangeTransactionImpl.TABLE_NAME)\n+public class ChangeTransactionImpl extends AbstractEntityImpl implements ChangeTransaction {\n+\n+	/** The name of the table & generator to use for persistence. */\n+	public static final String TABLE_NAME = \"TCHANGETRANSACTION\";\n+\n+	private long uidPk;\n+\n+	private String userGuid;\n+\n+	private String changeSetGuid;\n+\n+	private String transactionId;\n+\n+	/**\n+	 * Gets the unique identifier for this domain model object.\n+	 * @return the unique identifier.\n+	 */\n+	@Id\n+	@Column(name = \"UIDPK\")\n+	@GeneratedValue(strategy = GenerationType.TABLE, generator = TABLE_NAME)\n+	@TableGenerator(name = TABLE_NAME, table = \"JPA_GENERATED_KEYS\",\n+					pkColumnName = \"ID\", valueColumnName = \"LAST_VALUE\", pkColumnValue = TABLE_NAME)\n+	public long getUidPk() {\n+		return uidPk;\n+	}\n+\n+	/**\n+	 * Sets the unique identifier for this domain model object.\n+	 *\n+	 * @param uidPk the new unique identifier.\n+	 */\n+	public void setUidPk(final long uidPk) {\n+		this.uidPk = uidPk;\n+	}\n+\n+	/**\n+	 * Get the GUID of the <code>ChangeSet</code> that this transaction belongs to.\n+	 *\n+	 * @return the GUID\n+	 */\n+	@Basic\n+	@Column(name = \"CHANGESET_GUID\")\n+	public String getChangeSetGuid() {\n+		return changeSetGuid;\n+	}\n+\n+	/**\n+	 * Set the GUID of the Change Set that owns this transaction.\n+	 *\n+	 * @param changeSetGuid the GUID of the <code>ChangeSet</code> to set\n+	 */\n+	public void setChangeSetGuid(final String changeSetGuid) {\n+		this.changeSetGuid = changeSetGuid;\n+	}\n+\n+	/**\n+	 * Get the GUID of the user making the change.\n+	 *\n+	 * @return the GUID of the user\n+	 */\n+	@Basic\n+	@Column(name = \"USER_GUID\")\n+	public String getUserGuid() {\n+		return userGuid;\n+	}\n+\n+	/**\n+	 * Set the GUID of the user making the change.\n+	 *\n+	 * @param userGuid the user GUID to set\n+	 */\n+	public void setUserGuid(final String userGuid) {\n+		this.userGuid = userGuid;\n+	}\n+\n+	/**\n+	 * Get an identifier for the transaction.\n+	 *\n+	 * @return the transactionId\n+	 */\n+	@Basic\n+	@Column(name = \"TRANSACTION_ID\")\n+	public String getTransactionId() {\n+		return transactionId;\n+	}\n+\n+	/**\n+	 * Set the transaction identifier.\n+	 *\n+	 * @param transactionId the transactionId to set\n+	 */\n+	public void setTransactionId(final String transactionId) {\n+		this.transactionId = transactionId;\n+	}\n+}\n+\ndiff -r 1fad4f8fee9c com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/audit/impl/DataChangedImpl.java\n--- /dev/null	Thu Jan 01 00:00:00 1970 +0000\n+++ b/com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/audit/impl/DataChangedImpl.java	Mon Feb 16 15:44:38 2009 -0800\n@@ -0,0 +1,240 @@\n+/**\n+ * Copyright (c) Elastic Path Software Inc., 2008\n+ */\n+package com.elasticpath.domain.audit.impl;\n+\n+import javax.persistence.Basic;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.Table;\n+import javax.persistence.TableGenerator;\n+\n+import org.apache.renamed.openjpa.persistence.Externalizer;\n+import org.apache.renamed.openjpa.persistence.Factory;\n+import org.apache.renamed.openjpa.persistence.Persistent;\n+import org.apache.renamed.openjpa.persistence.jdbc.ForeignKey;\n+\n+import com.elasticpath.commons.constants.GlobalConstants;\n+import com.elasticpath.domain.audit.ChangeOperation;\n+import com.elasticpath.domain.audit.ChangeType;\n+import com.elasticpath.domain.audit.DataChanged;\n+import com.elasticpath.domain.impl.AbstractEntityImpl;\n+\n+/**\n+ * Represents a change set.\n+ */\n+@Entity\n+@Table(name = DataChangedImpl.TABLE_NAME)\n+public class DataChangedImpl extends AbstractEntityImpl implements DataChanged {\n+\n+	/** The name of the table & generator to use for persistence. */\n+	public static final String TABLE_NAME = \"TDATACHANGED\";\n+\n+	private long uidPk;\n+\n+	private String objectName;\n+\n+	private long objectUid;\n+\n+	private String objectGuid;\n+\n+	private String fieldName;\n+\n+	private String fieldOldValue;\n+	\n+	private String fieldNewValue;\n+\n+	private ChangeType changeType;\n+\n+	private ChangeOperation changeOperation;\n+\n+	/**\n+	 * Gets the unique identifier for this domain model object.\n+	 * @return the unique identifier.\n+	 */\n+	@Id\n+	@Column(name = \"UIDPK\")\n+	@GeneratedValue(strategy = GenerationType.TABLE, generator = TABLE_NAME)\n+	@TableGenerator(name = TABLE_NAME, table = \"JPA_GENERATED_KEYS\",\n+					pkColumnName = \"ID\", valueColumnName = \"LAST_VALUE\", pkColumnValue = TABLE_NAME)\n+	public long getUidPk() {\n+		return uidPk;\n+	}\n+\n+	/**\n+	 * Sets the unique identifier for this domain model object.\n+	 *\n+	 * @param uidPk the new unique identifier.\n+	 */\n+	public void setUidPk(final long uidPk) {\n+		this.uidPk = uidPk;\n+	}\n+\n+	/**\n+	 * Get the name of the object that has a change.\n+	 *\n+	 * @return the object name\n+	 */\n+	@Basic\n+	@Column(name = \"OBJECT_NAME\")\n+	public String getObjectName() {\n+		return objectName;\n+	}\n+\n+	/**\n+	 * Set the name of the object that has a change.\n+	 *\n+	 * @param objectName the object name to set\n+	 */\n+	public void setObjectName(final String objectName) {\n+		this.objectName = objectName;\n+	}\n+\n+	/**\n+	 * Get the identity of the changed object.\n+	 *\n+	 * @return the objectUid\n+	 */\n+	@Basic\n+	@Column(name = \"OBJECT_UID\")\n+	public long getObjectUid() {\n+		return objectUid;\n+	}\n+\n+	/**\n+	 * Set the UID of the changed object.\n+	 *\n+	 * @param objectUid the objectUid to set\n+	 */\n+	public void setObjectUid(final long objectUid) {\n+		this.objectUid = objectUid;\n+	}\n+\n+	/**\n+	 * Get the object GUID.\n+	 *\n+	 * @return the objectGuid\n+	 */\n+	@Basic\n+	@Column(name = \"OBJECT_GUID\")\n+	public String getObjectGuid() {\n+		return objectGuid;\n+	}\n+\n+	/**\n+	 * Set the object GUID.\n+	 *\n+	 * @param objectGuid the objectGuid to set\n+	 */\n+	public void setObjectGuid(final String objectGuid) {\n+		this.objectGuid = objectGuid;\n+	}\n+\n+	/**\n+	 * Get the name of the field that has changed.\n+	 *\n+	 * @return the fieldName\n+	 */\n+	@Basic\n+	@Column(name = \"FIELD_NAME\")\n+	public String getFieldName() {\n+		return fieldName;\n+	}\n+\n+	/**\n+	 * Set the name of the field that has changed.\n+	 *\n+	 * @param fieldName the fieldName to set\n+	 */\n+	public void setFieldName(final String fieldName) {\n+		this.fieldName = fieldName;\n+	}\n+\n+	/**\n+	 * Get the old value of the changed field.\n+	 *\n+	 * @return the fieldValue\n+	 */\n+	@Column(name = \"FIELD_OLD_VALUE\", length = GlobalConstants.LONG_TEXT_MAX_LENGTH)\n+	public String getFieldOldValue() {\n+		return fieldOldValue;\n+	}\n+\n+	/**\n+	 * Set the old value of the changed field.\n+	 *\n+	 * @param fieldValue the fieldValue to set\n+	 */\n+	public void setFieldOldValue(final String fieldValue) {\n+		this.fieldOldValue = fieldValue;\n+	}\n+\n+	/**\n+	 * Get the new value of the changed field.\n+	 *\n+	 * @return the fieldValue\n+	 */\n+	@Column(name = \"FIELD_NEW_VALUE\", length = GlobalConstants.LONG_TEXT_MAX_LENGTH)\n+	public String getFieldNewValue() {\n+		return fieldNewValue;\n+	}\n+\n+	/**\n+	 * Set the new value of the changed field.\n+	 *\n+	 * @param fieldValue the fieldValue to set\n+	 */\n+	public void setFieldNewValue(final String fieldValue) {\n+		this.fieldNewValue = fieldValue;\n+	}\n+\n+	/**\n+	 * Get the change type.\n+	 *\n+	 * @return the <code>ChangeType</code>\n+	 */\n+	@Persistent\n+	@Column(name = \"CHANGE_TYPE\")\n+	@Externalizer(\"getName\")\n+	@Factory(\"getEnum\")\n+	public ChangeType getChangeType() {\n+		return changeType;\n+	}\n+\n+	/**\n+	 * Set the change type.\n+	 *\n+	 * @param changeType the <code>ChangeType</code> to set\n+	 */\n+	public void setChangeType(final ChangeType changeType) {\n+		this.changeType = changeType;\n+	}\n+\n+	/**\n+	 * Get the operation this change record is part of.\n+	 *\n+	 * @return the <code>ChangeOperation</code>\n+	 */\n+	@ManyToOne(targetEntity = ChangeOperationImpl.class)\n+	@JoinColumn(name = \"CHANGE_OPERATION_UID\")\n+	@ForeignKey\n+	public ChangeOperation getChangeOperation() {\n+		return changeOperation;\n+	}\n+\n+	/**\n+	 * Set the operation this change record is part of.\n+	 *\n+	 * @param changeOperation the <code>ChangeOperation</code> to set\n+	 */\n+	public void setChangeOperation(final ChangeOperation changeOperation) {\n+		this.changeOperation = changeOperation;\n+	}\n+\n+\n+}\ndiff -r 1fad4f8fee9c com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/impl/PrototypeBeanFactory.java\n--- a/com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/impl/PrototypeBeanFactory.java	Wed Feb 11 17:51:06 2009 -0800\n+++ b/com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/impl/PrototypeBeanFactory.java	Mon Feb 16 15:44:38 2009 -0800\n@@ -394,6 +394,9 @@\n 		addBean(ContextIdNames.BUSINESS_OBJECT_METADATA, \"com.elasticpath.domain.objectgroup.impl.BusinessObjectMetadataImpl\");\n 		addBean(ContextIdNames.CHANGESET_MEMBER, \"com.elasticpath.domain.changeset.impl.ChangeSetMemberImpl\");\n 		addBean(ContextIdNames.DYNAMIC_CONTENT , \"com.elasticpath.domain.campaign.impl.DynamicContentImpl\");\n+		addBean(\"changeTransaction\", \"com.elasticpath.domain.audit.impl.ChangeTransactionImpl\");\n+		addBean(\"changeOperation\", \"com.elasticpath.domain.audit.impl.ChangeOperationImpl\");\n+		addBean(\"dataChanged\", \"com.elasticpath.domain.audit.impl.DataChangedImpl\");\n 	}\n \n 	/**\ndiff -r 1fad4f8fee9c com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/service/audit/AuditService.java\n--- /dev/null	Thu Jan 01 00:00:00 1970 +0000\n+++ b/com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/service/audit/AuditService.java	Mon Feb 16 15:44:38 2009 -0800\n@@ -0,0 +1,28 @@\n+/**\n+ * Copyright (c) Elastic Path Software Inc., 2009\n+ */\n+package com.elasticpath.service.audit;\n+\n+import java.util.Map;\n+\n+/**\n+ * Service methods for audit functionality.\n+ */\n+public interface AuditService {\n+\n+	/**\n+	 * Register auditing metadata.\n+	 * \n+	 * @param metadata the metadata to register\n+	 */\n+	void registerMetadata(final Map<String, String> metadata);\n+\n+\n+	/**\n+	 * Get the auditing metadata.\n+	 * \n+	 * @return a map of key, value metadata.\n+	 */\n+	Map<String, String> getMetadata();\n+\n+}\n\\ No newline at end of file\ndiff -r 1fad4f8fee9c com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/service/audit/impl/AuditHttpInvokerServiceExporter.java\n--- /dev/null	Thu Jan 01 00:00:00 1970 +0000\n+++ b/com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/service/audit/impl/AuditHttpInvokerServiceExporter.java	Mon Feb 16 15:44:38 2009 -0800\n@@ -0,0 +1,64 @@\n+/**\n+ * Copyright (c) Elastic Path Software Inc., 2008\n+ */\n+package com.elasticpath.service.audit.impl;\n+\n+import java.io.IOException;\n+import java.util.Map;\n+\n+import javax.servlet.http.HttpServletRequest;\n+\n+import org.springframework.beans.BeansException;\n+import org.springframework.beans.factory.BeanFactory;\n+import org.springframework.beans.factory.BeanFactoryAware;\n+import org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter;\n+import org.springframework.remoting.support.RemoteInvocation;\n+\n+import com.elasticpath.service.audit.AuditService;\n+\n+/**\n+ * Extension to the Spring HttpInvokerServiceExporter that tracks info about the caller. \n+ */\n+public class AuditHttpInvokerServiceExporter extends HttpInvokerServiceExporter implements BeanFactoryAware {\n+\n+	private BeanFactory beanFactory;\n+	\n+	/**\n+	 * Set the bean factory used for getting beans.\n+	 * \n+	 * @param beanFactory the <code>BeanFactory</code> to use\n+	 * @throws BeansException in case of error\n+	 */\n+	public void setBeanFactory(final BeanFactory beanFactory) throws BeansException {\n+		this.beanFactory = beanFactory;\n+	}\n+\n+	/**\n+	 * When a read is called on the remote invocation, intercept it and read off the\n+	 * attribute we require.\n+	 * \n+	 * @param request the request involved\n+	 * @return the <code>RemoteInvocation</code>\n+	 * @throws IOException in case of I/O failure\n+	 * @throws ClassNotFoundException if thrown during deserialization\n+	 */\n+	@Override\n+	protected RemoteInvocation readRemoteInvocation(final HttpServletRequest request) throws IOException, ClassNotFoundException {\n+		RemoteInvocation remoteInvocation = super.readRemoteInvocation(request);\n+		Map<String, String> metadata = (Map<String, String>) remoteInvocation.getAttribute(\"auditMetadata\");\n+		processMetadata(metadata);\n+		return remoteInvocation;\n+	}\n+\n+	/**\n+	 * Process the metadata - register it on the audit service.\n+	 * \n+	 * @param metadata the metadata to register.\n+	 */\n+	protected void processMetadata(final Map<String, String> metadata) {\n+		AuditService auditService = (AuditService) beanFactory.getBean(\"auditService\");\n+		auditService.registerMetadata(metadata);\n+	}\n+\n+	\n+}\ndiff -r 1fad4f8fee9c com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/service/audit/impl/AuditServiceImpl.java\n--- /dev/null	Thu Jan 01 00:00:00 1970 +0000\n+++ b/com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/service/audit/impl/AuditServiceImpl.java	Mon Feb 16 15:44:38 2009 -0800\n@@ -0,0 +1,46 @@\n+/**\n+ * Copyright (c) Elastic Path Software Inc., 2009\n+ */\n+package com.elasticpath.service.audit.impl;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import com.elasticpath.service.audit.AuditService;\n+import com.elasticpath.service.impl.AbstractEpServiceImpl;\n+\n+/**\n+ * Audit service.\n+ */\n+public class AuditServiceImpl extends AbstractEpServiceImpl implements AuditService {\n+\n+	private final ThreadLocal<Map<String, String>> metadata = new ThreadLocal<Map<String, String>>() {\n+	    @Override\n+		protected synchronized Map<String, String> initialValue() {\n+	        return new HashMap<String, String>();\n+	    }\n+	};\n+\n+	\n+	/**\n+	 * Register auditing metadata and place in a <code>ThreadLocal</code> variable.\n+	 * \n+	 * @param metadata the metadata to register\n+	 */\n+	public void registerMetadata(final Map<String, String> metadata) {\n+		this.metadata.set(metadata); \n+	}\n+\n+\n+	/**\n+	 * Get the auditing metadata.\n+	 * \n+	 * @return a map of key, value metadata.\n+	 */\n+	public Map<String, String> getMetadata() {\n+		return metadata.get();\n+	}\n+\n+	\n+	\n+}\n\n',13,'1312f29647adecad7558d2454669b9'),('title',71,'Unknown','content',1,'4f3225a041912849ea5d652b274b86'),('title',72,'Unknown','content',1,'0662eb15f1f57e0f83829fe6576a05'),('Blah.java',73,'Unknown','\r\npublic class Blah {\r\n\r\n	private String name;\r\n	private String address;\r\n	/**\r\n	 * @return the name\r\n	 */\r\n	public String getName() {\r\n		return name;\r\n	}\r\n	/**\r\n	 * @param name the name to set\r\n	 */\r\n	public void setName(String name) {\r\n		this.name = name;\r\n	}\r\n	/**\r\n	 * @return the address\r\n	 */\r\n	public String getAddress() {\r\n		return address;\r\n	}\r\n	/**\r\n	 * @param address the address to set\r\n	 */\r\n	public void setAddress(String address) {\r\n		this.address = address;\r\n	}\r\n	\r\n	\r\n}\r\n',1,'dcf995bb10ca6b828b1130b8d41bb6'),('Blah.java',74,'Unknown','\r\npublic class Blah {\r\n\r\n	private String name;\r\n	private String address;\r\n	/**\r\n	 * @return the name\r\n	 */\r\n	public String getName() {\r\n		return name;\r\n	}\r\n	/**\r\n	 * @param name the name to set\r\n	 */\r\n	public void setName(String name) {\r\n		this.name = name;\r\n	}\r\n	/**\r\n	 * @return the address\r\n	 */\r\n	public String getAddress() {\r\n		return address;\r\n	}\r\n	/**\r\n	 * @param address the address to set\r\n	 */\r\n	public void setAddress(String address) {\r\n		this.address = address;\r\n	}\r\n	\r\n	\r\n}\r\n',1,'b7d6658080fc7ace5273bdedc2acab'),('blah test blah',75,'Jon','blah test blah',1,'c55f73c8e93236e670c6387e7fa64f'),('Blah.java',76,'Unknown','\r\npublic class Blah {\r\n\r\n	private String name;\r\n	private String address;\r\n	/**\r\n	 * @return the name\r\n	 */\r\n	public String getName() {\r\n		return name;\r\n	}\r\n	/**\r\n	 * @param name the name to set\r\n	 */\r\n	public void setName(String name) {\r\n		this.name = name;\r\n	}\r\n	/**\r\n	 * @return the address\r\n	 */\r\n	public String getAddress() {\r\n		return address;\r\n	}\r\n	/**\r\n	 * @param address the address to set\r\n	 */\r\n	public void setAddress(String address) {\r\n		this.address = address;\r\n	}\r\n	\r\n	\r\n}\r\n',1,'2e5775c2794cdf217db124c74e6008'),('Blah.java',77,'Unknown','\r\npublic class Blah {\r\n\r\n	private String name;\r\n	private String address;\r\n	/**\r\n	 * @return the name\r\n	 */\r\n	public String getName() {\r\n		return name;\r\n	}\r\n	/**\r\n	 * @param name the name to set\r\n	 */\r\n	public void setName(String name) {\r\n		this.name = name;\r\n	}\r\n	/**\r\n	 * @return the address\r\n	 */\r\n	public String getAddress() {\r\n		return address;\r\n	}\r\n	/**\r\n	 * @param address the address to set\r\n	 */\r\n	public void setAddress(String address) {\r\n		this.address = address;\r\n	}\r\n	\r\n	\r\n}\r\n',1,'69e45800ca683812fbccd4f98bc439'),('JavaClass.java',78,'Unknown','/**\r\n * JavaClass.\r\n * @author jon\r\n */\r\npublic class JavaClass {\r\n\r\n	private String name;\r\n	private int age;\r\n	private String course;\r\n	public String getName() {\r\n		return name;\r\n	}\r\n	public void setName(String name) {\r\n		this.name = name;\r\n	}\r\n	public int getAge() {\r\n		return age;\r\n	}\r\n	public void setAge(int age) {\r\n		this.age = age;\r\n	}\r\n	public String getCourse() {\r\n		return course;\r\n	}\r\n	public void setCourse(String course) {\r\n		this.course = course;\r\n	}\r\n}\r\n',1,'8ab7517cf9195953635ef2a9de8702'),('JavaClass.java',79,'Unknown','/**\r\n * JavaClass.\r\n * @author jon\r\n */\r\npublic class JavaClass {\r\n\r\n	private String name;\r\n	private int age;\r\n	private String course;\r\n	public String getName() {\r\n		return name;\r\n	}\r\n	public void setName(String name) {\r\n		this.name = name;\r\n	}\r\n	public int getAge() {\r\n		return age;\r\n	}\r\n	public void setAge(int age) {\r\n		this.age = age;\r\n	}\r\n	public String getCourse() {\r\n		return course;\r\n	}\r\n	public void setCourse(String course) {\r\n		this.course = course;\r\n	}\r\n}\r\n',1,'28f52140b41c4b49ca8b0fefbdad77'),('NewPastebinAction.java',80,'Unknown','package pbinutility.popup.actions;\n\nimport java.io.IOException;\n\nimport org.apache.commons.httpclient.HttpException;\nimport org.eclipse.core.runtime.IAdaptable;\nimport org.eclipse.jface.action.IAction;\nimport org.eclipse.jface.dialogs.MessageDialog;\nimport org.eclipse.jface.viewers.ISelection;\nimport org.eclipse.swt.widgets.Shell;\nimport org.eclipse.ui.IActionDelegate;\nimport org.eclipse.ui.IObjectActionDelegate;\nimport org.eclipse.ui.IWorkbenchPart;\n\nimport pbinutility.OkInputDialog;\nimport pbinutility.model.PasteBin;\nimport pbinutility.web.PBinWebClient;\n\npublic class NewPastebinAction implements IObjectActionDelegate {\n\n	private static final String LANGUAGE_JAVA = \"java\";\n\n	private static final String TITLE = \"PbinUtility Plug-in\";\n\n	private IWorkbenchPart workbenchPart;\n	\n	private PasteBin pasteBin;\n\n	/**\n	 * Constructor for Action1.\n	 */\n	public NewPastebinAction() {\n		//super();\n	}\n\n	/**\n	 * @see IObjectActionDelegate#setActivePart(IAction, IWorkbenchPart)\n	 */\n	public void setActivePart(IAction action, IWorkbenchPart targetPart) {\n		this.workbenchPart = targetPart;\n	}\n\n	/**\n	 * @see IActionDelegate#run(IAction)\n	 */\n	public void run(IAction action) {\n\n		Shell shell = new Shell();\n\n		ISelection selection = workbenchPart.getSite().getSelectionProvider().getSelection();\n\n		if (selection instanceof org.eclipse.jface.viewers.StructuredSelection) {\n			org.eclipse.jface.viewers.StructuredSelection structuredSelection = (org.eclipse.jface.viewers.StructuredSelection) selection;\n\n			if (structuredSelection instanceof org.eclipse.jface.viewers.TreeSelection) {\n				\n				org.eclipse.jface.viewers.TreeSelection treeSelection = (org.eclipse.jface.viewers.TreeSelection) structuredSelection;\n				IAdaptable firstElement = (IAdaptable) treeSelection.getFirstElement();\n\n				// Relies on an internal API, bad juju\n				if (firstElement instanceof org.eclipse.jdt.internal.core.CompilationUnit) {\n					org.eclipse.jdt.internal.core.CompilationUnit compilationUnit = (org.eclipse.jdt.internal.core.CompilationUnit) firstElement;									\n					String editorSelection = new String(compilationUnit.getContents());\n					pasteBin = new PasteBin(workbenchPart.getTitle(), LANGUAGE_JAVA, \"Anonymous\",\n											editorSelection);\n				}\n\n				workbenchPart.getSite().getSelectionProvider();\n\n			}\n		}\n\n		if (selection instanceof org.eclipse.jface.text.TextSelection) {			\n			org.eclipse.jface.text.TextSelection textSelection = (org.eclipse.jface.text.TextSelection) selection;					\n			pasteBin = new PasteBin(workbenchPart.getTitle(), LANGUAGE_JAVA, \"Anonymous\",\n									textSelection.getText());\n		}\n\n		try {		\n\n			String pasteBinUrl = new PBinWebClient().createPasteBin(pasteBin);\n\n			if (pasteBinUrl != null) {\n\n				openEditableInformationDialog(shell, pasteBinUrl);\n\n			} else {\n				MessageDialog.openError(shell, \"Create Pastebin\", \"Could not create pastebin\");\n			}\n\n		} catch (HttpException he) {\n			he.printStackTrace();\n			String message = \"Could not create the pastebin\";\n			handleException(shell, message);\n		} catch (IOException e) {\n			e.printStackTrace();\n			String message = \"Problem communicating with remote pbin website\";\n			handleException(shell, message);\n		}\n	}\n\n	private void openEditableInformationDialog(Shell shell, String pasteBinUrl) {\n		String message = \"Your pastebin has been created here:\";\n		new OkInputDialog(shell, TITLE, message, pasteBinUrl, null).open();\n	}\n\n	/**\n	 * Handle exception.\n	 * \n	 * @param shell\n	 * @param message\n	 */\n	private void handleException(Shell shell, String message) {\n		MessageDialog.openError(shell, TITLE, message);\n	}\n\n	/**\n	 * @see IActionDelegate#selectionChanged(IAction, ISelection)\n	 */\n	public void selectionChanged(IAction action, ISelection selection) {\n		// does nothing		\n	}\n\n}\n',1,'d3a48a35af907489a39b26d75cc19a'),('VirtualCatalogDialog.java',81,'Unknown','/**\r\n * Copyright (c) Elastic Path Software Inc., 2007\r\n */\r\npackage com.elasticpath.cmclient.catalog.dialogs.catalog;\r\n\r\nimport java.text.DateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.Comparator;\r\nimport java.util.Currency;\r\nimport java.util.HashSet;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\nimport java.util.Map;\r\nimport java.util.Set;\r\n\r\nimport org.apache.commons.collections.list.TreeList;\r\nimport org.apache.commons.lang.StringUtils;\r\nimport org.apache.log4j.Logger;\r\nimport org.eclipse.core.databinding.DataBindingContext;\r\nimport org.eclipse.core.databinding.observable.value.IObservableValue;\r\nimport org.eclipse.core.databinding.validation.IValidator;\r\nimport org.eclipse.core.runtime.IStatus;\r\nimport org.eclipse.core.runtime.Status;\r\nimport org.eclipse.swt.custom.CCombo;\r\nimport org.eclipse.swt.graphics.Image;\r\nimport org.eclipse.swt.program.Program;\r\nimport org.eclipse.swt.widgets.Label;\r\nimport org.eclipse.swt.widgets.Shell;\r\nimport org.eclipse.swt.widgets.Text;\r\nimport org.eclipse.ui.forms.events.HyperlinkAdapter;\r\nimport org.eclipse.ui.forms.events.HyperlinkEvent;\r\nimport org.eclipse.ui.forms.widgets.Hyperlink;\r\n\r\nimport com.elasticpath.cmclient.catalog.CatalogImageRegistry;\r\nimport com.elasticpath.cmclient.catalog.CatalogMessages;\r\nimport com.elasticpath.cmclient.catalog.CatalogPermissions;\r\nimport com.elasticpath.cmclient.core.Application;\r\nimport com.elasticpath.cmclient.core.CoreImageRegistry;\r\nimport com.elasticpath.cmclient.core.CorePlugin;\r\nimport com.elasticpath.cmclient.core.binding.EpControlBindingProvider;\r\nimport com.elasticpath.cmclient.core.binding.EpDialogSupport;\r\nimport com.elasticpath.cmclient.core.binding.ObservableUpdateValueStrategy;\r\nimport com.elasticpath.cmclient.core.helpers.ChangeSetHelper;\r\nimport com.elasticpath.cmclient.core.service.AuthorizationService;\r\nimport com.elasticpath.cmclient.core.ui.dialog.AbstractEpDialog;\r\nimport com.elasticpath.cmclient.core.ui.framework.IEpLayoutComposite;\r\nimport com.elasticpath.cmclient.core.ui.framework.IEpLayoutData;\r\nimport com.elasticpath.cmclient.core.validation.CompoundValidator;\r\nimport com.elasticpath.cmclient.core.validation.EpValidatorFactory;\r\nimport com.elasticpath.cmclient.policy.StatePolicy;\r\nimport com.elasticpath.cmclient.policy.StatePolicyGovernable;\r\nimport com.elasticpath.cmclient.policy.common.DefaultStatePolicyGovernableImpl;\r\nimport com.elasticpath.cmclient.policy.common.PolicyActionContainer;\r\nimport com.elasticpath.cmclient.policy.ui.IPolicyTargetLayoutComposite;\r\nimport com.elasticpath.cmclient.policy.ui.PolicyTargetCompositeFactory;\r\nimport com.elasticpath.commons.constants.ContextIdNames;\r\nimport com.elasticpath.domain.catalog.Catalog;\r\nimport com.elasticpath.domain.changeset.ChangeSet;\r\nimport com.elasticpath.domain.cmuser.CmUser;\r\nimport com.elasticpath.service.EpServiceException;\r\nimport com.elasticpath.service.catalog.CatalogService;\r\nimport com.elasticpath.service.changeset.ChangeSetService;\r\nimport com.elasticpath.service.cmuser.CmUserService;\r\n\r\n/**\r\n * This is a main class of the Virtual Catalog dialog box, which is used for both creating and editing virtual catalogs.\r\n */\r\n@SuppressWarnings({ \"PMD.CyclomaticComplexity\", \"PMD.NPathComplexity\" })\r\npublic class VirtualCatalogDialog extends AbstractEpDialog implements StatePolicyGovernable {	\r\n\r\n	private static final int NUM_COLUMNS_FOUR = 4;\r\n\r\n	private static final int CODE_MAXLENGTH = 64;\r\n\r\n	/** The Logger. */\r\n	protected static final Logger LOG = Logger.getLogger(VirtualCatalogDialog.class);\r\n\r\n	private static final String CATALOG_NAME_FIELD_NAME = \"name\"; //$NON-NLS-1$\r\n\r\n	private static final String EMPTY_STRING = \"\"; //$NON-NLS-1$\r\n\r\n	private static final int CATALOG_NAME_TEXT_LIMIT = 255;\r\n\r\n	private final DataBindingContext dataBindingCtx;\r\n\r\n	private final Catalog virtualCatalog;\r\n	\r\n	private final CatalogService catalogService;\r\n	\r\n	private Text catalogCode;\r\n\r\n	private Text catalogNameText;\r\n	\r\n	private Text defaultLanguageText;\r\n	\r\n	private Text defaultCurrencyText;\r\n\r\n	private CCombo defaultLanguageCombo;\r\n\r\n	private CCombo defaultCurrencyCombo;\r\n	\r\n	private String originalVirtualCatalogName;\r\n	\r\n	private Hyperlink emailHyperlink;\r\n	\r\n	private final StatePolicyGovernable statePolicyGovernable = new DefaultStatePolicyGovernableImpl();\r\n	\r\n	/**\r\n	 * Policy container for the virtual catalog controls.\r\n	 */\r\n	private PolicyActionContainer editableVirtualCatalogPolicyContainer;\r\n	\r\n	private StatePolicy statePolicy;\r\n	\r\n	private IPolicyTargetLayoutComposite wrappedPolicyComposite;\r\n\r\n	private PolicyActionContainer readOnlyVirtualCatalogPolicyContainer;\r\n\r\n	private IPolicyTargetLayoutComposite mainPolicyComposite;\r\n\r\n	/**\r\n	 * Virtual Catalog dialog constructor.\r\n	 * \r\n	 * @param parentShell parent shell\r\n	 * @param virtualCatalog catalog object\r\n	 */\r\n	public VirtualCatalogDialog(final Shell parentShell, final Catalog virtualCatalog) {\r\n		super(parentShell, 1, true);\r\n		this.virtualCatalog = virtualCatalog;\r\n		this.dataBindingCtx = new DataBindingContext();\r\n		catalogService = (CatalogService) Application.getInstance().getElasticPath().getBean(ContextIdNames.CATALOG_SERVICE);					\r\n	}\r\n\r\n	/**\r\n	 * Opens a Virtual Catalog Dialog.\r\n	 * \r\n	 * @param shell main shell\r\n	 * @param virtualCatalog catalog object\r\n	 * @return true if data can be saved\r\n	 */\r\n	public static boolean openVirtualDialog(final Shell shell, final Catalog virtualCatalog) {\r\n		return new VirtualCatalogDialog(shell, virtualCatalog).open() == 0;\r\n	}\r\n	\r\n	/**\r\n	 * Returns true if the virtual catalog object is persistent; false otherwise.\r\n	 *\r\n	 * @return true if the virtual catalog object is persistent; false otherwise.\r\n	 */\r\n	private boolean isVirtualCatalogPersistent() {\r\n		return this.virtualCatalog.isPersistent();\r\n	}\r\n\r\n	/**\r\n	 * Populate initial values of the dialog controls.\r\n	 */\r\n	@Override\r\n	protected void populateControls() {\r\n		if (isVirtualCatalogPersistent() || !isAuthorized()) {\r\n			catalogCode.setText(virtualCatalog.getCode());\r\n			\r\n			defaultLanguageText.setText(virtualCatalog.getDefaultLocale().getDisplayName());\r\n			\r\n			defaultCurrencyText.setText(virtualCatalog.getDefaultCurrency().toString());\r\n			\r\n			// remember the original name for validation purposes\r\n			this.originalVirtualCatalogName = this.virtualCatalog.getName();\r\n			\r\n			this.catalogNameText.setText(this.virtualCatalog.getName());\r\n			\r\n			return;\r\n		}\r\n		\r\n		this.defaultLanguageCombo.add(CatalogMessages.VirtualCatalogDialog_DefaultLanguage_ComboEntry);\r\n		this.defaultCurrencyCombo.add(CatalogMessages.VirtualCatalogDialog_DefaultCurrency_ComboEntry);\r\n		\r\n		for (Locale locale : getAllSupportedLocales()) {\r\n			defaultLanguageCombo.setData(locale.getDisplayName(), locale);\r\n			defaultLanguageCombo.add(locale.getDisplayName());\r\n		}\r\n		\r\n		for (Currency currency : getAllSupportedCurrencies()) {\r\n			defaultCurrencyCombo.setData(currency.getCurrencyCode(), currency);\r\n			defaultCurrencyCombo.add(currency.getCurrencyCode());\r\n		}\r\n		\r\n		this.defaultLanguageCombo.select(0);\r\n		this.defaultCurrencyCombo.select(0);\r\n	}\r\n	\r\n	private List<Locale> getAllSupportedLocales() {\r\n		CatalogService catalogService = (CatalogService) Application.getInstance().getElasticPath().getBean(ContextIdNames.CATALOG_SERVICE);\r\n		List<Catalog> catalogs = catalogService.findAllCatalogs();\r\n		\r\n		Set<Locale> set = new HashSet<Locale>();\r\n		\r\n		for (Catalog catalog : catalogs) {\r\n			for (Locale locale : catalog.getSupportedLocales()) {\r\n				if (locale != null) {\r\n					set.add(locale);\r\n				}\r\n			}\r\n		}\r\n		\r\n		List<Locale> result = new TreeList(set);\r\n		\r\n		Collections.sort(result, new Comparator<Locale>() { \r\n            public int compare(final Locale locale1, final Locale locale2) {\r\n                return locale1.getDisplayName().compareTo(locale2.getDisplayName());\r\n            }\r\n        });\r\n		\r\n		return result;\r\n	}\r\n	\r\n	private List<Currency> getAllSupportedCurrencies() {\r\n		CatalogService catalogService = (CatalogService) Application.getInstance().getElasticPath().getBean(ContextIdNames.CATALOG_SERVICE);\r\n		List<Catalog> catalogs = catalogService.findAllCatalogs();\r\n		\r\n		Set<Currency> set = new HashSet<Currency>();\r\n		\r\n		for (Catalog catalog : catalogs) {\r\n			for (Currency currency : catalog.getSupportedCurrencies()) {\r\n				if (currency != null) {\r\n					set.add(currency);\r\n				}\r\n			}\r\n		}\r\n		\r\n		List<Currency> result = new TreeList(set);\r\n		\r\n		Collections.sort(result, new Comparator<Currency>() { \r\n            public int compare(final Currency curr1, final Currency curr2) {\r\n                return curr1.toString().compareTo(curr2.toString());\r\n            }\r\n        });\r\n		\r\n		return result;\r\n	}\r\n\r\n	/**\r\n	 * Binding of the controls to the data.\r\n	 */\r\n	@Override\r\n	protected void bindControls() {\r\n		final boolean hideDecorationOnFirstValidation = true;\r\n		\r\n		// catalog code\r\n		EpControlBindingProvider.getInstance().bind(dataBindingCtx,\r\n				catalogCode,\r\n				virtualCatalog,\r\n				\"code\", //$NON-NLS-1$\r\n				new CompoundValidator(new IValidator[] { EpValidatorFactory.REQUIRED, EpValidatorFactory.MAX_LENGTH_64,\r\n						EpValidatorFactory.NO_LEADING_TRAILING_SPACES }), null, true);\r\n\r\n		// catalog name\r\n		EpControlBindingProvider.getInstance().bind(dataBindingCtx, this.catalogNameText, this.virtualCatalog, CATALOG_NAME_FIELD_NAME,\r\n				EpValidatorFactory.STRING_255_REQUIRED, null, hideDecorationOnFirstValidation);\r\n		\r\n		if (!isVirtualCatalogPersistent()) {\r\n\r\n			// default locale\r\n			final ObservableUpdateValueStrategy defaultLocaleUpdateStrategy = new ObservableUpdateValueStrategy() {\r\n				@Override\r\n				protected IStatus doSet(final IObservableValue observableValue, final Object newValue) {\r\n					for (final Locale currLocale : Locale.getAvailableLocales()) {\r\n						if (currLocale.getDisplayName().equalsIgnoreCase(defaultLanguageCombo.getText())) {\r\n							virtualCatalog.setDefaultLocale(currLocale);\r\n						}\r\n					}\r\n					return Status.OK_STATUS;\r\n				}\r\n			};\r\n			EpControlBindingProvider.getInstance().bind(dataBindingCtx, this.defaultLanguageCombo,\r\n					EpValidatorFactory.REQUIRED_COMBO_FIRST_ELEMENT_NOT_VALID, null, defaultLocaleUpdateStrategy, hideDecorationOnFirstValidation);\r\n	\r\n			// default currency\r\n			final ObservableUpdateValueStrategy defaultCurrencyUpdateStrategy = new ObservableUpdateValueStrategy() {\r\n				@Override\r\n				protected IStatus doSet(final IObservableValue observableValue, final Object newValue) {\r\n					final List<Currency> availableCurrencies = new ArrayList<Currency>();\r\n					for (Locale currLocale : Locale.getAvailableLocales()) {\r\n						try {\r\n							if (!availableCurrencies.contains(Currency.getInstance(currLocale))) {\r\n								availableCurrencies.add(Currency.getInstance(currLocale));\r\n							}\r\n						} catch (IllegalArgumentException illegalArgException) {\r\n							// Country of the given locale is not a supported ISO 3166 country code; do nothing.\r\n							LOG.debug(\"Country of the given locale is not a supported ISO 3166 country code\"); //$NON-NLS-1$\r\n						}\r\n					}\r\n					\r\n					for (final Currency currCurrency : availableCurrencies) {\r\n						if (currCurrency.toString().equalsIgnoreCase(defaultCurrencyCombo.getText())) {\r\n							virtualCatalog.setDefaultCurrency(currCurrency);\r\n						}\r\n					}\r\n					return Status.OK_STATUS;\r\n				}\r\n			};\r\n			EpControlBindingProvider.getInstance().bind(dataBindingCtx, this.defaultCurrencyCombo,\r\n					EpValidatorFactory.REQUIRED_COMBO_FIRST_ELEMENT_NOT_VALID, null, defaultCurrencyUpdateStrategy, hideDecorationOnFirstValidation);\r\n			\r\n		}\r\n\r\n		EpDialogSupport.create(this, dataBindingCtx);\r\n	}\r\n\r\n	/**\r\n	 * @param dialogComposite main dialog composite\r\n	 */\r\n	@Override\r\n	protected void createEpDialogContent(final IEpLayoutComposite dialogComposite) {\r\n		\r\n		// This name does not need to match anything necessarily\r\n		readOnlyVirtualCatalogPolicyContainer = addPolicyActionContainer(\"readOnlyVirtualCatalogDialog\"); //$NON-NLS-1$\r\n		editableVirtualCatalogPolicyContainer = addPolicyActionContainer(\"virtualCatalogDialog\"); //$NON-NLS-1$\r\n		\r\n		// Wrap our dialog composite in a policy composite\r\n		wrappedPolicyComposite = PolicyTargetCompositeFactory.wrapLayoutComposite(dialogComposite);								\r\n		\r\n		mainPolicyComposite = wrappedPolicyComposite\r\n				.addGridLayoutComposite(2, false, wrappedPolicyComposite\r\n						.createLayoutData(IEpLayoutData.FILL, IEpLayoutData.BEGINNING, true, false),\r\n										  editableVirtualCatalogPolicyContainer);\r\n\r\n		final IEpLayoutData mainCompositeFieldData = mainPolicyComposite\r\n				.createLayoutData(IEpLayoutData.FILL, IEpLayoutData.BEGINNING, true, true);\r\n		final IEpLayoutData mainCompositeLabelData = mainPolicyComposite\r\n				.createLayoutData(IEpLayoutData.BEGINNING, IEpLayoutData.BEGINNING, false, true);\r\n\r\n		if (isVirtualCatalogPersistent()) {\r\n			mainPolicyComposite.addLabelBold(CatalogMessages.CatalogSummarySection_CatalogCode, \r\n					                         mainCompositeLabelData, readOnlyVirtualCatalogPolicyContainer);\r\n			\r\n			this.catalogCode = mainPolicyComposite.addTextField(mainCompositeFieldData, readOnlyVirtualCatalogPolicyContainer);\r\n		} else {\r\n			mainPolicyComposite.addLabelBoldRequired(CatalogMessages.CatalogSummarySection_CatalogCode,\r\n													 mainCompositeLabelData, editableVirtualCatalogPolicyContainer);\r\n			this.catalogCode = mainPolicyComposite.addTextField(mainCompositeFieldData, editableVirtualCatalogPolicyContainer);\r\n		}\r\n		\r\n		this.catalogCode.setTextLimit(CODE_MAXLENGTH);				\r\n\r\n		if (isVirtualCatalogPersistent()) {\r\n						\r\n			mainPolicyComposite.addLabelBold(CatalogMessages.VirtualCatalogDialog_CatalogName_Label,\r\n												mainCompositeLabelData, editableVirtualCatalogPolicyContainer);\r\n		} else {\r\n			mainPolicyComposite.addLabelBoldRequired(CatalogMessages.VirtualCatalogDialog_CatalogName_Label,\r\n													 mainCompositeLabelData, editableVirtualCatalogPolicyContainer);\r\n		}\r\n		this.catalogNameText = mainPolicyComposite.addTextField(mainCompositeFieldData, editableVirtualCatalogPolicyContainer);\r\n		this.catalogNameText.setTextLimit(CATALOG_NAME_TEXT_LIMIT);\r\n\r\n		if (isVirtualCatalogPersistent()) {\r\n			mainPolicyComposite.addLabelBold(CatalogMessages.VirtualCatalogDialog_DefaultLanguage_Label,\r\n											 mainCompositeLabelData, readOnlyVirtualCatalogPolicyContainer);\r\n			this.defaultLanguageText = mainPolicyComposite.addTextField(mainCompositeFieldData, readOnlyVirtualCatalogPolicyContainer);\r\n		} else {\r\n			mainPolicyComposite.addLabelBoldRequired(CatalogMessages.VirtualCatalogDialog_DefaultLanguage_Label,\r\n													 mainCompositeLabelData, editableVirtualCatalogPolicyContainer);\r\n			this.defaultLanguageCombo = mainPolicyComposite.addComboBox(mainCompositeFieldData, editableVirtualCatalogPolicyContainer);\r\n		}\r\n\r\n		if (isVirtualCatalogPersistent()) {\r\n			mainPolicyComposite.addLabelBold(CatalogMessages.VirtualCatalogDialog_DefaultCurrency_Label,\r\n												mainCompositeLabelData, readOnlyVirtualCatalogPolicyContainer);\r\n			this.defaultCurrencyText = mainPolicyComposite.addTextField(mainCompositeFieldData, readOnlyVirtualCatalogPolicyContainer);\r\n		} else {\r\n			\r\n			mainPolicyComposite.addLabelBoldRequired(CatalogMessages.VirtualCatalogDialog_DefaultCurrency_Label,\r\n					                                 mainCompositeLabelData, editableVirtualCatalogPolicyContainer);\r\n			this.defaultCurrencyCombo = mainPolicyComposite.addComboBox(mainCompositeFieldData, editableVirtualCatalogPolicyContainer);\r\n		}\r\n		\r\n		if (virtualCatalog.isPersistent()) {\r\n			\r\n			ChangeSetHelper changeSetHelper = new ChangeSetHelper();\r\n			\r\n			if (changeSetHelper.isChangeSetsEnabled()) {\r\n			\r\n				displayChangeSetInformation();\r\n			}\r\n		}\r\n		\r\n		if (statePolicy == null) {\r\n			throw new EpServiceException(\"Attempting to apply a null policy\"); //$NON-NLS-1$			\r\n		} \r\n		\r\n		statePolicyGovernable.applyStatePolicy(statePolicy);		\r\n	}\r\n\r\n	private void displayChangeSetInformation() {										\r\n		\r\n		ChangeSetService changeSetService = Application.getInstance().getBean(ContextIdNames.CHANGESET_SERVICE);		\r\n		CmUserService cmUserService = Application.getInstance().getBean(ContextIdNames.CMUSER_SERVICE);\r\n		\r\n		final ChangeSet changeSet = changeSetService.findChangeSet(virtualCatalog);					\r\n		\r\n		if (changeSet != null) {					\r\n						\r\n			final IEpLayoutData oneColumnLabelData = mainPolicyComposite.createLayoutData(IEpLayoutData.BEGINNING, \r\n                    IEpLayoutData.BEGINNING, \r\n                    false, false, 1, 1);\r\n			\r\n			final IEpLayoutData threeColumnLabelData = mainPolicyComposite.createLayoutData(IEpLayoutData.BEGINNING, \r\n                    IEpLayoutData.BEGINNING, \r\n                    false, false, 3, 1);\r\n\r\n			final IEpLayoutData fourColumnLabelData = mainPolicyComposite.createLayoutData(IEpLayoutData.FILL, \r\n                    IEpLayoutData.BEGINNING, false, false, 4, 1);\r\n			\r\n			IPolicyTargetLayoutComposite changeSetGroup = mainPolicyComposite.addGroup(\r\n					                                                        CatalogMessages.VirtualCatalogDialog_Assigned_Change_Set, \r\n					                                                        NUM_COLUMNS_FOUR, false, fourColumnLabelData, \r\n					                                                        editableVirtualCatalogPolicyContainer);					\r\n								\r\n			changeSetGroup.addLabelBold(CatalogMessages.VirtualCatalogDialog_ChangeSet, \r\n                    					     oneColumnLabelData, editableVirtualCatalogPolicyContainer);\r\n			\r\n			changeSetGroup.addLabel(changeSet.getName(), \r\n									threeColumnLabelData, editableVirtualCatalogPolicyContainer);					\r\n								\r\n			\r\n			\r\n			changeSetGroup.addLabelBold(CatalogMessages.VirtualCatalogDialog_AddedBy,\r\n					null, editableVirtualCatalogPolicyContainer);\r\n			\r\n			CmUser cmUser = cmUserService.findByGuid(changeSet.getCreatedByUserGuid());			                					\r\n			\r\n			if (cmUser != null) {										\r\n				\r\n				changeSetGroup.addLabel(getFormattedName(cmUser).toString(), \r\n						null, editableVirtualCatalogPolicyContainer);\r\n				\r\n				final Label emailLabel = changeSetGroup.addLabel(StringUtils.EMPTY, null, editableVirtualCatalogPolicyContainer);\r\n				emailLabel.setImage(CoreImageRegistry.getImage(CoreImageRegistry.IMAGE_EMAIL_SEND));\r\n				\r\n				emailHyperlink = changeSetGroup.addHyperLinkText(StringUtils.EMPTY, null, editableVirtualCatalogPolicyContainer);\r\n				final String email = cmUser.getEmail();\r\n				emailHyperlink.setText(email);\r\n				emailHyperlink.addHyperlinkListener(new HyperlinkAdapter() {\r\n					@Override\r\n					public void linkActivated(final HyperlinkEvent hyperlinkEvent) {\r\n						Program.launch(\"mailto:\" + email); //$NON-NLS-1$\r\n					}\r\n				});\r\n			}\r\n			\r\n			changeSetGroup.addLabelBold(CatalogMessages.VirtualCatalogDialog_DateAdded,\r\n					 						 oneColumnLabelData, editableVirtualCatalogPolicyContainer);\r\n			\r\n			DateFormat dateFormat = CorePlugin.getDefault().getDefaultDateTimeFormatter();			\r\n			changeSetGroup.addLabel(dateFormat.format(changeSet.getCreatedDate()), \r\n									threeColumnLabelData, editableVirtualCatalogPolicyContainer);\r\n				\r\n		}\r\n	}\r\n\r\n	private StringBuilder getFormattedName(final CmUser cmUser) {\r\n		final StringBuilder formattedName = new StringBuilder();\r\n		formattedName.append(cmUser.getLastName());\r\n		formattedName.append(\", \"); //$NON-NLS-1$\r\n		formattedName.append(cmUser.getFirstName());\r\n		return formattedName;\r\n	}\r\n	\r\n	private boolean isAuthorized() {\r\n		return AuthorizationService.getInstance().isAuthorized(CatalogPermissions.MANAGE_VIRTUAL_CATALOG_LINK_CATEGORY) \r\n				&& AuthorizationService.getInstance().isAuthorized(virtualCatalog);\r\n	}\r\n\r\n	/**\r\n	 * Called when the OK button is pressed.\r\n	 */\r\n	@Override\r\n	protected void okPressed() {\r\n		this.setErrorMessage(null);\r\n		\r\n		if (!validateName(catalogNameText.getText())) {\r\n			return;\r\n		}\r\n		\r\n		// make sure code is unique\r\n		if (!isVirtualCatalogPersistent() && catalogService.codeExists(virtualCatalog.getCode())) {\r\n			setErrorMessage(CatalogMessages.CreateCatalogDialog_CatalogCodeExists_ErrorMessage);\r\n			return;\r\n		}\r\n		\r\n		super.okPressed();\r\n	}\r\n\r\n	/**\r\n	 * Returns <code>false</code> if the given catalogName already exists; true otherwise.\r\n	 * \r\n	 * @param catalogName the <code>String</code> catalog name to check\r\n	 * @return <code>false</code> if the given catalogName already exists; true otherwise\r\n	 */\r\n	private boolean validateName(final String catalogName) {\r\n		// allow \'duplicate\' name if this is an edit on an existing virtual catalog\r\n		if (this.isVirtualCatalogPersistent() && this.originalVirtualCatalogName.equals(this.virtualCatalog.getName())) {\r\n			return true;\r\n		}\r\n		\r\n		if (catalogService.nameExists(catalogName)) {\r\n			this.setErrorMessage(CatalogMessages.VirtualCatalogDialog_CatalogNameExists_ErrMsg);\r\n			return false;\r\n		}\r\n\r\n		return true;\r\n	}\r\n\r\n	/**\r\n	 * @return initial message of a dialog\r\n	 */\r\n	@Override\r\n	protected String getInitialMessage() {\r\n		return EMPTY_STRING;\r\n	}\r\n\r\n	/**\r\n	 * @return a dialog title\r\n	 */\r\n	@Override\r\n	protected String getTitle() {\r\n		if (this.isVirtualCatalogPersistent()) {\r\n			if (isAuthorized()) {\r\n				return CatalogMessages.VirtualCatalogDialog_Edit_Title;\r\n			}\r\n			return CatalogMessages.VirtualCatalogDialog_Open_Title;\r\n		}\r\n		\r\n		return CatalogMessages.VirtualCatalogDialog_Create_Title;\r\n	}\r\n\r\n	/**\r\n	 * @return a dialog window title\r\n	 */\r\n	@Override\r\n	protected String getWindowTitle() {\r\n		if (this.isVirtualCatalogPersistent()) {\r\n			if (isAuthorized()) {\r\n				return CatalogMessages.VirtualCatalogDialog_Edit_WindowTitle;\r\n			}\r\n			return CatalogMessages.VirtualCatalogDialog_Open_WindowTitle;\r\n		}\r\n		\r\n		return CatalogMessages.VirtualCatalogDialog_Create_WindowTitle;\r\n	}\r\n\r\n	/**\r\n	 * @return a window image\r\n	 */\r\n	@Override\r\n	protected Image getWindowImage() {\r\n		if (this.isVirtualCatalogPersistent()) {\r\n			if (isAuthorized()) {\r\n				return CatalogImageRegistry.getImage(CatalogImageRegistry.CATALOG_VIRTUAL_EDIT);\r\n			}\r\n			return CatalogImageRegistry.getImage(CatalogImageRegistry.CATALOG_VIRTUAL);\r\n		}\r\n		\r\n		return CatalogImageRegistry.getImage(CatalogImageRegistry.CATALOG_VIRTUAL_CREATE);\r\n	}\r\n\r\n	/**\r\n	 * @return the title image\r\n	 */\r\n	@Override\r\n	protected Image getTitleImage() {\r\n		return null;\r\n	}\r\n	\r\n	/**\r\n	 * {@inheritDoc}.\r\n	 */\r\n	public PolicyActionContainer addPolicyActionContainer(final String name) {\r\n		return statePolicyGovernable.addPolicyActionContainer(name);\r\n	}\r\n\r\n	/**\r\n	 * {@inheritDoc}.\r\n	 */\r\n	public void applyStatePolicy(final StatePolicy statePolicy) {\r\n		this.statePolicy = statePolicy;		\r\n		statePolicyGovernable.applyStatePolicy(statePolicy);\r\n		\r\n		if (mainPolicyComposite != null) {\r\n			mainPolicyComposite.getSwtComposite().layout();\r\n			mainPolicyComposite.getSwtComposite().getParent().layout();\r\n		}\r\n	}\r\n\r\n	/**\r\n	 * {@inheritDoc}.\r\n	 */\r\n	public Map<String, PolicyActionContainer> getPolicyActionContainers() {\r\n		return statePolicyGovernable.getPolicyActionContainers();\r\n	}\r\n	\r\n	/**\r\n	 * Get identity.\r\n	 * @return the identity for the dialog\r\n	 */\r\n	public String getIdentity() {		\r\n		return \"virtualCatalogDialog\"; //$NON-NLS-1$\r\n	}\r\n}\r\n',1,'daa10187b46923690eb757ec08ca84'),('audit.patch',82,'Unknown','diff -r 1fad4f8fee9c com.elasticpath.cm/WEB-INF/conf/spring/service/serviceHttp.xml\n--- a/com.elasticpath.cm/WEB-INF/conf/spring/service/serviceHttp.xml	Wed Feb 11 17:51:06 2009 -0800\n+++ b/com.elasticpath.cm/WEB-INF/conf/spring/service/serviceHttp.xml	Mon Feb 16 15:44:38 2009 -0800\n@@ -50,7 +50,7 @@\n 	</bean>\n \n 	\n-	<bean id=\"httpProductService\" class=\"org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter\">\n+	<bean id=\"httpProductService\" class=\"com.elasticpath.service.audit.impl.AuditHttpInvokerServiceExporter\">\n 		<property name=\"service\">\n 			<ref bean=\"productService\"/>\n 		</property>\n@@ -58,6 +58,8 @@\n 			<value>com.elasticpath.service.catalog.ProductService</value>\n 		</property>\n 	</bean>\n+	\n+	\n 	<bean id=\"httpDigitalAssetAuditService\" class=\"org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter\">\n 		<property name=\"service\">\n 			<ref bean=\"digitalAssetAuditService\"/>\n@@ -533,5 +535,5 @@\n 			<value>com.elasticpath.service.campaign.DynamicContentService</value>\n 		</property>\n 	</bean>\n-\n+	\n </beans>\ndiff -r 1fad4f8fee9c com.elasticpath.cmclient/com.elasticpath.cmclient.core/conf/spring/service/serviceCMClient.xml\n--- a/com.elasticpath.cmclient/com.elasticpath.cmclient.core/conf/spring/service/serviceCMClient.xml	Wed Feb 11 17:51:06 2009 -0800\n+++ b/com.elasticpath.cmclient/com.elasticpath.cmclient.core/conf/spring/service/serviceCMClient.xml	Mon Feb 16 15:44:38 2009 -0800\n@@ -63,7 +63,7 @@\n   		</property>\n 	</bean>\n 	\n-	<bean id=\"productService\" class=\"com.elasticpath.cmclient.core.EpHttpInvokerProxyFactoryBean\">\n+	<bean id=\"productService\" class=\"com.elasticpath.cmclient.core.AuditHttpInvokerProxyFactoryBean\">\n 		<property name=\"serviceUrl\">\n 			<value>productService.remote</value>\n 		</property>\n@@ -545,5 +545,6 @@\n 	<bean id=\"changeSetService\" class=\"com.elasticpath.cmclient.core.EpHttpInvokerProxyFactoryBean\">\n 		<property name=\"serviceUrl\" value=\"changeSetService.remote\"/>\n 		<property name=\"serviceInterface\" value=\"com.elasticpath.service.changeset.ChangeSetService\"/>\n-	</bean>\n+	</bean>\n+	\n </beans>\ndiff -r 1fad4f8fee9c com.elasticpath.core/WEB-INF/conf/spring/dataaccess/openjpa/openjpa.xml\n--- a/com.elasticpath.core/WEB-INF/conf/spring/dataaccess/openjpa/openjpa.xml	Wed Feb 11 17:51:06 2009 -0800\n+++ b/com.elasticpath.core/WEB-INF/conf/spring/dataaccess/openjpa/openjpa.xml	Mon Feb 16 15:44:38 2009 -0800\n@@ -19,6 +19,47 @@\n     <bean id=\"sessionFactory\" class=\"com.elasticpath.persistence.impl.JpaSessionFactoryImpl\">\n       <property name=\"entityManagerFactory\" ref=\"entityManagerFactory\"/>\n     </bean>\n+    \n+	<bean id=\"auditingPersistenceEngineTarget\"\n+		class=\"com.elasticpath.domain.audit.impl.AuditingPersistenceEngineImpl\">\n+		<property name=\"entityManager\" ref=\"sharedEntityManager\"/>\n+		<property name=\"sessionFactory\" ref=\"sessionFactory\"/>\n+		<property name=\"beanFactory\" ref=\"coreBeanFactory\"/>\n+		<property name=\"auditableClasses\">\n+			<set>\n+				<value>com.elasticpath.domain.attribute.impl.AbstractAttributeValueImpl</value>\n+				<value>com.elasticpath.domain.attribute.impl.ProductAttributeValueImpl</value>\n+				<value>com.elasticpath.domain.attribute.impl.SkuAttributeValueImpl</value>\n+				<value>com.elasticpath.domain.catalog.impl.AbstractPriceImpl</value>\n+				<value>com.elasticpath.domain.catalog.impl.AbstractPriceTierImpl</value>\n+				<value>com.elasticpath.domain.catalog.impl.CatalogProductPriceImpl</value>\n+				<value>com.elasticpath.domain.catalog.impl.CatalogSkuPriceImpl</value>\n+				<value>com.elasticpath.domain.catalog.impl.DigitalAssetImpl</value>\n+				<value>com.elasticpath.domain.catalog.impl.AbstractLocaleDependantFieldsImpl</value>\n+				<value>com.elasticpath.domain.catalog.impl.ProductAssociationImpl</value>\n+				<value>com.elasticpath.domain.catalog.impl.ProductCategoryImpl</value>\n+				<value>com.elasticpath.domain.catalog.impl.ProductImpl</value>\n+				<value>com.elasticpath.domain.catalog.impl.ProductLocaleDependantFieldsImpl</value>\n+				<value>com.elasticpath.domain.catalog.impl.ProductPriceImpl</value>\n+				<value>com.elasticpath.domain.catalog.impl.ProductPriceTierImpl</value>\n+				<value>com.elasticpath.domain.catalog.impl.ProductSkuImpl</value>\n+				<value>com.elasticpath.domain.catalog.impl.ProductTypeImpl</value>\n+				<value>com.elasticpath.domain.catalog.impl.SkuPriceImpl</value>\n+				<value>com.elasticpath.domain.catalog.impl.SkuPriceTierImpl</value>\n+				<value>com.elasticpath.domain.skuconfiguration.impl.JpaAdaptorOfSkuOptionValueImpl</value>\n+				<value>com.elasticpath.domain.skuconfiguration.impl.SkuOptionImpl</value>\n+				<value>com.elasticpath.domain.skuconfiguration.impl.SkuOptionValueImpl</value>\n+				<value>com.elasticpath.domain.rules.impl.AbstractRuleElementImpl</value>\n+				<value>com.elasticpath.domain.rules.impl.AbstractRuleExceptionImpl</value>\n+				<value>com.elasticpath.domain.rules.impl.AbstractRuleImpl</value>\n+				<value>com.elasticpath.domain.rules.impl.AppliedRuleImpl</value>\n+				<value>com.elasticpath.domain.rules.impl.PromotionRuleImpl</value>\n+				<value>com.elasticpath.domain.rules.impl.RuleParameterImpl</value>\n+				<value>com.elasticpath.domain.rules.impl.RuleSetImpl</value>\n+			</set>\n+		</property>\n+	</bean>\n+	\n \n 	<bean id=\"persistenceEngineTarget\"\n 		class=\"com.elasticpath.persistence.impl.JpaPersistenceEngineImpl\">\n@@ -34,7 +75,7 @@\n 			<value>com.elasticpath.persistence.PersistenceEngine</value>\n 		</property>\n 		<property name=\"target\">\n-			<ref local=\"persistenceEngineTarget\" />\n+			<ref local=\"auditingPersistenceEngineTarget\" />\n 		</property>\n 	</bean>\n \ndiff -r 1fad4f8fee9c com.elasticpath.core/WEB-INF/conf/spring/service/service.xml\n--- a/com.elasticpath.core/WEB-INF/conf/spring/service/service.xml	Wed Feb 11 17:51:06 2009 -0800\n+++ b/com.elasticpath.core/WEB-INF/conf/spring/service/service.xml	Mon Feb 16 15:44:38 2009 -0800\n@@ -1358,6 +1358,9 @@\n                 </entry>\n   			</map>\n 		</property>\n+	</bean>\n+	\n+	<bean id=\"auditService\" class=\"com.elasticpath.service.audit.impl.AuditServiceImpl\" scope=\"singleton\">\n 	</bean>\n 	\n </beans>\ndiff -r 1fad4f8fee9c com.elasticpath.core/WEB-INF/src/main/java/META-INF/persistence.xml.vm\n--- a/com.elasticpath.core/WEB-INF/src/main/java/META-INF/persistence.xml.vm	Wed Feb 11 17:51:06 2009 -0800\n+++ b/com.elasticpath.core/WEB-INF/src/main/java/META-INF/persistence.xml.vm	Mon Feb 16 15:44:38 2009 -0800\n@@ -23,6 +23,7 @@\n 		<mapping-file>META-INF/pricing-orm.xml</mapping-file>\n 		<mapping-file>META-INF/changeset-orm.xml</mapping-file>\n 		<mapping-file>META-INF/campaign-orm.xml</mapping-file>\n+		<mapping-file>META-INF/audit-orm.xml</mapping-file>\n \n 		<class>com.elasticpath.domain.attribute.impl.AbstractAttributeValueImpl</class>\n 		<class>com.elasticpath.domain.attribute.impl.AttributeGroupAttributeImpl</class>\n@@ -216,6 +217,9 @@\n 		<class>com.elasticpath.domain.campaign.impl.ActionImpl</class>\n 		<class>com.elasticpath.domain.contentspace.impl.ParameterValueImpl</class>\n 		<class>com.elasticpath.domain.contentspace.impl.ParameterLocaleDependantValueImpl</class>		\n+		<class>com.elasticpath.domain.audit.impl.ChangeTransactionImpl</class>		\n+		<class>com.elasticpath.domain.audit.impl.ChangeOperationImpl</class>		\n+		<class>com.elasticpath.domain.audit.impl.DataChangedImpl</class>		\n 		\n 		<properties>\n 			<property name=\"openjpa.ConnectionFactoryName\" value=\"java:comp/env/${ep_jndi}\"/>\ndiff -r 1fad4f8fee9c com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/audit/ChangeOperation.java\n--- /dev/null	Thu Jan 01 00:00:00 1970 +0000\n+++ b/com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/audit/ChangeOperation.java	Mon Feb 16 15:44:38 2009 -0800\n@@ -0,0 +1,81 @@\n+/**\n+ * Copyright (c) Elastic Path Software Inc., 2009\n+ */\n+package com.elasticpath.domain.audit;\n+\n+import com.elasticpath.domain.Entity;\n+\n+/**\n+ *  An operation that results in changes.\n+ */\n+public interface ChangeOperation extends Entity {\n+	/**\n+	 * Get the business transaction this operation belongs to.\n+	 *\n+	 * @return the changeTransaction\n+	 */\n+	ChangeTransaction getChangeTransaction();\n+\n+	/**\n+	 * Set the business transaction this operation belongs to.\n+	 *\n+	 * @param changeTransaction the changeTransaction to set\n+	 */\n+	void setChangeTransaction(final ChangeTransaction changeTransaction);\n+\n+	/**\n+	 * @return the order\n+	 */\n+	int getOperationOrder();\n+\n+	/**\n+	 * @param operationOrder the order to set\n+	 */\n+	void setOperationOrder(final int operationOrder);\n+\n+	/**\n+	 * @return the rootObjectName\n+	 */\n+	String getRootObjectName();\n+\n+	/**\n+	 * @param rootObjectName the rootObjectName to set\n+	 */\n+	void setRootObjectName(final String rootObjectName);\n+\n+	/**\n+	 * @return the rootObjectUid\n+	 */\n+	long getRootObjectUid();\n+\n+	/**\n+	 * @param rootObjectUid the rootObjectUid to set\n+	 */\n+	void setRootObjectUid(final long rootObjectUid);\n+\n+	/**\n+	 * @return the rootObjectGuid\n+	 */\n+	String getRootObjectGuid();\n+\n+	/**\n+	 * @param rootObjectGuid the rootObjectGuid to set\n+	 */\n+	void setRootObjectGuid(final String rootObjectGuid);\n+\n+	/**\n+	 * Get the change type.\n+	 *\n+	 * @return the changeType\n+	 */\n+	ChangeType getChangeType();\n+\n+	/**\n+	 * Set the change type.\n+	 *\n+	 * @param changeType the changeType to set\n+	 */\n+	void setChangeType(final ChangeType changeType);\n+\n+\n+}\ndiff -r 1fad4f8fee9c com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/audit/ChangeTransaction.java\n--- /dev/null	Thu Jan 01 00:00:00 1970 +0000\n+++ b/com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/audit/ChangeTransaction.java	Mon Feb 16 15:44:38 2009 -0800\n@@ -0,0 +1,56 @@\n+/**\n+ * Copyright (c) Elastic Path Software Inc., 2009\n+ */\n+package com.elasticpath.domain.audit;\n+\n+import com.elasticpath.domain.Entity;\n+\n+/**\n+ * Defines a change transaction. This is the transaction that\n+ * surrounds a collection of change operations.\n+ */\n+public interface ChangeTransaction extends Entity {\n+\n+	/**\n+	 * Get the GUID of the Change Set this transaction belongs to.\n+	 * \n+	 * @return a <code>ChangeSet</code> GUID.\n+	 */\n+	String getChangeSetGuid();\n+	\n+	/**\n+	 * Set the GUID of the Change Set that owns this transaction.\n+	 * \n+	 * @param changeSetGuid the <code>ChangeSet</code> GUID to set.\n+	 */\n+	void setChangeSetGuid(final String changeSetGuid);\n+\n+	/**\n+	 * Get the GUID of the user making the change.\n+	 *\n+	 * @return the user GUID\n+	 */\n+	String getUserGuid();\n+\n+	/**\n+	 * Set the GUID of the user making the change.\n+	 *\n+	 * @param userGuid the user GUID to set\n+	 */\n+	void setUserGuid(final String userGuid);\n+\n+	/**\n+	 * Get an identifier for the transaction.\n+	 *\n+	 * @return the transactionId\n+	 */\n+	String getTransactionId();\n+\n+	/**\n+	 * Set the transaction identifier.\n+	 *\n+	 * @param transactionId the transactionId to set\n+	 */\n+	void setTransactionId(final String transactionId);\n+\n+}\ndiff -r 1fad4f8fee9c com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/audit/ChangeType.java\n--- /dev/null	Thu Jan 01 00:00:00 1970 +0000\n+++ b/com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/audit/ChangeType.java	Mon Feb 16 15:44:38 2009 -0800\n@@ -0,0 +1,68 @@\n+/**\n+ * Copyright (c) Elastic Path Software Inc., 2009\n+ */\n+package com.elasticpath.domain.audit;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.commons.lang.enums.Enum;\n+\n+/**\n+ * Type-safe enumeration of audited change types.\n+ */\n+public class ChangeType extends Enum {\n+\n+	/**\n+	 * Change type that represents an update.\n+	 */\n+	public static final ChangeType UPDATE = new ChangeType(\"Update\");\n+	\n+	/**\n+	 * Change type that represents a deletion. \n+	 */\n+	public static final ChangeType DELETE = new ChangeType(\"Delete\");\n+	\n+	/**\n+	 * Change type that represents a new object. \n+	 */\n+	public static final ChangeType CREATE = new ChangeType(\"Create\");\n+\n+	/**\n+	 * Construct a new ChangeType from the given name.\n+	 * \n+	 * @param name the name of a change type\n+	 */\n+	protected ChangeType(final String name) {\n+		super(name);\n+	}\n+	\n+	/**\n+	 * Return the list of change types.\n+	 * \n+	 * @return a list of change types.\n+	 */\n+	public static List<ChangeType> getEnumList() {\n+		return getEnumList(ChangeType.class);\n+	}\n+	\n+	/**\n+	 * Return a map of change types by name.\n+	 * \n+	 * @return a map of change types by name\n+	 */\n+	public static Map<String, ChangeType> getEnumMap() {\n+		return getEnumMap(ChangeType.class);\n+	}\n+	\n+	/**\n+	 * Get a change type by name.\n+	 * \n+	 * @param name the name of the change type\n+	 * @return the change type\n+	 */\n+	public static ChangeType getEnum(final String name) {\n+		return (ChangeType) getEnum(ChangeType.class, name);\n+	}\n+\n+}\ndiff -r 1fad4f8fee9c com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/audit/DataChanged.java\n--- /dev/null	Thu Jan 01 00:00:00 1970 +0000\n+++ b/com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/audit/DataChanged.java	Mon Feb 16 15:44:38 2009 -0800\n@@ -0,0 +1,125 @@\n+/**\n+ * Copyright (c) Elastic Path Software Inc., 2009\n+ */\n+package com.elasticpath.domain.audit;\n+\n+import com.elasticpath.domain.Entity;\n+\n+/**\n+ * Represents a change to a field of an object.\n+ */\n+public interface DataChanged extends Entity {\n+\n+	/**\n+	 * Get the name of the object that has a change.\n+	 *\n+	 * @return the object name\n+	 */\n+	String getObjectName();\n+\n+	/**\n+	 * Set the name of the object that has a change.\n+	 *\n+	 * @param objectName the object name to set\n+	 */\n+	void setObjectName(final String objectName);\n+\n+	/**\n+	 * Get the identity of the changed object.\n+	 *\n+	 * @return the objectUid\n+	 */\n+	long getObjectUid();\n+\n+	/**\n+	 * Set the UID of the changed object.\n+	 *\n+	 * @param objectUid the objectUid to set\n+	 */\n+	void setObjectUid(final long objectUid);\n+\n+	/**\n+	 * Get the object GUID.\n+	 *\n+	 * @return the objectGuid\n+	 */\n+	String getObjectGuid();\n+\n+	/**\n+	 * Set the object GUID.\n+	 *\n+	 * @param objectGuid the objectGuid to set\n+	 */\n+	void setObjectGuid(final String objectGuid);\n+\n+	/**\n+	 * Get the name of the field that has changed.\n+	 *\n+	 * @return the fieldName\n+	 */\n+	String getFieldName();\n+\n+	/**\n+	 * Set the name of the field that has changed.\n+	 *\n+	 * @param fieldName the fieldName to set\n+	 */\n+	void setFieldName(final String fieldName);\n+\n+	/**\n+	 * Get the previous value of the changed field.\n+	 *\n+	 * @return the previous value of the field\n+	 */\n+	String getFieldOldValue();\n+\n+	/**\n+	 * Set the previous value of the changed field.\n+	 *\n+	 * @param fieldValue the old fieldValue to set\n+	 */\n+	void setFieldOldValue(final String fieldValue);\n+\n+	/**\n+	 * Get the new value of the changed field.\n+	 *\n+	 * @return the fieldValue\n+	 */\n+	String getFieldNewValue();\n+\n+	/**\n+	 * Set the new value of the changed field.\n+	 *\n+	 * @param fieldValue the fieldValue to set\n+	 */\n+	void setFieldNewValue(final String fieldValue);\n+\n+	/**\n+	 * Get the change type.\n+	 *\n+	 * @return the changeType\n+	 */\n+	ChangeType getChangeType();\n+\n+	/**\n+	 * Set the change type.\n+	 *\n+	 * @param changeType the changeType to set\n+	 */\n+	void setChangeType(final ChangeType changeType);\n+\n+	/**\n+	 * Get the operation this change record is part of.\n+	 *\n+	 * @return the changeOperation\n+	 */\n+	ChangeOperation getChangeOperation();\n+\n+	/**\n+	 * Set the operation this change record is part of.\n+	 *\n+	 * @param changeOperation the changeOperation to set\n+	 */\n+	void setChangeOperation(final ChangeOperation changeOperation);\n+\n+}\ndiff -r 1fad4f8fee9c com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/audit/impl/AuditingPersistenceEngineImpl.java\n--- /dev/null	Thu Jan 01 00:00:00 1970 +0000\n+++ b/com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/audit/impl/AuditingPersistenceEngineImpl.java	Mon Feb 16 15:44:38 2009 -0800\n@@ -0,0 +1,502 @@\n+/**\n+ * Copyright (c) Elastic Path Software Inc., 2009\n+ */\n+package com.elasticpath.domain.audit.impl;\n+\n+import java.lang.reflect.Method;\n+import java.util.BitSet;\n+import java.util.Collection;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.log4j.Logger;\n+import org.apache.renamed.openjpa.ee.ManagedRuntime;\n+import org.apache.renamed.openjpa.enhance.PersistenceCapable;\n+import org.apache.renamed.openjpa.enhance.Reflection;\n+import org.apache.renamed.openjpa.event.AttachListener;\n+import org.apache.renamed.openjpa.event.DeleteListener;\n+import org.apache.renamed.openjpa.event.LifecycleEvent;\n+import org.apache.renamed.openjpa.event.PersistListener;\n+import org.apache.renamed.openjpa.kernel.Broker;\n+import org.apache.renamed.openjpa.kernel.OpenJPAStateManager;\n+import org.apache.renamed.openjpa.meta.ClassMetaData;\n+import org.apache.renamed.openjpa.meta.FieldMetaData;\n+import org.apache.renamed.openjpa.persistence.JPAFacadeHelper;\n+import org.apache.renamed.openjpa.persistence.OpenJPAEntityManager;\n+import org.apache.renamed.openjpa.persistence.OpenJPAPersistence;\n+\n+import com.elasticpath.commons.beanframework.BeanFactory;\n+import com.elasticpath.domain.Entity;\n+import com.elasticpath.domain.Persistence;\n+import com.elasticpath.domain.audit.ChangeOperation;\n+import com.elasticpath.domain.audit.ChangeTransaction;\n+import com.elasticpath.domain.audit.ChangeType;\n+import com.elasticpath.domain.audit.DataChanged;\n+import com.elasticpath.persistence.EpPersistenceException;\n+import com.elasticpath.persistence.PersistenceSession;\n+import com.elasticpath.persistence.Transaction;\n+import com.elasticpath.persistence.impl.JpaPersistenceEngineImpl;\n+import com.elasticpath.service.audit.AuditService;\n+\n+/**\n+ * Persistence engine that sits on top of JPA and deals with change sets.\n+ */\n+public class AuditingPersistenceEngineImpl extends JpaPersistenceEngineImpl {\n+\n+	/**\n+	 * Listener for persist events. This will be used to ensure entirely new objects are saved.\n+	 */\n+	public class AuditPersistListener implements PersistListener {\n+\n+		/**\n+		 * Post persistence actions (currently none).\n+		 *\n+		 * @param event the persist event\n+		 */\n+		public void afterPersist(final LifecycleEvent event) {\n+			// Do nothing\n+		}\n+\n+		/**\n+		 * Before persisting, save changeset details for a new object.\n+		 *\n+		 * @param event the persist event\n+		 */\n+		public void beforePersist(final LifecycleEvent event) {\n+			Object object = event.getSource();\n+			if (!getAuditableClasses().contains(object.getClass().getName())) {\n+				return;\n+			}\n+			LOG.info(\"The following object is being persisted: \" + object);\n+			saveNewObject((Persistence) object);\n+		}\n+\n+	}\n+\n+	/**\n+	 * Listener for attach events. This is used to ensure new objects created as part of a merge are tracked.\n+	 */\n+	public class AuditAttachListener implements AttachListener {\n+\n+		/**\n+		 * Post attach actions (currently none).\n+		 *\n+		 * @param event the attach event\n+		 */\n+		public void afterAttach(final LifecycleEvent event) {\n+			// Do nothing\n+		}\n+\n+		/**\n+		 * Before attaching, check if we are attaching a new object and if so save change details.\n+		 *\n+		 * @param event the attach event\n+		 */\n+		public void beforeAttach(final LifecycleEvent event) {\n+			Object object = event.getSource();\n+			if (!getAuditableClasses().contains(object.getClass().getName())) {\n+				return;\n+			}\n+			LOG.info(\"The following object is being stored: \" + object);\n+			PersistenceCapable pcObject = (PersistenceCapable) object;\n+			if (pcObject.pcGetStateManager() == null) {\n+				saveNewObject((Persistence) object);\n+			} else {\n+				saveChangedFields(pcObject);\n+			}\n+		}\n+\n+	}\n+\n+	/**\n+	 * Listen to delete events.\n+	 */\n+	public class AuditDeleteListener implements DeleteListener {\n+		/**\n+		 * Intercept delete and save a delete type changeset.\n+		 *\n+		 * @param event the delete event\n+		 */\n+		public void beforeDelete(final LifecycleEvent event) {\n+			Persistence sourceObject = (Persistence) event.getSource();\n+			if (!getAuditableClasses().contains(sourceObject.getClass().getName())) {\n+				return;\n+			}\n+			createDeleteset(sourceObject);\n+		}\n+\n+		/**\n+		 * Do nothing, we won\'t be deleting.\n+		 *\n+		 * @param event the delete event\n+		 */\n+		public void afterDelete(final LifecycleEvent event) {\n+			// Do nothing\n+		}\n+\n+	}\n+	\n+	private static final Logger LOG = Logger.getLogger(AuditingPersistenceEngineImpl.class);\n+\n+	private Collection<String> auditableClasses;\n+\n+	private BeanFactory beanFactory;\n+\n+	private final ThreadLocal<ChangeOperation> changeOperation = new ThreadLocal<ChangeOperation>();\n+\n+	private final ThreadLocal<Collection<Object>> tlListeners = new ThreadLocal<Collection<Object>>();\n+	\n+	/**\n+	 * Merge the given persistent instance.\n+	 *\n+	 * @param <T> the type of the object\n+	 * @param object the instance to merge\n+	 * @throws EpPersistenceException - in case of persistence errors\n+	 * @return the merged object\n+	 */\n+	@Override\n+	public <T extends Persistence> T merge(final T object) throws EpPersistenceException {\n+\n+		String dirtyClassName = object.getClass().getName();\n+\n+		// Exit if this is not a class we want to track as part of a change set\n+		if (!getAuditableClasses().contains(dirtyClassName)) {\n+			return super.merge(object);\n+		}\n+\n+		beginOperation(object, ChangeType.UPDATE);\n+		T result = super.merge(object);\n+		endOperation();\n+		return result;\n+	}\n+\n+	/**\n+	 * Persist the given instance.\n+	 *\n+	 * @param object the instance to save.\n+	 * @throws EpPersistenceException - in case of persistence errors\n+	 */\n+	@Override\n+	public void save(final Persistence object) throws EpPersistenceException {\n+\n+		String dirtyClassName = object.getClass().getName();\n+\n+		// Exit if this is not a class we want to track as part of a changeset\n+		if (!getAuditableClasses().contains(dirtyClassName)) {\n+			super.save(object);\n+			return;\n+		}\n+\n+		beginOperation(object, ChangeType.CREATE);\n+		addEventListener(new AuditPersistListener());\n+		try {\n+			super.save(object);\n+		} finally {\n+			endOperation();\n+		}\n+	}\n+\n+	/**\n+	 * Update the given persistent instance. Same as merge.\n+	 *\n+	 * @param <T> the type of the object\n+	 * @param object the instance to merge\n+	 * @throws EpPersistenceException - in case of persistence errors\n+	 * @return the merged object\n+	 */\n+	@Override\n+	public <T extends Persistence> T update(final T object) throws EpPersistenceException {\n+		return merge(object);\n+	}\n+\n+	/**\n+	 * Delete an object.\n+	 *\n+	 * @param object the object to delete\n+	 * @throws EpPersistenceException in case of error\n+	 */\n+	@Override\n+	public void delete(final Persistence object) throws EpPersistenceException {\n+		beginOperation(object, ChangeType.DELETE);\n+		super.delete(object);\n+		endOperation();\n+	}\n+\n+	/**\n+	 * Start a new changeset operation.\n+	 *\n+	 * @param object the persistence object being operated on\n+	 * @param type the changeset type\n+	 */\n+	protected void beginOperation(final Persistence object, final ChangeType type) {\n+		addEventListener(new AuditDeleteListener());\n+		addEventListener(new AuditAttachListener());\n+		ChangeTransaction csTransaction = joinTransaction(getTransactionId());\n+		ChangeOperation operation = getBeanFactory().getBean(\"changeOperation\");\n+		operation.setChangeTransaction(csTransaction);\n+		operation.setRootObjectName(object.getClass().getName());\n+		operation.setRootObjectUid(object.getUidPk());\n+		if (object instanceof Entity) {\n+			operation.setRootObjectGuid(((Entity) object).getGuid());\n+		}\n+		operation.setChangeType(type);\n+		operation.setOperationOrder(getNextOperationIndex(csTransaction.getTransactionId()));\n+		PersistenceSession session = getPersistenceSession();\n+		Transaction transaction = session.beginTransaction();\n+		super.save(operation);\n+		transaction.commit();\n+		changeOperation.set(operation);\n+	}\n+\n+	/**\n+	 * End the changeset operation.\n+	 */\n+	protected void endOperation() {\n+		changeOperation.set(null);\n+		Broker broker = getBroker();\n+		Collection<Object> listeners = tlListeners.get();\n+		if (listeners != null) {\n+			for (Object listener : listeners) {\n+				broker.removeLifecycleListener(listener);\n+			}\n+			listeners.clear();\n+		}\n+	}\n+\n+	/**\n+	 * Get the index of the next operation in the given transaction.\n+	 *\n+	 * @param transactionId the ID of the transaction this operation belongs to\n+	 * @return the next operation index (1 if this is the first)\n+	 */\n+	protected int getNextOperationIndex(final String transactionId) {\n+		List<Integer> result = super.retrieveByNamedQuery(\"GET_MAX_CHANGE_OPERATION_INDEX\", new Object[] { transactionId });\n+		if (result.size() > 0 && result.get(0) != null) {\n+			return result.get(0).intValue() + 1;\n+		}\n+		return 1;\n+	}\n+\n+	/**\n+	 * Join the changeset transaction identified, or create a new one if none exist.\n+	 * @param transactionId the ID of the transaction to join.\n+	 *\n+	 * @return a <code>ChangesetTransaction</code>\n+	 */\n+	protected ChangeTransaction joinTransaction(final String transactionId) {\n+		List<ChangeTransaction> result = super.retrieveByNamedQuery(\"FIND_CHANGE_TRANSACTION\", new Object[] { transactionId });\n+		if (result.size() > 0) {\n+			return result.get(0);\n+		}\n+\n+		ChangeTransaction csTransaction = getBeanFactory().getBean(\"changeTransaction\");\n+		csTransaction.setChangeSetGuid(getAuditMetadata().get(\"changeSetGuid\"));\n+		csTransaction.setTransactionId(transactionId);\n+		csTransaction.setUserGuid(getAuditMetadata().get(\"userGuid\"));\n+		PersistenceSession session = getPersistenceSession();\n+		Transaction transaction = session.beginTransaction();\n+		super.save(csTransaction);\n+		transaction.commit();\n+		return csTransaction;\n+	}\n+\n+	/**\n+	 * Get the audit metadata.\n+	 * \n+	 * @return a map of key, value metadata\n+	 */\n+	protected Map<String, String> getAuditMetadata() {\n+		AuditService auditService = getBeanFactory().getBean(\"auditService\");\n+		return auditService.getMetadata();\n+	}\n+	\n+	/**\n+	 * Add the load listener to the broker.\n+	 * @param eventListener the listener to add.\n+	 */\n+	private void addEventListener(final Object eventListener) {\n+		Broker broker = getBroker();\n+		broker.addLifecycleListener(eventListener, null);\n+		if (tlListeners.get() == null) {\n+			tlListeners.set(new HashSet<Object>());\n+		}\n+		tlListeners.get().add(eventListener);\n+	}\n+\n+	private void saveNewObject(final Persistence object) {\n+		if (object instanceof PersistenceCapable) {\n+			ClassMetaData metaData = JPAFacadeHelper.getMetaData(getEntityManager(), object.getClass());\n+			for (FieldMetaData fieldMetaData : metaData.getFields()) {\n+				if (fieldMetaData.isPrimaryKey()) {\n+					LOG.info(\"Field \" + fieldMetaData.getName() + \" is an identity field, ignoring\");\n+					continue;\n+				}\n+				Method method = Reflection.findGetter(object.getClass(), fieldMetaData.getName(), true);\n+				saveChangedField(fieldMetaData.getName(), Reflection.get(object, method), object, ChangeType.CREATE);\n+			}\n+		}\n+	}\n+\n+	/**\n+	 * Save the dirty fields of the given object.\n+	 *\n+	 * @param object\n+	 */\n+	private void saveChangedFields(final PersistenceCapable object) {\n+		OpenJPAStateManager manager = (OpenJPAStateManager) object.pcGetStateManager();\n+		ClassMetaData metaData = JPAFacadeHelper.getMetaData(getEntityManager(), object.getClass());\n+		BitSet dirtySet = manager.getDirty();\n+		for (int dirtyIndex = dirtySet.nextSetBit(0); dirtyIndex >= 0; dirtyIndex = dirtySet.nextSetBit(dirtyIndex + 1)) {\n+			FieldMetaData fieldMetaData = metaData.getField(dirtyIndex);\n+			if (fieldMetaData.isVersion()) {\n+				LOG.info(\"Field \" + fieldMetaData.getName() + \" is a version field, ignoring\");\n+				continue;\n+			}\n+			Method method = Reflection.findGetter(object.getClass(), fieldMetaData.getName(), true);\n+			saveChangedField(fieldMetaData.getName(), Reflection.get(object, method), (Persistence) object, ChangeType.UPDATE);\n+		}\n+	}\n+\n+	/**\n+	 * Log the dirty state of the given object. If the object is a persistence object,\n+	 * we examine it recursively. If it is a collection, we iterate through the values\n+	 * and examine then. Otherwise we just look at the dirty state of the object and leave it at that.\n+	 *\n+	 * @param fieldName the name of the field to save\n+	 * @param field the field object\n+	 * @param parent the object that owns the field\n+	 * @param changeType the type of change\n+	 */\n+	private void saveChangedField(final String fieldName, final Object field, final Persistence parent, final ChangeType changeType) {\n+		if (field instanceof Collection) {\n+			for (Object member : (Collection<Object>) field) {\n+				saveChangedField(fieldName, member, parent, changeType);\n+			}\n+			return;\n+		}\n+\n+		if (field instanceof Map) {\n+			for (Map.Entry<Object, Object> entry : ((Map<Object, Object>) field).entrySet()) {\n+				saveChangedField(fieldName, entry.getValue(), parent, changeType);\n+			}\n+			return;\n+		}\n+\n+		recordDataChanged(parent, fieldName, field, changeType);\n+}\n+\n+	private void recordDataChanged(final Persistence object, final String fieldName, final Object field, final ChangeType changeType) {\n+		DataChanged dataChanged = getBeanFactory().getBean(\"dataChanged\");\n+		dataChanged.setObjectName(object.getClass().getName());\n+		dataChanged.setObjectUid(object.getUidPk());\n+		if (object instanceof Entity) {\n+			dataChanged.setObjectGuid(((Entity) object).getGuid());\n+		}\n+		dataChanged.setFieldName(fieldName);\n+		dataChanged.setFieldNewValue(getFieldValue(field));\n+		dataChanged.setChangeType(changeType);\n+		dataChanged.setChangeOperation(changeOperation.get());\n+		\n+		if (ChangeType.UPDATE.equals(changeType)) {\n+			Persistence oldObject = super.get(object.getClass(), object.getUidPk());\n+			Method method = Reflection.findGetter(oldObject.getClass(), fieldName, true);\n+			dataChanged.setFieldOldValue(getFieldValue(Reflection.get(object, method)));\n+		}\n+		\n+		super.saveOrMerge(dataChanged);\n+	}\n+\n+	private String getFieldValue(final Object field) {\n+		if (field == null) {\n+			return null;\n+		}\n+		if (field instanceof Entity) {\n+			return ((Entity) field).getGuid();\n+		}\n+		if (field instanceof Persistence) {\n+			return String.valueOf(((Persistence) field).getUidPk());\n+		}\n+		return field.toString();\n+	}\n+\n+	private void createDeleteset(final Persistence object) {\n+		DataChanged dataChanged = getBeanFactory().getBean(\"dataChanged\");\n+		dataChanged.setObjectName(object.getClass().getName());\n+		dataChanged.setObjectUid(object.getUidPk());\n+		if (object instanceof Entity) {\n+			dataChanged.setObjectGuid(((Entity) object).getGuid());\n+		}\n+		dataChanged.setChangeType(ChangeType.DELETE);\n+		dataChanged.setChangeOperation(changeOperation.get());\n+		PersistenceSession session = getPersistenceSession();\n+		Transaction transaction = session.beginTransaction();\n+		session.save(dataChanged);\n+		transaction.commit();\n+	}\n+\n+	/**\n+	 * Get the collection of class names that we want to audit.\n+	 *\n+	 * @return the collection of auditable classes.\n+	 */\n+	public Collection<String> getAuditableClasses() {\n+		return auditableClasses;\n+	}\n+\n+	/**\n+	 * Set the list of class names whose changes can be audited.\n+	 *\n+	 * @param auditableClasses the collection of auditable classes to set\n+	 */\n+	public void setAuditableClasses(final Collection<String> auditableClasses) {\n+		this.auditableClasses = auditableClasses;\n+	}\n+\n+	/**\n+	 * Get the bean factory for creating new beans.\n+	 *\n+	 * @return the beanFactory\n+	 */\n+	protected BeanFactory getBeanFactory() {\n+		return beanFactory;\n+	}\n+\n+	/**\n+	 * Set the factory used for creating new beans.\n+	 *\n+	 * @param beanFactory the beanFactory to set\n+	 */\n+	public void setBeanFactory(final BeanFactory beanFactory) {\n+		this.beanFactory = beanFactory;\n+	}\n+\n+	/**\n+	 * Get an identifier for this transaction.\n+	 *\n+	 * @return the transaction key hashcode as a string\n+	 */\n+	public String getTransactionId() {\n+		ManagedRuntime runtime = getBroker().getManagedRuntime();\n+		int transactionId = 0;\n+		try {\n+			Object key = runtime.getTransactionKey();\n+			transactionId = key.hashCode();\n+		} catch (Exception e) {\n+			LOG.error(\"Error trying to find transaction\", e);\n+		}\n+		return String.valueOf(transactionId);\n+	}\n+\n+	/**\n+	 * Get the OpenJPA Broker.\n+	 *\n+	 * @return the broker\n+	 */\n+	protected Broker getBroker() {\n+		OpenJPAEntityManager openjpaEM = OpenJPAPersistence.cast(getEntityManager());\n+		return JPAFacadeHelper.toBroker(openjpaEM);\n+	}\n+\n+}\n+\ndiff -r 1fad4f8fee9c com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/audit/impl/ChangeOperationImpl.java\n--- /dev/null	Thu Jan 01 00:00:00 1970 +0000\n+++ b/com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/audit/impl/ChangeOperationImpl.java	Mon Feb 16 15:44:38 2009 -0800\n@@ -0,0 +1,182 @@\n+/**\n+ *\n+ */\n+package com.elasticpath.domain.audit.impl;\n+\n+import javax.persistence.Basic;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.Table;\n+import javax.persistence.TableGenerator;\n+\n+import org.apache.renamed.openjpa.persistence.Externalizer;\n+import org.apache.renamed.openjpa.persistence.Factory;\n+import org.apache.renamed.openjpa.persistence.Persistent;\n+import org.apache.renamed.openjpa.persistence.jdbc.ForeignKey;\n+\n+import com.elasticpath.domain.audit.ChangeOperation;\n+import com.elasticpath.domain.audit.ChangeTransaction;\n+import com.elasticpath.domain.audit.ChangeType;\n+import com.elasticpath.domain.impl.AbstractEntityImpl;\n+\n+/**\n+ * An operation that results in a set of changes.\n+ *\n+ */\n+@Entity\n+@Table(name = ChangeOperationImpl.TABLE_NAME)\n+public class ChangeOperationImpl extends AbstractEntityImpl implements ChangeOperation {\n+\n+	/** The name of the table & generator to use for persistence. */\n+	public static final String TABLE_NAME = \"TCHANGEOPERATION\";\n+\n+	private long uidPk;\n+\n+	private ChangeTransaction changeTransaction;\n+\n+	private int operationOrder;\n+\n+	private String rootObjectName;\n+\n+	private long rootObjectUid;\n+\n+	private String rootObjectGuid;\n+\n+	private ChangeType changeType;\n+\n+	/**\n+	 * Gets the unique identifier for this domain model object.\n+	 * @return the unique identifier.\n+	 */\n+	@Id\n+	@Column(name = \"UIDPK\")\n+	@GeneratedValue(strategy = GenerationType.TABLE, generator = TABLE_NAME)\n+	@TableGenerator(name = TABLE_NAME, table = \"JPA_GENERATED_KEYS\",\n+					pkColumnName = \"ID\", valueColumnName = \"LAST_VALUE\", pkColumnValue = TABLE_NAME)\n+	public long getUidPk() {\n+		return uidPk;\n+	}\n+\n+	/**\n+	 * Sets the unique identifier for this domain model object.\n+	 *\n+	 * @param uidPk the new unique identifier.\n+	 */\n+	public void setUidPk(final long uidPk) {\n+		this.uidPk = uidPk;\n+	}\n+\n+	/**\n+	 * Get the business transaction this operation belongs to.\n+	 *\n+	 * @return the changesetTransaction\n+	 */\n+	@ManyToOne(targetEntity = ChangeTransactionImpl.class)\n+	@JoinColumn(name = \"CHANGE_TRANSACTION_UID\")\n+	@ForeignKey\n+	public ChangeTransaction getChangeTransaction() {\n+		return changeTransaction;\n+	}\n+\n+	/**\n+	 * Set the business transaction this operation belongs to.\n+	 *\n+	 * @param changeTransaction the changeTransaction to set\n+	 */\n+	public void setChangeTransaction(final ChangeTransaction changeTransaction) {\n+		this.changeTransaction = changeTransaction;\n+	}\n+\n+	/**\n+	 * @return the order\n+	 */\n+	@Basic\n+	@Column(name = \"OPERATION_ORDER\")\n+	public int getOperationOrder() {\n+		return operationOrder;\n+	}\n+\n+	/**\n+	 * @param operationOrder the order to set\n+	 */\n+	public void setOperationOrder(final int operationOrder) {\n+		this.operationOrder = operationOrder;\n+	}\n+\n+	/**\n+	 * @return the rootObjectName\n+	 */\n+	@Basic\n+	@Column(name = \"ROOT_OBJECT_NAME\")\n+	public String getRootObjectName() {\n+		return rootObjectName;\n+	}\n+\n+	/**\n+	 * @param rootObjectName the rootObjectName to set\n+	 */\n+	public void setRootObjectName(final String rootObjectName) {\n+		this.rootObjectName = rootObjectName;\n+	}\n+\n+	/**\n+	 * @return the rootObjectUid\n+	 */\n+	@Basic\n+	@Column(name = \"ROOT_OBJECT_UID\")\n+	public long getRootObjectUid() {\n+		return rootObjectUid;\n+	}\n+\n+	/**\n+	 * @param rootObjectUid the rootObjectUid to set\n+	 */\n+	public void setRootObjectUid(final long rootObjectUid) {\n+		this.rootObjectUid = rootObjectUid;\n+	}\n+\n+	/**\n+	 * @return the rootObjectGuid\n+	 */\n+	@Basic\n+	@Column(name = \"ROOT_OBJECT_GUID\")\n+	public String getRootObjectGuid() {\n+		return rootObjectGuid;\n+	}\n+\n+	/**\n+	 * @param rootObjectGuid the rootObjectGuid to set\n+	 */\n+	public void setRootObjectGuid(final String rootObjectGuid) {\n+		this.rootObjectGuid = rootObjectGuid;\n+	}\n+\n+	/**\n+	 * Get the change type.\n+	 *\n+	 * @return the <code>ChangeType</code>\n+	 */\n+	@Persistent\n+	@Column(name = \"CHANGE_TYPE\")\n+	@Externalizer(\"getName\")\n+	@Factory(\"getEnum\")\n+	public ChangeType getChangeType() {\n+		return changeType;\n+	}\n+\n+	/**\n+	 * Set the change type.\n+	 *\n+	 * @param changeType the <code>ChangeType</code> to set\n+	 */\n+	public void setChangeType(final ChangeType changeType) {\n+		this.changeType = changeType;\n+	}\n+\n+\n+}\ndiff -r 1fad4f8fee9c com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/audit/impl/ChangeTransactionImpl.java\n--- /dev/null	Thu Jan 01 00:00:00 1970 +0000\n+++ b/com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/audit/impl/ChangeTransactionImpl.java	Mon Feb 16 15:44:38 2009 -0800\n@@ -0,0 +1,119 @@\n+/**\n+ * Copyright (c) Elastic Path Software Inc., 2009\n+ */\n+package com.elasticpath.domain.audit.impl;\n+\n+import javax.persistence.Basic;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.Table;\n+import javax.persistence.TableGenerator;\n+\n+import com.elasticpath.domain.audit.ChangeTransaction;\n+import com.elasticpath.domain.impl.AbstractEntityImpl;\n+\n+/**\n+ * Defines a change transaction. This is the <b>business</b> transaction that\n+ * surrounds a collection of change operations.\n+ */\n+@Entity\n+@Table(name = ChangeTransactionImpl.TABLE_NAME)\n+public class ChangeTransactionImpl extends AbstractEntityImpl implements ChangeTransaction {\n+\n+	/** The name of the table & generator to use for persistence. */\n+	public static final String TABLE_NAME = \"TCHANGETRANSACTION\";\n+\n+	private long uidPk;\n+\n+	private String userGuid;\n+\n+	private String changeSetGuid;\n+\n+	private String transactionId;\n+\n+	/**\n+	 * Gets the unique identifier for this domain model object.\n+	 * @return the unique identifier.\n+	 */\n+	@Id\n+	@Column(name = \"UIDPK\")\n+	@GeneratedValue(strategy = GenerationType.TABLE, generator = TABLE_NAME)\n+	@TableGenerator(name = TABLE_NAME, table = \"JPA_GENERATED_KEYS\",\n+					pkColumnName = \"ID\", valueColumnName = \"LAST_VALUE\", pkColumnValue = TABLE_NAME)\n+	public long getUidPk() {\n+		return uidPk;\n+	}\n+\n+	/**\n+	 * Sets the unique identifier for this domain model object.\n+	 *\n+	 * @param uidPk the new unique identifier.\n+	 */\n+	public void setUidPk(final long uidPk) {\n+		this.uidPk = uidPk;\n+	}\n+\n+	/**\n+	 * Get the GUID of the <code>ChangeSet</code> that this transaction belongs to.\n+	 *\n+	 * @return the GUID\n+	 */\n+	@Basic\n+	@Column(name = \"CHANGESET_GUID\")\n+	public String getChangeSetGuid() {\n+		return changeSetGuid;\n+	}\n+\n+	/**\n+	 * Set the GUID of the Change Set that owns this transaction.\n+	 *\n+	 * @param changeSetGuid the GUID of the <code>ChangeSet</code> to set\n+	 */\n+	public void setChangeSetGuid(final String changeSetGuid) {\n+		this.changeSetGuid = changeSetGuid;\n+	}\n+\n+	/**\n+	 * Get the GUID of the user making the change.\n+	 *\n+	 * @return the GUID of the user\n+	 */\n+	@Basic\n+	@Column(name = \"USER_GUID\")\n+	public String getUserGuid() {\n+		return userGuid;\n+	}\n+\n+	/**\n+	 * Set the GUID of the user making the change.\n+	 *\n+	 * @param userGuid the user GUID to set\n+	 */\n+	public void setUserGuid(final String userGuid) {\n+		this.userGuid = userGuid;\n+	}\n+\n+	/**\n+	 * Get an identifier for the transaction.\n+	 *\n+	 * @return the transactionId\n+	 */\n+	@Basic\n+	@Column(name = \"TRANSACTION_ID\")\n+	public String getTransactionId() {\n+		return transactionId;\n+	}\n+\n+	/**\n+	 * Set the transaction identifier.\n+	 *\n+	 * @param transactionId the transactionId to set\n+	 */\n+	public void setTransactionId(final String transactionId) {\n+		this.transactionId = transactionId;\n+	}\n+}\n+\ndiff -r 1fad4f8fee9c com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/audit/impl/DataChangedImpl.java\n--- /dev/null	Thu Jan 01 00:00:00 1970 +0000\n+++ b/com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/audit/impl/DataChangedImpl.java	Mon Feb 16 15:44:38 2009 -0800\n@@ -0,0 +1,240 @@\n+/**\n+ * Copyright (c) Elastic Path Software Inc., 2008\n+ */\n+package com.elasticpath.domain.audit.impl;\n+\n+import javax.persistence.Basic;\n+import javax.persistence.Column;\n+import javax.persistence.Entity;\n+import javax.persistence.GeneratedValue;\n+import javax.persistence.GenerationType;\n+import javax.persistence.Id;\n+import javax.persistence.JoinColumn;\n+import javax.persistence.ManyToOne;\n+import javax.persistence.Table;\n+import javax.persistence.TableGenerator;\n+\n+import org.apache.renamed.openjpa.persistence.Externalizer;\n+import org.apache.renamed.openjpa.persistence.Factory;\n+import org.apache.renamed.openjpa.persistence.Persistent;\n+import org.apache.renamed.openjpa.persistence.jdbc.ForeignKey;\n+\n+import com.elasticpath.commons.constants.GlobalConstants;\n+import com.elasticpath.domain.audit.ChangeOperation;\n+import com.elasticpath.domain.audit.ChangeType;\n+import com.elasticpath.domain.audit.DataChanged;\n+import com.elasticpath.domain.impl.AbstractEntityImpl;\n+\n+/**\n+ * Represents a change set.\n+ */\n+@Entity\n+@Table(name = DataChangedImpl.TABLE_NAME)\n+public class DataChangedImpl extends AbstractEntityImpl implements DataChanged {\n+\n+	/** The name of the table & generator to use for persistence. */\n+	public static final String TABLE_NAME = \"TDATACHANGED\";\n+\n+	private long uidPk;\n+\n+	private String objectName;\n+\n+	private long objectUid;\n+\n+	private String objectGuid;\n+\n+	private String fieldName;\n+\n+	private String fieldOldValue;\n+	\n+	private String fieldNewValue;\n+\n+	private ChangeType changeType;\n+\n+	private ChangeOperation changeOperation;\n+\n+	/**\n+	 * Gets the unique identifier for this domain model object.\n+	 * @return the unique identifier.\n+	 */\n+	@Id\n+	@Column(name = \"UIDPK\")\n+	@GeneratedValue(strategy = GenerationType.TABLE, generator = TABLE_NAME)\n+	@TableGenerator(name = TABLE_NAME, table = \"JPA_GENERATED_KEYS\",\n+					pkColumnName = \"ID\", valueColumnName = \"LAST_VALUE\", pkColumnValue = TABLE_NAME)\n+	public long getUidPk() {\n+		return uidPk;\n+	}\n+\n+	/**\n+	 * Sets the unique identifier for this domain model object.\n+	 *\n+	 * @param uidPk the new unique identifier.\n+	 */\n+	public void setUidPk(final long uidPk) {\n+		this.uidPk = uidPk;\n+	}\n+\n+	/**\n+	 * Get the name of the object that has a change.\n+	 *\n+	 * @return the object name\n+	 */\n+	@Basic\n+	@Column(name = \"OBJECT_NAME\")\n+	public String getObjectName() {\n+		return objectName;\n+	}\n+\n+	/**\n+	 * Set the name of the object that has a change.\n+	 *\n+	 * @param objectName the object name to set\n+	 */\n+	public void setObjectName(final String objectName) {\n+		this.objectName = objectName;\n+	}\n+\n+	/**\n+	 * Get the identity of the changed object.\n+	 *\n+	 * @return the objectUid\n+	 */\n+	@Basic\n+	@Column(name = \"OBJECT_UID\")\n+	public long getObjectUid() {\n+		return objectUid;\n+	}\n+\n+	/**\n+	 * Set the UID of the changed object.\n+	 *\n+	 * @param objectUid the objectUid to set\n+	 */\n+	public void setObjectUid(final long objectUid) {\n+		this.objectUid = objectUid;\n+	}\n+\n+	/**\n+	 * Get the object GUID.\n+	 *\n+	 * @return the objectGuid\n+	 */\n+	@Basic\n+	@Column(name = \"OBJECT_GUID\")\n+	public String getObjectGuid() {\n+		return objectGuid;\n+	}\n+\n+	/**\n+	 * Set the object GUID.\n+	 *\n+	 * @param objectGuid the objectGuid to set\n+	 */\n+	public void setObjectGuid(final String objectGuid) {\n+		this.objectGuid = objectGuid;\n+	}\n+\n+	/**\n+	 * Get the name of the field that has changed.\n+	 *\n+	 * @return the fieldName\n+	 */\n+	@Basic\n+	@Column(name = \"FIELD_NAME\")\n+	public String getFieldName() {\n+		return fieldName;\n+	}\n+\n+	/**\n+	 * Set the name of the field that has changed.\n+	 *\n+	 * @param fieldName the fieldName to set\n+	 */\n+	public void setFieldName(final String fieldName) {\n+		this.fieldName = fieldName;\n+	}\n+\n+	/**\n+	 * Get the old value of the changed field.\n+	 *\n+	 * @return the fieldValue\n+	 */\n+	@Column(name = \"FIELD_OLD_VALUE\", length = GlobalConstants.LONG_TEXT_MAX_LENGTH)\n+	public String getFieldOldValue() {\n+		return fieldOldValue;\n+	}\n+\n+	/**\n+	 * Set the old value of the changed field.\n+	 *\n+	 * @param fieldValue the fieldValue to set\n+	 */\n+	public void setFieldOldValue(final String fieldValue) {\n+		this.fieldOldValue = fieldValue;\n+	}\n+\n+	/**\n+	 * Get the new value of the changed field.\n+	 *\n+	 * @return the fieldValue\n+	 */\n+	@Column(name = \"FIELD_NEW_VALUE\", length = GlobalConstants.LONG_TEXT_MAX_LENGTH)\n+	public String getFieldNewValue() {\n+		return fieldNewValue;\n+	}\n+\n+	/**\n+	 * Set the new value of the changed field.\n+	 *\n+	 * @param fieldValue the fieldValue to set\n+	 */\n+	public void setFieldNewValue(final String fieldValue) {\n+		this.fieldNewValue = fieldValue;\n+	}\n+\n+	/**\n+	 * Get the change type.\n+	 *\n+	 * @return the <code>ChangeType</code>\n+	 */\n+	@Persistent\n+	@Column(name = \"CHANGE_TYPE\")\n+	@Externalizer(\"getName\")\n+	@Factory(\"getEnum\")\n+	public ChangeType getChangeType() {\n+		return changeType;\n+	}\n+\n+	/**\n+	 * Set the change type.\n+	 *\n+	 * @param changeType the <code>ChangeType</code> to set\n+	 */\n+	public void setChangeType(final ChangeType changeType) {\n+		this.changeType = changeType;\n+	}\n+\n+	/**\n+	 * Get the operation this change record is part of.\n+	 *\n+	 * @return the <code>ChangeOperation</code>\n+	 */\n+	@ManyToOne(targetEntity = ChangeOperationImpl.class)\n+	@JoinColumn(name = \"CHANGE_OPERATION_UID\")\n+	@ForeignKey\n+	public ChangeOperation getChangeOperation() {\n+		return changeOperation;\n+	}\n+\n+	/**\n+	 * Set the operation this change record is part of.\n+	 *\n+	 * @param changeOperation the <code>ChangeOperation</code> to set\n+	 */\n+	public void setChangeOperation(final ChangeOperation changeOperation) {\n+		this.changeOperation = changeOperation;\n+	}\n+\n+\n+}\ndiff -r 1fad4f8fee9c com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/impl/PrototypeBeanFactory.java\n--- a/com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/impl/PrototypeBeanFactory.java	Wed Feb 11 17:51:06 2009 -0800\n+++ b/com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/domain/impl/PrototypeBeanFactory.java	Mon Feb 16 15:44:38 2009 -0800\n@@ -394,6 +394,9 @@\n 		addBean(ContextIdNames.BUSINESS_OBJECT_METADATA, \"com.elasticpath.domain.objectgroup.impl.BusinessObjectMetadataImpl\");\n 		addBean(ContextIdNames.CHANGESET_MEMBER, \"com.elasticpath.domain.changeset.impl.ChangeSetMemberImpl\");\n 		addBean(ContextIdNames.DYNAMIC_CONTENT , \"com.elasticpath.domain.campaign.impl.DynamicContentImpl\");\n+		addBean(\"changeTransaction\", \"com.elasticpath.domain.audit.impl.ChangeTransactionImpl\");\n+		addBean(\"changeOperation\", \"com.elasticpath.domain.audit.impl.ChangeOperationImpl\");\n+		addBean(\"dataChanged\", \"com.elasticpath.domain.audit.impl.DataChangedImpl\");\n 	}\n \n 	/**\ndiff -r 1fad4f8fee9c com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/service/audit/AuditService.java\n--- /dev/null	Thu Jan 01 00:00:00 1970 +0000\n+++ b/com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/service/audit/AuditService.java	Mon Feb 16 15:44:38 2009 -0800\n@@ -0,0 +1,28 @@\n+/**\n+ * Copyright (c) Elastic Path Software Inc., 2009\n+ */\n+package com.elasticpath.service.audit;\n+\n+import java.util.Map;\n+\n+/**\n+ * Service methods for audit functionality.\n+ */\n+public interface AuditService {\n+\n+	/**\n+	 * Register auditing metadata.\n+	 * \n+	 * @param metadata the metadata to register\n+	 */\n+	void registerMetadata(final Map<String, String> metadata);\n+\n+\n+	/**\n+	 * Get the auditing metadata.\n+	 * \n+	 * @return a map of key, value metadata.\n+	 */\n+	Map<String, String> getMetadata();\n+\n+}\n\\ No newline at end of file\ndiff -r 1fad4f8fee9c com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/service/audit/impl/AuditHttpInvokerServiceExporter.java\n--- /dev/null	Thu Jan 01 00:00:00 1970 +0000\n+++ b/com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/service/audit/impl/AuditHttpInvokerServiceExporter.java	Mon Feb 16 15:44:38 2009 -0800\n@@ -0,0 +1,64 @@\n+/**\n+ * Copyright (c) Elastic Path Software Inc., 2008\n+ */\n+package com.elasticpath.service.audit.impl;\n+\n+import java.io.IOException;\n+import java.util.Map;\n+\n+import javax.servlet.http.HttpServletRequest;\n+\n+import org.springframework.beans.BeansException;\n+import org.springframework.beans.factory.BeanFactory;\n+import org.springframework.beans.factory.BeanFactoryAware;\n+import org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter;\n+import org.springframework.remoting.support.RemoteInvocation;\n+\n+import com.elasticpath.service.audit.AuditService;\n+\n+/**\n+ * Extension to the Spring HttpInvokerServiceExporter that tracks info about the caller. \n+ */\n+public class AuditHttpInvokerServiceExporter extends HttpInvokerServiceExporter implements BeanFactoryAware {\n+\n+	private BeanFactory beanFactory;\n+	\n+	/**\n+	 * Set the bean factory used for getting beans.\n+	 * \n+	 * @param beanFactory the <code>BeanFactory</code> to use\n+	 * @throws BeansException in case of error\n+	 */\n+	public void setBeanFactory(final BeanFactory beanFactory) throws BeansException {\n+		this.beanFactory = beanFactory;\n+	}\n+\n+	/**\n+	 * When a read is called on the remote invocation, intercept it and read off the\n+	 * attribute we require.\n+	 * \n+	 * @param request the request involved\n+	 * @return the <code>RemoteInvocation</code>\n+	 * @throws IOException in case of I/O failure\n+	 * @throws ClassNotFoundException if thrown during deserialization\n+	 */\n+	@Override\n+	protected RemoteInvocation readRemoteInvocation(final HttpServletRequest request) throws IOException, ClassNotFoundException {\n+		RemoteInvocation remoteInvocation = super.readRemoteInvocation(request);\n+		Map<String, String> metadata = (Map<String, String>) remoteInvocation.getAttribute(\"auditMetadata\");\n+		processMetadata(metadata);\n+		return remoteInvocation;\n+	}\n+\n+	/**\n+	 * Process the metadata - register it on the audit service.\n+	 * \n+	 * @param metadata the metadata to register.\n+	 */\n+	protected void processMetadata(final Map<String, String> metadata) {\n+		AuditService auditService = (AuditService) beanFactory.getBean(\"auditService\");\n+		auditService.registerMetadata(metadata);\n+	}\n+\n+	\n+}\ndiff -r 1fad4f8fee9c com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/service/audit/impl/AuditServiceImpl.java\n--- /dev/null	Thu Jan 01 00:00:00 1970 +0000\n+++ b/com.elasticpath.core/WEB-INF/src/main/java/com/elasticpath/service/audit/impl/AuditServiceImpl.java	Mon Feb 16 15:44:38 2009 -0800\n@@ -0,0 +1,46 @@\n+/**\n+ * Copyright (c) Elastic Path Software Inc., 2009\n+ */\n+package com.elasticpath.service.audit.impl;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import com.elasticpath.service.audit.AuditService;\n+import com.elasticpath.service.impl.AbstractEpServiceImpl;\n+\n+/**\n+ * Audit service.\n+ */\n+public class AuditServiceImpl extends AbstractEpServiceImpl implements AuditService {\n+\n+	private final ThreadLocal<Map<String, String>> metadata = new ThreadLocal<Map<String, String>>() {\n+	    @Override\n+		protected synchronized Map<String, String> initialValue() {\n+	        return new HashMap<String, String>();\n+	    }\n+	};\n+\n+	\n+	/**\n+	 * Register auditing metadata and place in a <code>ThreadLocal</code> variable.\n+	 * \n+	 * @param metadata the metadata to register\n+	 */\n+	public void registerMetadata(final Map<String, String> metadata) {\n+		this.metadata.set(metadata); \n+	}\n+\n+\n+	/**\n+	 * Get the auditing metadata.\n+	 * \n+	 * @return a map of key, value metadata.\n+	 */\n+	public Map<String, String> getMetadata() {\n+		return metadata.get();\n+	}\n+\n+	\n+	\n+}\n\n',13,'77f21102cfd21545255b39d08664a3'),('PasteBin.java',84,'Unknown','public class PasteBin {\r\n	\r\n	public String title;\r\n	public String language;\r\n	public String author;\r\n	public String editorSelection;\r\n\r\n	public PasteBin() {		\r\n	}\r\n	\r\n	public PasteBin(final String title, \r\n					final String language, ',1,'60106a3e8e53d0021432bb99ac033e'),('Testy testy',85,'Testy testy','body {\r\n    	text-align: center;\r\n	min-width: 600px;\r\n	background-color:#000;\r\n	\r\n}\r\n\r\nhtml { overflow-x: hidden; overflow-y: scroll; }\r\n\r\n	a, a:link, a:visited {\r\n\r\n		color:#B2FF00; \r\n		text-decoration:none; \r\n		border-bottom:1px dotted #B2FF00; \r\n		padding-bottom:1px;\r\n\r\n		}\r\n\r\n\r\n		\r\n\r\n	a:hover {\r\n\r\n		color: #fff;\r\n\r\n		}\r\n\r\n\r\n\r\n\r\n#wrapper {\r\n	margin:0 auto;\r\n	width:900px;\r\n	text-align: left;\r\n	margin-top:-10px;\r\n		\r\n}\r\n\r\nhtml>/**/body #wrapper {\r\n	\r\n	margin-top:0px;\r\n}\r\n\r\n#innerwrapper {\r\n\r\n	background-color:#282828;\r\n	margin-top:20px;\r\n	border-left:10px solid #1A1A1A;\r\n	border-bottom:10px solid #1A1A1A;\r\n	padding-top:5px;\r\n	background-image: url(ooglyImages/wrappercurve.gif); \r\n	background-position: right top;\r\n	background-repeat: no-repeat;\r\n\r\n}\r\n\r\n\r\n\r\n.logo  {\r\n\r\n	position:relative;\r\n	float:right;\r\n	margin-right:10px;\r\n	padding-top:5px;\r\n	\r\n}\r\n\r\n\r\n.headerbullet {\r\n\r\n	color:#B2FF00; \r\n	font-size:14px;\r\n	padding-right:10px;\r\n	\r\n\r\n}\r\n\r\n#nav {\r\n	\r\n	height:70px;\r\n	margin-left:10px;\r\n\r\n	\r\n\r\n\r\n}\r\n\r\nhtml>/**/body #nav {\r\n\r\n	height:50px;\r\n}\r\n\r\n#nav a {\r\n\r\n	color: #6c6c6c;\r\n	text-decoration:none;\r\n	border:0px;\r\n	\r\n}\r\n\r\n#nav a:hover {\r\n	color: #C8C8C8;\r\n	\r\n}\r\n\r\n#nav ul {\r\n\r\n	padding-top:50px;\r\n}\r\n\r\nhtml>/**/body #nav ul {\r\n\r\n	padding-top:30px;\r\n}\r\n\r\n#nav li {\r\n\r\n	border-right:1px solid #6c6c6c;\r\n	margin:0px;\r\n	padding:0px;\r\n	padding-right:10px;\r\n	padding-left:10px;\r\n	font-family:verdana, arial, sans serif;\r\n	font-size: 12px;\r\n	text-align:center;\r\n	vertical-align:middle;\r\n	list-style-type: none;\r\n	display: inline;\r\n	width: auto;\r\n\r\n}\r\n\r\n\r\n.active {\r\n\r\n\r\n	border-bottom: 1px solid #B2FF00; \r\n	padding-bottom:4px;\r\n	color:#fff;\r\n\r\n}\r\n\r\n#content {\r\n\r\n	margin:10px;\r\n	padding:10px;\r\n	font-family:verdana, arial, comic sans;\r\n	font-size:11px;\r\n	color:#fff;\r\n	min-height:350px;\r\n	background-color:#444444;\r\n\r\n	\r\n}\r\n\r\n#content p {\r\n	padding:10px;\r\n	padding-top:0px;\r\n	padding-left:30px;\r\n	float:left;\r\n	width:62%\r\n\r\n}\r\n\r\n\r\n#content h1 {\r\n	color:#7A7A7A;\r\n	font-size:24px;\r\n	font-weight:bold;\r\n\r\n}\r\n\r\n.services {\r\n\r\n	font-size:11px;\r\n	color:#B2FF00;\r\n\r\n\r\n}\r\n\r\n#content img {\r\n	border:1px solid #fff;\r\n	float:right;\r\n	display:inline;\r\n	margin-right:20px;\r\n}\r\n\r\n\r\n#fotterwrap {\r\n\r\n	margin:0 auto;\r\n	width:900px;\r\n	text-align: left;\r\n\r\n}\r\n\r\n#copyright {\r\n\r\n	float:left;\r\n	font-family:verdana, arial, sans serif;\r\n	font-size: 10px;\r\n	color: #7A7A7A;\r\n	padding-top:15px;\r\n	width:20%;  \r\n	padding-left:25px;\r\n\r\n}\r\n#footer {\r\n\r\n	float:right;\r\n	text-align:center;\r\n	padding-top:10px;\r\n	height:30px;\r\n	width:53%;\r\n}\r\n\r\n#footer a {\r\n	\r\n	\r\n	color: #6c6c6c;\r\n	text-decoration:none;\r\n	padding:4px;\r\n	border:0px;\r\n\r\n}\r\n\r\n#footer a:hover {\r\n	\r\n	\r\n	font-family:verdana; \r\n	color:#fff; \r\n	text-decoration:none;\r\n	\r\n}\r\n\r\n\r\n.footerlink {\r\n	\r\n	float:left;\r\n	display:inline;\r\n	font-family:verdana, arial, sans serif;\r\n	font-size: 10px;\r\n	color: #7A7A7A;\r\n	padding-right:10px;\r\n\r\n}\r\n\r\n.footerbullet {\r\n\r\n	color:#B2FF00; \r\n	font-size:14px;\r\n	\r\n\r\n}\r\n',4,'27a8b6af53537fc7496c684c368cc0'),('asd',86,'asd','asd',1,'16bc415ea2f8fae8e792857a35275c'),('asd',87,'asd','asd',18,'797c6747cdb7abee0d089c00f79393'),('asd',88,'asd','asd',1,'dafe7b414a8925d55cdbf5fed50bc7'),('asd',89,'asd','asdasdasd',1,'b69efe48702254779ce6df0491eae5'),('Package Explorer',90,'Unknown','/**\n * Copyright (c) Elastic Path Software Inc., 2007\n */\npackage com.elasticpath.test.integration.audit;\n\nimport java.util.Collection;\nimport java.util.Currency;\nimport java.util.HashMap;\nimport java.util.Locale;\nimport java.util.Map;\n\nimport org.junit.Before;\nimport org.junit.Test;\n\nimport com.elasticpath.domain.catalog.Catalog;\nimport com.elasticpath.domain.catalog.impl.CatalogImpl;\nimport com.elasticpath.service.audit.AuditService;\nimport com.elasticpath.service.catalog.CatalogService;\nimport com.elasticpath.test.persister.TestApplicationContext;\nimport com.elasticpath.test.persister.TestDataPersisterFactory;\n\n/**\n * TODO.\n */\npublic class CatalogAuditImplTest {\n	\n	private TestApplicationContext tac;\n	\n	private CatalogService catalogService;\n	\n	/**\n	 * Get a reference to TestApplicationContext for use within the test. Setup scenarios.\n	 * \n	 * @throws Exception on error\n	 */\n	@Before\n	public void setUp() throws Exception {\n		tac = TestApplicationContext.getInstance();\n		tac.useDb(getClass().getName());\n\n		catalogService = (CatalogService) tac.getBeanFactory().getBean(\"catalogService\");\n	}\n	\n	@Test\n	public void testCreateCatalogWithAuditing() {\n		AuditService auditService = (AuditService) tac.getBeanFactory().getBean(\"auditService\");\n		\n		Map<String, String> metadata = new HashMap<String, String>();\n		metadata.put(\"changeSetGuid\", \"changeSetGuid1\");\n		metadata.put(\"userGuid\", \"userGuid1\");\n		auditService.registerMetadata(metadata);\n		\n		Catalog masterCatalog = getCatalog(\"catalogCode1\", \"catalogName1\", true, null, null, null, null);\n		\n		Catalog createdCatalog = catalogService.saveOrUpdate(masterCatalog);\n		\n		createdCatalog.setName(\"catalogName1Updated\");\n		Catalog updatedCatalog = catalogService.saveOrUpdate(createdCatalog);\n		\n		//catalogService.remove(updatedCatalog);\n	\n	}\n	\n	private Catalog getCatalog(final String code, final String name, final boolean master, \n			final String defaultCurrency, final String defaultLocale,\n			final Collection<String> currencies, final Collection<String> locales) {\n\n		final Catalog catalog = new CatalogImpl();\n		\n		catalog.setMaster(master);\n		catalog.setCode(code);\n		catalog.setName(name == null ? code : name);\n\n		// Setup supported locales\n		if (master && locales != null) {\n			for (String locale : locales) {\n				catalog.addSupportedLocale(new Locale(locale));\n			}\n		}\n\n		// Setup supported currencies\n		if (master && currencies != null) {\n			for (String currency : currencies) {\n				catalog.addSupportedCurrency(Currency.getInstance(currency));\n			}\n		}\n\n		catalog.setDefaultLocale(defaultLocale == null ? TestDataPersisterFactory.DEFAULT_LOCALE : new Locale(defaultLocale));\n		catalog.setDefaultCurrency(defaultCurrency == null ? TestDataPersisterFactory.DEFAULT_CURRENCY : Currency.getInstance(defaultCurrency));\n		return catalog;\n	}\n\n}\n',1,'4c48ede3ca8361ff53120faa7bd06a'),('JPAReflectionHelper.java',91,'Unknown','package com.elasticpath.test.integration.audit;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertNotNull;\n\nimport java.lang.reflect.Method;\nimport java.util.List;\n\nimport javax.persistence.EntityManager;\n\nimport org.apache.renamed.openjpa.enhance.Reflection;\nimport org.apache.renamed.openjpa.meta.ClassMetaData;\nimport org.apache.renamed.openjpa.meta.FieldMetaData;\nimport org.apache.renamed.openjpa.persistence.JPAFacadeHelper;\n\nimport com.elasticpath.domain.Entity;\nimport com.elasticpath.domain.Persistence;\nimport com.elasticpath.domain.audit.DataChanged;\nimport com.elasticpath.domain.catalog.Category;\n\n/**\n * JPAReflectionHelper class.\n */\npublic class JPAReflectionHelper {\n\n	/**\n	 * Check field meta data values.\n	 * @param category\n	 * @param dataChanges\n	 * @param entityManager\n	 */\n	public static void checkFieldMetaDataValues(final Category category,\n										  final List<DataChanged> dataChanges, \n										  final EntityManager entityManager) {\n		\n		ClassMetaData metaData = JPAFacadeHelper.getMetaData(entityManager, category.getClass());\n        for (FieldMetaData fieldMetaData : metaData.getFields()) {\n\n              Method method = Reflection.findGetter(category.getClass(), fieldMetaData.getName(), true);\n              String fieldName = fieldMetaData.getName();\n\n              String fieldValue = getFieldValue(Reflection.get(category, method));\n                          \n              DataChanged dataChanged = findDataChanged(fieldName, dataChanges);\n              assertNotNull(\"Field data is not correct\", dataChanged);\n              assertEquals(\"Field values do not match \", fieldValue, dataChanged.getFieldNewValue());              \n        }\n	}\n	\n	/**\n	 * Find data changed.\n	 * @param fieldName\n	 * @param dataChanges\n	 * @return element changed\n	 */\n	public static DataChanged findDataChanged(final String fieldName,\n										final List<DataChanged> dataChanges) {\n				\n		for (DataChanged dataChanged : dataChanges) {\n			if (dataChanged.getFieldName().equals(fieldName)) {\n				return dataChanged;\n			}\n		}			\n		return null;\n	}\n	\n	/**\n	 * Get field value.\n	 * @param field is the field\n	 * @return the field value \n	 */\n	public static String getFieldValue(final Object field) {\n		if (field == null) {\n			return null;\n		}\n		if (field instanceof Entity) {\n			return ((Entity) field).getGuid();\n		}\n		if (field instanceof Persistence) {\n			return String.valueOf(((Persistence) field).getUidPk());\n		}\n		return field.toString();\n	}\n}\n',1,'bcf2741ade0fc59d9e5aa9d4f79f51'),('JPAReflectionHelper.java',92,'Unknown','package com.elasticpath.test.integration.audit;\n\nimport static org.junit.Assert.assertEquals;\nimport static org.junit.Assert.assertNotNull;\n\nimport java.lang.reflect.Method;\nimport java.util.List;\n\nimport javax.persistence.EntityManager;\n\nimport org.apache.renamed.openjpa.enhance.Reflection;\nimport org.apache.renamed.openjpa.meta.ClassMetaData;\nimport org.apache.renamed.openjpa.meta.FieldMetaData;\nimport org.apache.renamed.openjpa.persistence.JPAFacadeHelper;\n\nimport com.elasticpath.domain.Entity;\nimport com.elasticpath.domain.Persistence;\nimport com.elasticpath.domain.audit.DataChanged;\n\n/**\n * JPAReflectionHelper class.\n */\npublic class JPAReflectionHelper {\n\n	/**\n	 * Check field meta data values.\n	 * @param category\n	 * @param dataChanges\n	 * @param entityManager\n	 */\n	public static void checkFieldMetaDataValues(final Object object,\n										  final List<DataChanged> dataChanges, \n										  final EntityManager entityManager) {\n		\n		ClassMetaData metaData = JPAFacadeHelper.getMetaData(entityManager, object.getClass());\n        for (FieldMetaData fieldMetaData : metaData.getFields()) {\n\n        	  boolean internalField = isInternalField(fieldMetaData);\n        	\n        	  if (!internalField) {\n	              Method method = Reflection.findGetter(object.getClass(), fieldMetaData.getName(), true);\n	              String fieldName = fieldMetaData.getName();\n	\n	              String fieldValue = getFieldValue(Reflection.get(object, method));\n	                          \n	              DataChanged dataChanged = findDataChanged(fieldName, dataChanges);\n	              assertNotNull(\"Field data is not correct\", dataChanged);\n	              assertEquals(\"Field values do not match \", fieldValue, dataChanged.getFieldNewValue());              \n        	  }\n        }\n	}\n	\n	/**\n	 * Is internal field.\n	 * @param fieldMetaData\n	 * @return whether this is an internal field or not\n	 */\n	private static boolean isInternalField(final FieldMetaData fieldMetaData) {\n				\n		if (fieldMetaData.isPrimaryKey()\n			|| fieldMetaData.isVersion()\n			|| fieldMetaData.isTransient()\n			|| !fieldMetaData.isEmbedded()) {\n			\n			//LOG.info(\"Field \" + fieldMetaData.getName() + \" is an internal JPA field, ignoring\");\n			return true;\n		}\n		\n		return false;\n	}\n	\n	/**\n	 * Find data changed.\n	 * @param fieldName\n	 * @param dataChanges\n	 * @return element changed\n	 */\n	public static DataChanged findDataChanged(final String fieldName,\n										final List<DataChanged> dataChanges) {\n				\n		for (DataChanged dataChanged : dataChanges) {\n			if (dataChanged.getFieldName().equals(fieldName)) {\n				return dataChanged;\n			}\n		}			\n		return null;\n	}\n	\n	/**\n	 * Get field value.\n	 * @param field is the field\n	 * @return the field value \n	 */\n	public static String getFieldValue(final Object field) {\n		if (field == null) {\n			return null;\n		}\n		if (field instanceof Entity) {\n			return ((Entity) field).getGuid();\n		}\n		if (field instanceof Persistence) {\n			return String.valueOf(((Persistence) field).getUidPk());\n		}\n		return field.toString();\n	}\n}\n',1,'79cd83c29e3bececd460671a4d73ba'),('Pair.java',93,'Jon','public class Pair<A, B> {\r\n\r\n    private final A first;\r\n    private final B second;\r\n\r\n    public Pair(A first, B second) {\r\n        this.first = first;\r\n        this.second = second;\r\n    }\r\n\r\n    public A getFirst() {\r\n        return first;\r\n    }\r\n\r\n    public B getSecond() {\r\n        return second;\r\n    }\r\n}',1,'5003504425055b47d857490ff73ab9'),('BeanToMap',94,'Jon','package com.example.jodabeans;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\nimport org.joda.property.Bean;\r\nimport org.joda.property.JodaFactory;\r\nimport org.joda.property.type.BooleanProperty;\r\nimport org.joda.property.type.StringProperty;\r\n\r\npublic class BeanToMap {\r\n\r\n	@SuppressWarnings(\"unchecked\")\r\n	public static void main(String [] args) {\r\n\r\n		SimpleBean bob = (SimpleBean) JodaFactory.create(SimpleBean.class);\r\n		bob.setName(\"Bob\");\r\n		bob.setMagic(true);\r\n		bob.setColor(\"Blue\");\r\n		\r\n		Map<String, String> propertyMap = bob.getPropertyMap();\r\n		System.out.println(\"Map\" + propertyMap.toString());			\r\n	}\r\n	\r\n	private interface SimpleBean extends Bean {\r\n		\r\n		StringProperty name();\r\n		StringProperty color();\r\n		BooleanProperty magic();\r\n		\r\n		String getName();\r\n		void setName(String name);\r\n		\r\n		String getColor();\r\n		void setColor(String color);\r\n		\r\n		boolean isMagic();\r\n		void setMagic(Boolean magic);				\r\n	}		\r\n}\r\n\r\n',1,'0e78eb6c76d071b4e22bbcac748c57'),('php transport errror',95,'christopher holloway','<?php\r\n\r\n  class email {\r\n    var $html;\r\n    var $text;\r\n    var $output;\r\n    var $html_text;\r\n    var $html_images;\r\n    var $image_types;\r\n    var $build_params;\r\n    var $attachments;\r\n    var $headers;\r\n\r\n    function email($headers = \'\') {\r\n      if ($headers == \'\') $headers = array();\r\n\r\n      $this->html_images = array();\r\n      $this->headers = array();\r\n\r\n      if (EMAIL_LINEFEED == \'CRLF\') {\r\n        $this->lf = \"\\r\\n\";\r\n      } else {\r\n        $this->lf = \"\\n\";\r\n      }\r\n\r\n/**\r\n * If you want the auto load functionality\r\n * to find other mime-image/file types, add the\r\n * extension and content type here.\r\n */\r\n\r\n      $this->image_types = array(\'gif\' => \'image/gif\',\r\n                                 \'jpg\' => \'image/jpeg\',\r\n                                 \'jpeg\' => \'image/jpeg\',\r\n                                 \'jpe\' => \'image/jpeg\',\r\n                                 \'bmp\' => \'image/bmp\',\r\n                                 \'png\' => \'image/png\',\r\n                                 \'tif\' => \'image/tiff\',\r\n                                 \'tiff\' => \'image/tiff\',\r\n                                 \'swf\' => \'application/x-shockwave-flash\');\r\n\r\n      $this->build_params[\'html_encoding\'] = \'quoted-printable\';\r\n      $this->build_params[\'text_encoding\'] = \'7bit\';\r\n      $this->build_params[\'html_charset\'] = constant(\'CHARSET\');\r\n      $this->build_params[\'text_charset\'] = constant(\'CHARSET\');\r\n      $this->build_params[\'text_wrap\'] = 998;\r\n\r\n/**\r\n * Make sure the MIME version header is first.\r\n */\r\n\r\n      $this->headers[] = \'MIME-Version: 1.0\';\r\n\r\n      reset($headers);\r\n      while (list(,$value) = each($headers)) {\r\n        if (tep_not_null($value)) {\r\n          $this->headers[] = $value;\r\n        }\r\n      }\r\n    }\r\n\r\n/**\r\n * This function will read a file in\r\n * from a supplied filename and return\r\n * it. This can then be given as the first\r\n * argument of the the functions\r\n * add_html_image() or add_attachment().\r\n */\r\n\r\n    function get_file($filename) {\r\n      $return = \'\';\r\n\r\n      if ($fp = fopen($filename, \'rb\')) {\r\n        while (!feof($fp)) {\r\n          $return .= fread($fp, 1024);\r\n        }\r\n        fclose($fp);\r\n\r\n        return $return;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n/**\r\n * Function for extracting images from\r\n * html source. This function will look\r\n * through the html code supplied by add_html()\r\n * and find any file that ends in one of the\r\n * extensions defined in $obj->image_types.\r\n * If the file exists it will read it in and\r\n * embed it, (not an attachment).\r\n *\r\n * Function contributed by Dan Allen\r\n */\r\n\r\n    function find_html_images($images_dir) {\r\n// Build the list of image extensions\r\n      while (list($key, ) = each($this->image_types)) {\r\n        $extensions[] = $key;\r\n      }\r\n\r\n      preg_match_all(\'/\"([^\"]+\\.(\' . implode(\'|\', $extensions).\'))\"/Ui\', $this->html, $images);\r\n\r\n      for ($i=0; $i<count($images[1]); $i++) {\r\n        if (file_exists($images_dir . $images[1][$i])) {\r\n          $html_images[] = $images[1][$i];\r\n          $this->html = str_replace($images[1][$i], basename($images[1][$i]), $this->html);\r\n        }\r\n      }\r\n\r\n      if (tep_not_null($html_images)) {\r\n// If duplicate images are embedded, they may show up as attachments, so remove them.\r\n        $html_images = array_unique($html_images);\r\n        sort($html_images);\r\n\r\n        for ($i=0; $i<count($html_images); $i++) {\r\n          if ($image = $this->get_file($images_dir . $html_images[$i])) {\r\n            $content_type = $this->image_types[substr($html_images[$i], strrpos($html_images[$i], \'.\') + 1)];\r\n            $this->add_html_image($image, basename($html_images[$i]), $content_type);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n/**\r\n * Adds plain text. Use this function\r\n * when NOT sending html email\r\n */\r\n\r\n    function add_text($text = \'\') {\r\n      $this->text = tep_convert_linefeeds(array(\"\\r\\n\", \"\\n\", \"\\r\"), $this->lf, $text);\r\n    }\r\n\r\n/**\r\n * Adds a html part to the mail.\r\n * Also replaces image names with\r\n * content-id\'s.\r\n */\r\n\r\n    function add_html($html, $text = NULL, $images_dir = NULL) {\r\n      $this->html = tep_convert_linefeeds(array(\"\\r\\n\", \"\\n\", \"\\r\"), \'<br>\', $html);\r\n      $this->html_text = tep_convert_linefeeds(array(\"\\r\\n\", \"\\n\", \"\\r\"), $this->lf, $text);\r\n\r\n      if (isset($images_dir)) $this->find_html_images($images_dir);\r\n    }\r\n\r\n/**\r\n * Adds an image to the list of embedded\r\n * images.\r\n */\r\n\r\n    function add_html_image($file, $name = \'\', $c_type=\'application/octet-stream\') {\r\n      $this->html_images[] = array(\'body\' => $file,\r\n                                   \'name\' => $name,\r\n                                   \'c_type\' => $c_type,\r\n                                   \'cid\' => md5(uniqid(time())));\r\n    }\r\n\r\n/**\r\n * Adds a file to the list of attachments.\r\n */\r\n\r\n    function add_attachment($file, $name = \'\', $c_type=\'application/octet-stream\', $encoding = \'base64\') {\r\n      $this->attachments[] = array(\'body\' => $file,\r\n                                   \'name\' => $name,\r\n                                   \'c_type\' => $c_type,\r\n                                   \'encoding\' => $encoding);\r\n    }\r\n\r\n/**\r\n * Adds a text subpart to a mime_part object\r\n */\r\n\r\n/* HPDL PHP3 */\r\n//    function &add_text_part(&$obj, $text) {\r\n    function add_text_part(&$obj, $text) {\r\n      $params[\'content_type\'] = \'text/plain\';\r\n      $params[\'encoding\'] = $this->build_params[\'text_encoding\'];\r\n      $params[\'charset\'] = $this->build_params[\'text_charset\'];\r\n\r\n      if (is_object($obj)) {\r\n        return $obj->addSubpart($text, $params);\r\n      } else {\r\n        return new mime($text, $params);\r\n      }\r\n    }\r\n\r\n/**\r\n * Adds a html subpart to a mime_part object\r\n */\r\n\r\n/* HPDL PHP3 */\r\n//    function &add_html_part(&$obj) {\r\n    function add_html_part(&$obj) {\r\n      $params[\'content_type\'] = \'text/html\';\r\n      $params[\'encoding\'] = $this->build_params[\'html_encoding\'];\r\n      $params[\'charset\'] = $this->build_params[\'html_charset\'];\r\n\r\n      if (is_object($obj)) {\r\n        return $obj->addSubpart($this->html, $params);\r\n      } else {\r\n        return new mime($this->html, $params);\r\n      }\r\n    }\r\n\r\n/**\r\n * Starts a message with a mixed part\r\n */\r\n\r\n/* HPDL PHP3 */\r\n//    function &add_mixed_part() {\r\n    function add_mixed_part() {\r\n      $params[\'content_type\'] = \'multipart/mixed\';\r\n\r\n      return new mime(\'\', $params);\r\n    }\r\n\r\n/**\r\n * Adds an alternative part to a mime_part object\r\n */\r\n\r\n/* HPDL PHP3 */\r\n//    function &add_alternative_part(&$obj) {\r\n    function add_alternative_part(&$obj) {\r\n      $params[\'content_type\'] = \'multipart/alternative\';\r\n\r\n      if (is_object($obj)) {\r\n        return $obj->addSubpart(\'\', $params);\r\n      } else {\r\n        return new mime(\'\', $params);\r\n      }\r\n    }\r\n\r\n/**\r\n * Adds a html subpart to a mime_part object\r\n */\r\n\r\n/* HPDL PHP3 */\r\n//    function &add_related_part(&$obj) {\r\n    function add_related_part(&$obj) {\r\n      $params[\'content_type\'] = \'multipart/related\';\r\n\r\n      if (is_object($obj)) {\r\n        return $obj->addSubpart(\'\', $params);\r\n      } else {\r\n        return new mime(\'\', $params);\r\n      }\r\n    }\r\n\r\n/**\r\n * Adds an html image subpart to a mime_part object\r\n */\r\n\r\n/* HPDL PHP3 */\r\n//    function &add_html_image_part(&$obj, $value) {\r\n    function add_html_image_part(&$obj, $value) {\r\n      $params[\'content_type\'] = $value[\'c_type\'];\r\n      $params[\'encoding\'] = \'base64\';\r\n      $params[\'disposition\'] = \'inline\';\r\n      $params[\'dfilename\'] = $value[\'name\'];\r\n      $params[\'cid\'] = $value[\'cid\'];\r\n\r\n      $obj->addSubpart($value[\'body\'], $params);\r\n    }\r\n\r\n/**\r\n * Adds an attachment subpart to a mime_part object\r\n */\r\n\r\n/* HPDL PHP3 */\r\n//    function &add_attachment_part(&$obj, $value) {\r\n    function add_attachment_part(&$obj, $value) {\r\n      $params[\'content_type\'] = $value[\'c_type\'];\r\n      $params[\'encoding\'] = $value[\'encoding\'];\r\n      $params[\'disposition\'] = \'attachment\';\r\n      $params[\'dfilename\'] = $value[\'name\'];\r\n\r\n      $obj->addSubpart($value[\'body\'], $params);\r\n    }\r\n\r\n/**\r\n * Builds the multipart message from the\r\n * list ($this->_parts). $params is an\r\n * array of parameters that shape the building\r\n * of the message. Currently supported are:\r\n *\r\n * $params[\'html_encoding\'] - The type of encoding to use on html. Valid options are\r\n *                            \"7bit\", \"quoted-printable\" or \"base64\" (all without quotes).\r\n *                            7bit is EXPRESSLY NOT RECOMMENDED. Default is quoted-printable\r\n * $params[\'text_encoding\'] - The type of encoding to use on plain text Valid options are\r\n *                            \"7bit\", \"quoted-printable\" or \"base64\" (all without quotes).\r\n *                            Default is 7bit\r\n * $params[\'text_wrap\']     - The character count at which to wrap 7bit encoded data.\r\n *                            Default this is 998.\r\n * $params[\'html_charset\']  - The character set to use for a html section.\r\n *                            Default is iso-8859-1\r\n * $params[\'text_charset\']  - The character set to use for a text section.\r\n *                          - Default is iso-8859-1\r\n */\r\n\r\n/* HPDL PHP3 */\r\n//    function build_message($params = array()) {\r\n    function build_message($params = \'\') {\r\n      if ($params == \'\') $params = array();\r\n\r\n      if (count($params) > 0) {\r\n        reset($params);\r\n        while(list($key, $value) = each($params)) {\r\n          $this->build_params[$key] = $value;\r\n        }\r\n      }\r\n\r\n      if (tep_not_null($this->html_images)) {\r\n        reset($this->html_images);\r\n        while (list(,$value) = each($this->html_images)) {\r\n          $this->html = str_replace($value[\'name\'], \'cid:\' . $value[\'cid\'], $this->html);\r\n        }\r\n      }\r\n\r\n      $null = NULL;\r\n      $attachments = ((tep_not_null($this->attachments)) ? true : false);\r\n      $html_images = ((tep_not_null($this->html_images)) ? true : false);\r\n      $html = ((tep_not_null($this->html)) ? true : false);\r\n      $text = ((tep_not_null($this->text)) ? true : false);\r\n\r\n      switch (true) {\r\n        case (($text == true) && ($attachments == false)):\r\n/* HPDL PHP3 */\r\n//          $message =& $this->add_text_part($null, $this->text);\r\n          $message = $this->add_text_part($null, $this->text);\r\n          break;\r\n        case (($text == false) && ($attachments == true) && ($html == false)):\r\n/* HPDL PHP3 */\r\n//          $message =& $this->add_mixed_part();\r\n          $message = $this->add_mixed_part();\r\n\r\n          for ($i=0; $i<count($this->attachments); $i++) {\r\n            $this->add_attachment_part($message, $this->attachments[$i]);\r\n          }\r\n          break;\r\n        case (($text == true) && ($attachments == true)):\r\n/* HPDL PHP3 */\r\n//          $message =& $this->add_mixed_part();\r\n          $message = $this->add_mixed_part();\r\n          $this->add_text_part($message, $this->text);\r\n\r\n          for ($i=0; $i<count($this->attachments); $i++) {\r\n            $this->add_attachment_part($message, $this->attachments[$i]);\r\n          }\r\n          break;\r\n        case (($html == true) && ($attachments == false) && ($html_images == false)):\r\n          if (tep_not_null($this->html_text)) {\r\n/* HPDL PHP3 */\r\n//            $message =& $this->add_alternative_part($null);\r\n            $message = $this->add_alternative_part($null);\r\n            $this->add_text_part($message, $this->html_text);\r\n            $this->add_html_part($message);\r\n          } else {\r\n/* HPDL PHP3 */\r\n//            $message =& $this->add_html_part($null);\r\n            $message = $this->add_html_part($null);\r\n          }\r\n          break;\r\n        case (($html == true) && ($attachments == false) && ($html_images == true)):\r\n          if (tep_not_null($this->html_text)) {\r\n/* HPDL PHP3 */\r\n//            $message =& $this->add_alternative_part($null);\r\n            $message = $this->add_alternative_part($null);\r\n            $this->add_text_part($message, $this->html_text);\r\n/* HPDL PHP3 */\r\n//            $related =& $this->add_related_part($message);\r\n            $related = $this->add_related_part($message);\r\n          } else {\r\n/* HPDL PHP3 */\r\n//            $message =& $this->add_related_part($null);\r\n//            $related =& $message;\r\n            $message = $this->add_related_part($null);\r\n            $related = $message;\r\n          }\r\n          $this->add_html_part($related);\r\n\r\n          for ($i=0; $i<count($this->html_images); $i++) {\r\n            $this->add_html_image_part($related, $this->html_images[$i]);\r\n          }\r\n          break;\r\n        case (($html == true) && ($attachments == true) && ($html_images == false)):\r\n/* HPDL PHP3 */\r\n//          $message =& $this->add_mixed_part();\r\n          $message = $this->add_mixed_part();\r\n          if (tep_not_null($this->html_text)) {\r\n/* HPDL PHP3 */\r\n//            $alt =& $this->add_alternative_part($message);\r\n            $alt = $this->add_alternative_part($message);\r\n            $this->add_text_part($alt, $this->html_text);\r\n            $this->add_html_part($alt);\r\n          } else {\r\n            $this->add_html_part($message);\r\n          }\r\n\r\n          for ($i=0; $i<count($this->attachments); $i++) {\r\n            $this->add_attachment_part($message, $this->attachments[$i]);\r\n          }\r\n          break;\r\n        case (($html == true) && ($attachments == true) && ($html_images == true)):\r\n/* HPDL PHP3 */\r\n//          $message =& $this->add_mixed_part();\r\n          $message = $this->add_mixed_part();\r\n\r\n          if (tep_not_null($this->html_text)) {\r\n/* HPDL PHP3 */\r\n//            $alt =& $this->add_alternative_part($message);\r\n            $alt = $this->add_alternative_part($message);\r\n            $this->add_text_part($alt, $this->html_text);\r\n/* HPDL PHP3 */\r\n//            $rel =& $this->add_related_part($alt);\r\n            $rel = $this->add_related_part($alt);\r\n          } else {\r\n/* HPDL PHP3 */\r\n//            $rel =& $this->add_related_part($message);\r\n            $rel = $this->add_related_part($message);\r\n          }\r\n          $this->add_html_part($rel);\r\n\r\n          for ($i=0; $i<count($this->html_images); $i++) {\r\n            $this->add_html_image_part($rel, $this->html_images[$i]);\r\n          }\r\n\r\n          for ($i=0; $i<count($this->attachments); $i++) {\r\n            $this->add_attachment_part($message, $this->attachments[$i]);\r\n          }\r\n          break;\r\n      }\r\n\r\n      if ( (isset($message)) && (is_object($message)) ) {\r\n        $output = $message->encode();\r\n        $this->output = $output[\'body\'];\r\n\r\n        reset($output[\'headers\']);\r\n        while (list($key, $value) = each($output[\'headers\'])) {\r\n          $headers[] = $key . \': \' . $value;\r\n        }\r\n\r\n        $this->headers = array_merge($this->headers, $headers);\r\n\r\n        return true;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n\r\n/**\r\n * Sends the mail.\r\n */\r\n\r\n    function send($to_name, $to_addr, $from_name, $from_addr, $subject = \'\', $headers = \'\') {\r\n      if ((strstr($to_name, \"\\n\") != false) || (strstr($to_name, \"\\r\") != false)) {\r\n        return false;\r\n      }\r\n\r\n      if ((strstr($to_addr, \"\\n\") != false) || (strstr($to_addr, \"\\r\") != false)) {\r\n        return false;\r\n      }\r\n\r\n      if ((strstr($subject, \"\\n\") != false) || (strstr($subject, \"\\r\") != false)) {\r\n        return false;\r\n      }\r\n\r\n      if ((strstr($from_name, \"\\n\") != false) || (strstr($from_name, \"\\r\") != false)) {\r\n        return false;\r\n      }\r\n\r\n      if ((strstr($from_addr, \"\\n\") != false) || (strstr($from_addr, \"\\r\") != false)) {\r\n        return false;\r\n      }\r\n\r\n      $to = (($to_name != \'\') ? \'\"\' . $to_name . \'\" <\' . $to_addr . \'>\' : $to_addr);\r\n      $from = (($from_name != \'\') ? \'\"\' . $from_name . \'\" <\' . $from_addr . \'>\' : $from_addr);\r\n\r\n      if (is_string($headers)) {\r\n        $headers = explode($this->lf, trim($headers));\r\n      }\r\n\r\n      for ($i=0; $i<count($headers); $i++) {\r\n        if (is_array($headers[$i])) {\r\n          for ($j=0; $j<count($headers[$i]); $j++) {\r\n            if ($headers[$i][$j] != \'\') {\r\n              $xtra_headers[] = $headers[$i][$j];\r\n            }\r\n          }\r\n        }\r\n\r\n        if ($headers[$i] != \'\') {\r\n          $xtra_headers[] = $headers[$i];\r\n        }\r\n      }\r\n\r\n      if (!isset($xtra_headers)) {\r\n        $xtra_headers = array();\r\n      }\r\n\r\n      if (EMAIL_TRANSPORT == \'smtp\') {\r\n      $this->output = ereg_replace(\"rn\", \"n\", $this->output);\r\n      $this->output = ereg_replace(\"n\", $this->lf, $this->output); \r\n      $subject = ereg_replace(\"rn\", \"n\", $subject);\r\n      $subject = ereg_replace(\"n\", $this->lf, $subject); \r\n      return mail($to_addr, $subject, $this->output, \'From: \' . $from . $this->lf . \'To: \' . $to . $this->lf . implode($this->lf, $this->headers) . $this->lf . implode($this->lf, $xtra_headers));\r\n      } else {\r\n      return mail($to, $subject, $this->output, \'From: \'.$from.$this->lf.implode($this->lf, $this->headers).$this->lf.implode($this->lf, $xtra_headers));\r\n      }\r\n    }\r\n\r\n/**\r\n * Use this method to return the email\r\n * in message/rfc822 format. Useful for\r\n * adding an email to another email as\r\n * an attachment. there\'s a commented\r\n * out example in example.php.\r\n *\r\n * string get_rfc822(string To name,\r\n *       string To email,\r\n *       string From name,\r\n *       string From email,\r\n *       [string Subject,\r\n *        string Extra headers])\r\n */\r\n\r\n    function get_rfc822($to_name, $to_addr, $from_name, $from_addr, $subject = \'\', $headers = \'\') {\r\n// Make up the date header as according to RFC822\r\n      $date = \'Date: \' . date(\'D, d M y H:i:s\');\r\n      $to = (($to_name != \'\') ? \'To: \"\' . $to_name . \'\" <\' . $to_addr . \'>\' : \'To: \' . $to_addr);\r\n      $from = (($from_name != \'\') ? \'From: \"\' . $from_name . \'\" <\' . $from_addr . \'>\' : \'From: \' . $from_addr);\r\n\r\n      if (is_string($subject)) {\r\n        $subject = \'Subject: \' . $subject;\r\n      }\r\n\r\n      if (is_string($headers)) {\r\n        $headers = explode($this->lf, trim($headers));\r\n      }\r\n\r\n      for ($i=0; $i<count($headers); $i++) {\r\n        if (is_array($headers[$i])) {\r\n          for ($j=0; $j<count($headers[$i]); $j++) {\r\n            if ($headers[$i][$j] != \'\') {\r\n              $xtra_headers[] = $headers[$i][$j];\r\n            }\r\n          }\r\n        }\r\n\r\n        if ($headers[$i] != \'\') {\r\n          $xtra_headers[] = $headers[$i];\r\n        }\r\n      }\r\n\r\n      if (!isset($xtra_headers)) {\r\n        $xtra_headers = array();\r\n      }\r\n\r\n      $headers = array_merge($this->headers, $xtra_headers);\r\n\r\n      return $date . $this->lf . $from . $this->lf . $to . $this->lf . $subject . $this->lf . implode($this->lf, $headers) . $this->lf . $this->lf . $this->output;\r\n    }\r\n  }\r\n?>\r\n',2,'992aba8576f765ddf8e211f83fe7e0'),('KeyboardPollingInput',96,'Jon','import java.awt.event.KeyEvent;\r\n\r\nimport java.awt.event.KeyListener;\r\n\r\n\r\n\r\npublic class KeyboardPollingInput implements KeyListener {\r\n\r\n	\r\n\r\n  private static final int KEY_COUNT = 256;\r\n\r\n	\r\n\r\n  private enum KeyState {\r\n\r\n    RELEASED, // Not down\r\n\r\n    PRESSED,  // Down, but not the first time\r\n\r\n    ONCE      // Down for the first time\r\n\r\n  }\r\n\r\n	\r\n\r\n  // Current state of the keyboard\r\n\r\n  private boolean[] currentKeys = null;\r\n\r\n	\r\n\r\n  // Polled keyboard state\r\n\r\n  private KeyState[] keys = null;\r\n\r\n	\r\n\r\n  public KeyboardPollingInput() {\r\n\r\n    currentKeys = new boolean[ KEY_COUNT ];\r\n\r\n    keys = new KeyState[ KEY_COUNT ];\r\n\r\n    for( int i = 0; i < KEY_COUNT; ++i ) {\r\n\r\n      keys[ i ] = KeyState.RELEASED;\r\n\r\n    }\r\n\r\n  }\r\n\r\n	\r\n\r\n  public synchronized void poll() {\r\n\r\n    for( int i = 0; i < KEY_COUNT; ++i ) {\r\n\r\n      // Set the key state \r\n\r\n      if( currentKeys[ i ] ) {\r\n\r\n        // If the key is down now, but was not\r\n\r\n        // down last frame, set it to ONCE,\r\n\r\n        // otherwise, set it to PRESSED\r\n\r\n        if( keys[ i ] == KeyState.RELEASED )\r\n\r\n          keys[ i ] = KeyState.ONCE;\r\n\r\n        else\r\n\r\n          keys[ i ] = KeyState.PRESSED;\r\n\r\n      } else {\r\n\r\n        keys[ i ] = KeyState.RELEASED;\r\n\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n	\r\n\r\n  public boolean keyDown( int keyCode ) {\r\n\r\n    return keys[ keyCode ] == KeyState.ONCE ||\r\n\r\n           keys[ keyCode ] == KeyState.PRESSED;\r\n\r\n  }\r\n\r\n	\r\n\r\n  public boolean keyDownOnce( int keyCode ) {\r\n\r\n    return keys[ keyCode ] == KeyState.ONCE;\r\n\r\n  }\r\n\r\n	\r\n\r\n  public synchronized void keyPressed( KeyEvent e ) {\r\n\r\n    int keyCode = e.getKeyCode();\r\n\r\n    if( keyCode >= 0 && keyCode < KEY_COUNT ) {\r\n\r\n      currentKeys[ keyCode ] = true;\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  public synchronized void keyReleased( KeyEvent e ) {\r\n\r\n    int keyCode = e.getKeyCode();\r\n\r\n    if( keyCode >= 0 && keyCode < KEY_COUNT ) {\r\n\r\n      currentKeys[ keyCode ] = false;\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  public void keyTyped( KeyEvent e ) {\r\n\r\n    // Not needed\r\n\r\n  }\r\n\r\n}\r\n\r\n',1,'86f38d3f64f6064a591c1037021580'),('Styled Text',97,'Jon','\r\n/*\r\nCore SWING Advanced Programming \r\nBy Kim Topley\r\nISBN: 0 13 083292 8       \r\nPublisher: Prentice Hall  \r\n*/\r\n\r\n\r\nimport javax.swing.*;\r\nimport javax.swing.text.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\n\r\npublic class StylesExample3 {\r\n  public static void main(String[] args) {\r\n    try {\r\n        UIManager.setLookAndFeel(\"com.sun.java.swing.plaf.windows.WindowsLookAndFeel\");\r\n    } catch (Exception evt) {}\r\n  \r\n    JFrame f = new JFrame(\"Styles Example 3\");\r\n    \r\n    // Create the StyleContext, the document and the pane\r\n    StyleContext sc = new StyleContext();\r\n    final DefaultStyledDocument doc = new DefaultStyledDocument(sc);\r\n    JTextPane pane = new JTextPane(doc);\r\n    \r\n    // Create and add the main document style\r\n    Style defaultStyle = sc.getStyle(StyleContext.DEFAULT_STYLE);\r\n    final Style mainStyle = sc.addStyle(\"MainStyle\", defaultStyle);\r\n    StyleConstants.setLeftIndent(mainStyle, 16);\r\n    StyleConstants.setRightIndent(mainStyle, 16);\r\n    StyleConstants.setFirstLineIndent(mainStyle, 16);\r\n    StyleConstants.setFontFamily(mainStyle, \"serif\");\r\n    StyleConstants.setFontSize(mainStyle, 12);\r\n    \r\n    final Style boldStyle = sc.addStyle(\"MainStyle\", defaultStyle);\r\n    StyleConstants.setBold(boldStyle, true);\r\n\r\n    try {\r\n      SwingUtilities.invokeAndWait(new Runnable() {\r\n        public void run() {\r\n          try {\r\n            // Set the logical style\r\n            doc.setLogicalStyle(0, mainStyle);\r\n\r\n            // Add the text to the document\r\n            doc.insertString(0, text, null);          \r\n          } catch (BadLocationException e) {\r\n          }\r\n          doc.dump(System.out);\r\n        }\r\n      });\r\n    } catch (Exception e) {\r\n      System.out.println(\"Exception when constructing document: \" + e);\r\n      System.exit(1);\r\n    }   \r\n    \r\n    JButton button = new JButton(\"apply\");\r\n    button.addActionListener(new ActionListener() {\r\n\r\n		@Override\r\n		public void actionPerformed(ActionEvent e) {\r\n			\r\n			doc.setLogicalStyle(0, boldStyle);\r\n		}\r\n    	\r\n    });\r\n    \r\n    JScrollPane scrollPane = new JScrollPane(pane);\r\n    \r\n    JPanel panel = new JPanel();\r\n    panel.add(button, BorderLayout.NORTH);\r\n    panel.add(scrollPane, BorderLayout.CENTER);\r\n              \r\n    f.getContentPane().add(scrollPane, BorderLayout.CENTER);\r\n    f.getContentPane().add(button, BorderLayout.SOUTH);\r\n    f.setSize(400, 300);\r\n    f.setVisible(true);\r\n  }\r\n\r\n  public static final String text = \r\n          \"Attributes, Styles and Style Contexts\\n\" +\r\n          \"The simple PlainDocument class that you saw in the previous \" + \r\n          \"chapter is only capable of holding text. The more complex text \" +\r\n          \"components use a more sophisticated model that implements the \" +\r\n          \"StyledDocument interface. StyledDocument is a sub-interface of \" +\r\n          \"Document that contains methods for manipulating attributes that \" +\r\n          \"control the way in which the text in the document is displayed. \" + \"\\n\\r\" + \r\n          \"The Swing text package contains a concrete implementation of \" +\r\n          \"StyledDocument called DefaultStyledDocument that is used as the \" +\r\n          \"default model for JTextPane and is also the base class from which \" +\r\n          \"more specific models, such as the HTMLDocument class that handles \" +\r\n          \"input in HTML format, can be created. In order to make use of \" +\r\n          \"DefaultStyledDocument and JTextPane, you need to understand how \" +\r\n          \"Swing represents and uses attributes.\\n\";\r\n}',1,'13458efaf4d17cbb35fb15e49af354'),('Change Document Style',98,'Jon','\r\n/*\r\nCore SWING Advanced Programming \r\nBy Kim Topley\r\nISBN: 0 13 083292 8       \r\nPublisher: Prentice Hall  \r\n*/\r\n\r\n\r\nimport javax.swing.*;\r\nimport javax.swing.text.*;\r\nimport java.awt.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\n\r\npublic class StylesExample3 {\r\n  public static void main(String[] args) {\r\n    try {\r\n        UIManager.setLookAndFeel(\"com.sun.java.swing.plaf.windows.WindowsLookAndFeel\");\r\n    } catch (Exception evt) {}\r\n  \r\n    JFrame f = new JFrame(\"Styles Example 3\");\r\n    \r\n    // Create the StyleContext, the document and the pane\r\n    StyleContext sc = new StyleContext();\r\n    final DefaultStyledDocument doc = new DefaultStyledDocument(sc);\r\n    JTextPane pane = new JTextPane(doc);\r\n    \r\n    // Create and add the main document style\r\n    Style defaultStyle = sc.getStyle(StyleContext.DEFAULT_STYLE);\r\n    final Style mainStyle = sc.addStyle(\"MainStyle\", defaultStyle);\r\n    StyleConstants.setLeftIndent(mainStyle, 16);\r\n    StyleConstants.setRightIndent(mainStyle, 16);\r\n    StyleConstants.setFirstLineIndent(mainStyle, 16);\r\n    StyleConstants.setFontFamily(mainStyle, \"serif\");\r\n    StyleConstants.setFontSize(mainStyle, 12);\r\n    \r\n    final Style boldStyle = sc.addStyle(\"MainStyle\", defaultStyle);\r\n    StyleConstants.setBold(boldStyle, true);\r\n\r\n    try {\r\n      SwingUtilities.invokeAndWait(new Runnable() {\r\n        public void run() {\r\n          try {\r\n            // Set the logical style\r\n            doc.setLogicalStyle(0, mainStyle);\r\n\r\n            // Add the text to the document\r\n            doc.insertString(0, text, null);          \r\n          } catch (BadLocationException e) {\r\n          }\r\n          doc.dump(System.out);\r\n        }\r\n      });\r\n    } catch (Exception e) {\r\n      System.out.println(\"Exception when constructing document: \" + e);\r\n      System.exit(1);\r\n    }   \r\n    \r\n    JButton button = new JButton(\"apply\");\r\n    button.addActionListener(new ActionListener() {\r\n\r\n		@Override\r\n		public void actionPerformed(ActionEvent e) {\r\n			\r\n			doc.setCharacterAttributes(0, 10, boldStyle, true);\r\n		}\r\n    	\r\n    });\r\n    \r\n    JScrollPane scrollPane = new JScrollPane(pane);\r\n    \r\n    JPanel panel = new JPanel();\r\n    panel.add(button, BorderLayout.NORTH);\r\n    panel.add(scrollPane, BorderLayout.CENTER);\r\n              \r\n    f.getContentPane().add(scrollPane, BorderLayout.CENTER);\r\n    f.getContentPane().add(button, BorderLayout.SOUTH);\r\n    f.setSize(400, 300);\r\n    f.setVisible(true);\r\n  }\r\n\r\n  public static final String text = \r\n          \"Attributes, Styles and Style Contexts\\n\" +\r\n          \"The simple PlainDocument class that you saw in the previous \" + \r\n          \"chapter is only capable of holding text. The more complex text \" +\r\n          \"components use a more sophisticated model that implements the \" +\r\n          \"StyledDocument interface. StyledDocument is a sub-interface of \" +\r\n          \"Document that contains methods for manipulating attributes that \" +\r\n          \"control the way in which the text in the document is displayed. \" + \"\\n\\r\" + \r\n          \"The Swing text package contains a concrete implementation of \" +\r\n          \"StyledDocument called DefaultStyledDocument that is used as the \" +\r\n          \"default model for JTextPane and is also the base class from which \" +\r\n          \"more specific models, such as the HTMLDocument class that handles \" +\r\n          \"input in HTML format, can be created. In order to make use of \" +\r\n          \"DefaultStyledDocument and JTextPane, you need to understand how \" +\r\n          \"Swing represents and uses attributes.\\n\";\r\n}\r\n',1,'d6fe483a52c52aa951ca15762ed3d3'),('title',99,'Unknown','content',1,'bac7a866f53f205f3258dfbc8b797d'),('blah.txt',100,'Unknown','Blah.txt contents',1,'e69b9c167e7c2bf4438487c56fd22c'),('Blah.java',101,'Unknown','\npublic class Blah {\n\n	public static void main(String[] args) {\n		\n	}\n}\n',1,'9dec84357c6f52d8b19e2ff95f00d4'),('blah.txt',102,'Unknown','Blah.txt contents',6,'d64fab16fdf24d7dfa90c5de2e43fe'),('blah.txt',103,'Unknown','Blah.txt contents',6,'065559599a2f1ccd71690657cef94d'),('blah.txt',104,'Unknown','Blah.txt contents',6,'675075fd639eb558b32d0a2e00e437'),('blah.txt',105,'Unknown','Blah.txt contents',6,'0e84c80532c91982596273b1e860e9'),('Blah.java',106,'Unknown','\npublic class Blah {\n\n	public static void main(String[] args) {\n		\n	}\n}\n',1,'7488caaa89a4fd8192d13712316158'),('Blah.java',107,'Unknown','\npublic class Blah {\n\n	public static void main(String[] args) {\n		\n	}\n}\n',1,'3c1aa4fb9e56449f21175ad3e16e62'),('blah.txt',108,'Unknown','Blah.txt contents',6,'b4ba593880b772db41c8942b133dc0'),('Message 410',109,'Jon','log4j:WARN No appenders could be found for logger (message_analyzer.parser.SimplePartHandler).\r\nlog4j:WARN Please initialize the log4j system properly.\r\n<message__archiver.common.message.pojo.ParsedMessage>\r\n  <headers class=\"linked-list\">\r\n    <message__archiver.common.message.pojo.HeaderLine>\r\n      <name>X-GR-Date-Epoch</name>\r\n      <value>1206366669</value>\r\n    </message__archiver.common.message.pojo.HeaderLine>\r\n    <message__archiver.common.message.pojo.HeaderLine>\r\n      <name>Bcc</name>\r\n      <value>journalarchive@us.sc.mufg.jp, cmarshall@us.sc.mufg.jp</value>\r\n    </message__archiver.common.message.pojo.HeaderLine>\r\n    <message__archiver.common.message.pojo.HeaderLine>\r\n      <name>Received</name>\r\n      <value>from USNJ01EXF001.mususa.com ([10.97.158.25]) by USNJ01EXB001.mususa.com with Microsoft SMTPSVC(6.0.3790.3959); Mon, 24 Mar 2008 09:53:08 -0400</value>\r\n    </message__archiver.common.message.pojo.HeaderLine>\r\n    <message__archiver.common.message.pojo.HeaderLine>\r\n      <name>MIME-Version</name>\r\n      <value>1.0</value>\r\n    </message__archiver.common.message.pojo.HeaderLine>\r\n    <message__archiver.common.message.pojo.HeaderLine>\r\n      <name>Received</name>\r\n      <value>from nymr0003.btmna.com ([10.97.230.41]) by USNJ01EXF001.mususa.com with Microsoft SMTPSVC(6.0.3790.3959); Mon, 24 Mar 2008 09:53:08 -0400</value>\r\n    </message__archiver.common.message.pojo.HeaderLine>\r\n    <message__archiver.common.message.pojo.HeaderLine>\r\n      <name>Received</name>\r\n      <value>from NJHR2033.ad.btmna.com ([10.97.200.9]) by nymr0003.btmna.com (8.14.1/8.14.1) with ESMTP id m2ODsc2G020956 for &lt;cmarshall@mususa.com&gt;; Mon, 24 Mar 2008 09:54:39 -0400</value>\r\n    </message__archiver.common.message.pojo.HeaderLine>\r\n    <message__archiver.common.message.pojo.HeaderLine>\r\n      <name>X-MimeOLE</name>\r\n      <value>Produced By Microsoft Exchange V6.5</value>\r\n    </message__archiver.common.message.pojo.HeaderLine>\r\n    <message__archiver.common.message.pojo.HeaderLine>\r\n      <name>Received</name>\r\n      <value>from nymr0002.btmna.com ([10.97.230.10])          by NJHR2033.ad.btmna.com (Lotus Domino Release 6.5.5FP2)          with ESMTP id 2008032409543825-293100 ;          Mon, 24 Mar 2008 09:54:38 -0400 </value>\r\n    </message__archiver.common.message.pojo.HeaderLine>\r\n    <message__archiver.common.message.pojo.HeaderLine>\r\n      <name>Received</name>\r\n      <value>from btmna.com ([10.97.230.9]) by nymr0002.btmna.com (8.14.1/8.14.1) with ESMTP id m2ODsRw2020545 for &lt;cmarshall@us.sc.mufg.jp&gt;; Mon, 24 Mar 2008 09:54:28 -0400</value>\r\n    </message__archiver.common.message.pojo.HeaderLine>\r\n    <message__archiver.common.message.pojo.HeaderLine>\r\n      <name>Received</name>\r\n      <value>from (antispam2.btmna.com [192.168.137.100]) by nywbsh01.BTMNA.COM with smtp id 33ff_71df8f58_f9a8_11dc_a6e1_00137251dbf9; Mon, 24 Mar 2008 09:44:36 -0400</value>\r\n    </message__archiver.common.message.pojo.HeaderLine>\r\n    <message__archiver.common.message.pojo.HeaderLine>\r\n      <name>Received</name>\r\n      <value>from zerok.tf-ny.com ([172.24.250.50]) by tfusmabosprod1.tfn.com (Switch-3.2.7/Switch-3.2.0/tfn-gw-1.0) with ESMTP id m2ODk3Cd003160 for &lt;cmarshall@us.sc.mufg.jp&gt;; Mon, 24 Mar 2008 09:46:03 -0400</value>\r\n    </message__archiver.common.message.pojo.HeaderLine>\r\n    <message__archiver.common.message.pojo.HeaderLine>\r\n      <name>Received</name>\r\n      <value>from adr1.tfirc.com (adr1.tfirc.com [172.24.3.156]) by zerok.tf-ny.com (8.12.10/8.12.10) with ESMTP id m2ODp69Y018047 for &lt;cmarshall@us.sc.mufg.jp&gt;; Mon, 24 Mar 2008 08:51:06 -0500 (EST)</value>\r\n    </message__archiver.common.message.pojo.HeaderLine>\r\n    <message__archiver.common.message.pojo.HeaderLine>\r\n      <name>Received</name>\r\n      <value>from adr.com (adr1 [172.24.3.156]) by adr1.tfirc.com (8.11.7p3+Sun/8.11.6) with SMTP id m2ODp9Z13564 for &lt;cmarshall@us.sc.mufg.jp&gt;; Mon, 24 Mar 2008 09:51:09 -0400 (EDT)</value>\r\n    </message__archiver.common.message.pojo.HeaderLine>\r\n    <message__archiver.common.message.pojo.HeaderLine>\r\n      <name>Return-Path</name>\r\n      <value>&lt;webmaster@adr.com&gt;</value>\r\n    </message__archiver.common.message.pojo.HeaderLine>\r\n    <message__archiver.common.message.pojo.HeaderLine>\r\n      <name>X-OriginalArrivalTime</name>\r\n      <value>24 Mar 2008 13:53:08.0199 (UTC) FILETIME=[6409D770:01C88DB6]</value>\r\n    </message__archiver.common.message.pojo.HeaderLine>\r\n    <message__archiver.common.message.pojo.HeaderLine>\r\n      <name>X-MIMETrack</name>\r\n      <value>Itemize by SMTP Server on NJHR2033/BTMNA(Release 6.5.5FP2|October 23, 2006) at 03/24/2008 09:54:38 AM,Serialize by Router on NJHR2033/BTMNA(Release 6.5.5FP2|October 23, 2006) at 03/24/2008 09:54:40 AM,Serialize complete at 03/24/2008 09:54:40 AM</value>\r\n    </message__archiver.common.message.pojo.HeaderLine>\r\n    <message__archiver.common.message.pojo.HeaderLine>\r\n      <name>X-esp</name>\r\n      <value>ESP&lt;-24&gt;=SHA:&lt;20&gt; UHA:&lt;6&gt; BAYES:&lt;-1&gt; SenderID:&lt;0&gt; DKIM:&lt;0&gt; TS:&lt;-49&gt; SIG:&lt;daBUfqz1AA3seEAIWQpTYg1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU_D48FopF2AomQUxtKjGRw9uciB188YU8PH-wePkm1pFSuBQtb-peBkN6R9iJ6ISlkARMMmIpBvB1wX5IvCLHzRqAA&gt;TRU_scam_spam: &lt;0&gt;TRU_urllinks: &lt;0&gt;TRU_profanity_spam: &lt;0&gt;TRU_phish_spam: &lt;0&gt;TRU_misc_spam: &lt;0&gt;TRU_freehosting: &lt;0&gt;TRU_medical_spam: &lt;0&gt;TRU_watch_spam: &lt;0&gt;TRU_stock_spam: &lt;0&gt;TRU_marketing_spam: &lt;0&gt;URL Real-Time Signatures: &lt;0&gt;TRU_adult_spam: &lt;0&gt;TRU_lotto_spam: &lt;0&gt;TRU_legal_spam: &lt;0&gt;TRU_money_spam: &lt;0&gt;TRU_html_image_spam: &lt;0&gt;TRU_embedded_image_spam: &lt;0&gt;</value>\r\n    </message__archiver.common.message.pojo.HeaderLine>\r\n    <message__archiver.common.message.pojo.HeaderLine>\r\n      <name>Content-class</name>\r\n      <value>urn:content-classes:message</value>\r\n    </message__archiver.common.message.pojo.HeaderLine>\r\n    <message__archiver.common.message.pojo.HeaderLine>\r\n      <name>Subject</name>\r\n      <value>% Change of Price vs. Previous Close Alert for MTU (ADR)</value>\r\n    </message__archiver.common.message.pojo.HeaderLine>\r\n    <message__archiver.common.message.pojo.HeaderLine>\r\n      <name>Date</name>\r\n      <value>Mon, 24 Mar 2008 09:51:09 -0400</value>\r\n    </message__archiver.common.message.pojo.HeaderLine>\r\n    <message__archiver.common.message.pojo.HeaderLine>\r\n      <name>Message-ID</name>\r\n      <value>&lt;200803241351.m2ODp9Z13564@adr1.tfirc.com&gt;</value>\r\n    </message__archiver.common.message.pojo.HeaderLine>\r\n    <message__archiver.common.message.pojo.HeaderLine>\r\n      <name>X-MS-Has-Attach</name>\r\n      <value></value>\r\n    </message__archiver.common.message.pojo.HeaderLine>\r\n    <message__archiver.common.message.pojo.HeaderLine>\r\n      <name>X-MS-TNEF-Correlator</name>\r\n      <value></value>\r\n    </message__archiver.common.message.pojo.HeaderLine>\r\n    <message__archiver.common.message.pojo.HeaderLine>\r\n      <name>Thread-Topic</name>\r\n      <value>% Change of Price vs. Previous Close Alert for MTU (ADR)</value>\r\n    </message__archiver.common.message.pojo.HeaderLine>\r\n    <message__archiver.common.message.pojo.HeaderLine>\r\n      <name>Thread-Index</name>\r\n      <value>AciNtmRshALppsDNQuSWZow5I0t8hg==</value>\r\n    </message__archiver.common.message.pojo.HeaderLine>\r\n    <message__archiver.common.message.pojo.HeaderLine>\r\n      <name>From</name>\r\n      <value>&lt;webmaster@adr.com&gt;</value>\r\n    </message__archiver.common.message.pojo.HeaderLine>\r\n    <message__archiver.common.message.pojo.HeaderLine>\r\n      <name>To</name>\r\n      <value>&quot;undisclosed-recipients&quot; &lt;undisclosed-recipients:;&gt;</value>\r\n    </message__archiver.common.message.pojo.HeaderLine>\r\n    <message__archiver.common.message.pojo.HeaderLine>\r\n      <name>Content-Type</name>\r\n      <value>multipart/alternative; boundary=&quot;----_=_NextPart_003_01C88DB6.63EB7A00&quot;</value>\r\n    </message__archiver.common.message.pojo.HeaderLine>\r\n  </headers>\r\n  <date>20080324135109</date>\r\n  <subject>% Change of Price vs. Previous Close Alert for MTU (ADR)</subject>\r\n  <body class=\"list\">\r\n    <string>% Change of Price vs. Previous Close Alert for MTU (ADR) \r\n \r\n \r\n\r\n\r\n  % Change of Price vs. Previous Close Alert for MTU (ADR) \r\n% change limit of 2.00% was reached for MTU (ADR) on Mar 24, 2008 at 09:31 EDT. \r\nLast PriceÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  9.08 USD \r\nChange from Last CloseÂ Â Â Â Â Â Â Â Â  0.28 USD \r\nVolumeÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  24,800 \r\nAverage Daily VolumeÂ Â Â Â Â Â  2,226,748</string>\r\n  </body>\r\n  <from class=\"set\">\r\n    <string>webmaster@adr.com</string>\r\n  </from>\r\n  <to class=\"set\">\r\n    <string>undisclosed-recipients &lt;undisclosed-recipients:;&gt;</string>\r\n  </to>\r\n  <bcc class=\"set\">\r\n    <string>journalarchive@us.sc.mufg.jp</string>\r\n    <string>cmarshall@us.sc.mufg.jp</string>\r\n  </bcc>\r\n  <errorExtractingBodyText>true</errorExtractingBodyText>\r\n</message__archiver.common.message.pojo.ParsedMessage>\r\n',20,'3cdd78d8bcb9c49cfb451aca8a1fc6'),('blah.txt',110,'Unknown','Blah.txt contents',6,'5a6c419347448a81715553330fa0e6'),('blah.txt',111,'Unknown','Blah.txt contents',6,'74867e610bfa52ad8bba3832bd823e'),('blah.txt',112,'Unknown','Blah.txt contents',6,'be367c9a2ce1f3ee244ab4d7cb3c46'),('NewFile.xml',113,'Unknown','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n',20,'e1ddac0b316e0cc1bdc9b95d42f432'),('Blah.java',114,'Unknown','\npublic class Blah {\n\n	public static void main(String[] args) {\n		\n	}\n}\n',1,'17bf6c0917f98003726fc57e9fb9d5'),('blah.txt',115,'Unknown','Blah.txt contents',6,'d82ec85cc73eff567457686190dba6'),('objects.mk',116,'Unknown','################################################################################\n# Automatically-generated file. Do not edit!\n################################################################################\n\nUSER_OBJS :=\n\nLIBS :=\n',6,'fed2c7a1bed79dddce4376ebbbf67b'),('icu.c',117,'Unknown','/*\n ============================================================================\n Name        : icu.c\n Author      : \n Version     :\n Copyright   : Your copyright notice\n Description : Hello World in C, Ansi-style\n ============================================================================\n */\n\n#include <stdio.h>\n#include <stdlib.h>\n\nint main(void) {\n	puts(\"!!!Hello World!!!\"); /* prints !!!Hello World!!! */\n	return EXIT_SUCCESS;\n}\n',6,'4e393a2043b9d1d4c5db4307fc48ad'),('icu.c',118,'Unknown','/*\n ============================================================================\n Name        : icu.c\n Author      : \n Version     :\n Copyright   : Your copyright notice\n Description : Hello World in C, Ansi-style\n ============================================================================\n */\n\n#include <stdio.h>\n#include <stdlib.h>\n\nint main(void) {\n	puts(\"!!!Hello World!!!\"); /* prints !!!Hello World!!! */\n	return EXIT_SUCCESS;\n}\n',5,'509b8828f0eb6b0c886f3a6c12f871'),('icu.c',119,'Unknown','/*\n ============================================================================\n Name        : icu.c\n Author      : \n Version     :\n Copyright   : Your copyright notice\n Description : Hello World in C, Ansi-style\n ============================================================================\n */\n\n#include <stdio.h>\n#include <stdlib.h>\n\nint main(void) {\n	puts(\"!!!Hello World!!!\"); /* prints !!!Hello World!!! */\n	return EXIT_SUCCESS;\n}\n',5,'26ead4e2afe724c32922a8c24acb55'),('Bash Fork bomb',120,'Jon','Q. Can you explain following bash code or bash fork() bomb?\r\n:( ){ :| :& };:\r\n\r\nA. This is a bash function. It gets called recursively (recursive function). This is most horrible code for any Unix / Linux box. It is often used by sys admin to test user processes limitations (Linux process limits can be configured via /etc/security/limits.conf and PAM).\r\n\r\nOnce a successful fork bomb has been activated in a system it may not be possible to resume normal operation without rebooting, as the only solution to a fork bomb is to destroy all instances of it.\r\n[Warning examples may crash your computer] WARNING! These examples may crash your computer if executed.\r\nUnderstanding :( ){ :| :& };: fork() bomb code\r\n\r\n:( ) - It is a function name. It accepts no arguments at all. Generally, bash function is defined as follows:\r\n\r\nfoo(){\r\n arg1=$1\r\n echo \'\'\r\n #do_something on $arg argument\r\n}\r\n\r\nfork() bomb is defined as follows:\r\n\r\n :( ){\r\n  :| :&\r\n};:\r\n\r\n:| : - Next it call itself using programming technique called recursion and pipes the output to another call of the function \':\'. The worst part is function get called two times to bomb your system.\r\n\r\n& - Puts the function call in the background so child cannot die at all and start eating system resources.\r\n\r\n; - Terminate the function definition\r\n\r\n: - Call (run) the function aka set the fork() bomb.\r\n\r\nHere is more human readable code:\r\n\r\nbomb() {\r\n bomb | bomb &\r\n}; bomb\r\n\r\nProperly configured Linux / UNIX box should not go down when fork() bomb sets off. ',6,'7e9399079ac13111492326d01ed16d'),('jettyserver.xml',121,'Unknown','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\n	xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:context=\"http://www.springframework.org/schema/context\"\n	xmlns:lang=\"http://www.springframework.org/schema/lang\" xmlns:util=\"http://www.springframework.org/schema/util\"\n	xmlns:aop=\"http://www.springframework.org/schema/aop\"\n	xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd\n          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd\n          http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-2.5.xsd\n          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd\n          http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd\">\n\n	<description>\n		Defines our message extractor server components\n	</description>\n\n	<!-- Jetty Related Services -->\n	<bean id=\"jettyServer\" class=\"org.mortbay.jetty.Server\"\n		destroy-method=\"stop\">\n\n		<property name=\"stopAtShutdown\" value=\"true\" />\n		<property name=\"sendServerVersion\" value=\"true\" />\n		<property name=\"threadPool\">\n			<bean class=\"org.mortbay.thread.QueuedThreadPool\">\n				<property name=\"maxThreads\" value=\"2\" />\n			</bean>\n		</property>\n\n		<property name=\"connectors\">\n			<list>\n				<bean id=\"connector\" class=\"org.mortbay.jetty.nio.SelectChannelConnector\">\n					<property name=\"port\" value=\"8080\" />\n					<property name=\"maxIdleTime\" value=\"30000\" />\n				</bean>\n			</list>\n		</property>\n\n		<property name=\"handler\">\n			<bean class=\"org.mortbay.jetty.handler.ContextHandlerCollection\">\n				<property name=\"handlers\">\n					<list>\n\n						<!-- Define our web app context -->\n						<bean id=\"contexts\" class=\"org.mortbay.jetty.servlet.Context\">\n						\n							<property name=\"contextPath\" value=\"/\" />\n							\n							<property name=\"sessionHandler\">\n								<bean class=\"org.mortbay.jetty.servlet.SessionHandler\" />\n							</property>\n							\n							<!--  <property name=\"resourceBase\" value=\"/var/www\"/>-->\n\n							<property name=\"servletHandler\">\n\n								<bean class=\"org.mortbay.jetty.servlet.ServletHandler\">\n\n									<property name=\"servlets\">\n										<list>\n											<!-- Configure our Jersey Spring Servlet -->\n											<bean class=\"org.mortbay.jetty.servlet.ServletHolder\">\n												<property name=\"name\" value=\"jerseySpringServlet\" />\n												<property name=\"servlet\">\n													<bean\n														class=\"com.sun.jersey.spi.spring.container.servlet.SpringServlet\" />\n												</property>\n												<property name=\"initParameters\">\n													<map>\n														<entry key=\"com.sun.jersey.config.property.packages\"\n															value=\"message_extractor.server\" />\n														<entry key=\"com.sun.jersey.config.property.resourceConfigClass\"\n															value=\"com.sun.jersey.api.core.PackagesResourceConfig\" />														\n													</map>\n												</property>\n											</bean>\n										</list>\n									</property>\n									<property name=\"servletMappings\">\n										<list>\n											<bean class=\"org.mortbay.jetty.servlet.ServletMapping\">\n												<property name=\"pathSpecs\">\n													<list>\n														<value>/*</value>\n													</list>\n												</property>\n												<property name=\"servletName\" value=\"jerseySpringServlet\" />\n											</bean>\n										</list>\n									</property>\n								</bean>\n\n							</property>\n							<!-- TODO: Set Session Handler -->\n\n							<!-- Add each servlet handler as required -->\n\n						</bean>\n\n\n					</list>\n				</property>\n			</bean>\n		</property>\n	</bean>\n\n</beans>',1,'013c80c6d72dbc96e964f9599ecf62'),('Jetty Srping Server',122,'Jon','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\r\n	xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:context=\"http://www.springframework.org/schema/context\"\r\n	xmlns:lang=\"http://www.springframework.org/schema/lang\" xmlns:util=\"http://www.springframework.org/schema/util\"\r\n	xmlns:aop=\"http://www.springframework.org/schema/aop\"\r\n	xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd\r\n          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd\r\n          http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-2.5.xsd\r\n          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd\r\n          http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd\">\r\n\r\n	<description>\r\n\r\n	</description>\r\n\r\n	<!-- Jetty Related Services -->\r\n	<bean id=\"jettyServer\" class=\"org.mortbay.jetty.Server\"\r\n		destroy-method=\"stop\">\r\n		\r\n		<!-- \r\n		<property name=\'listeners\'>\r\n			<list>				\r\n				<bean class=\"org.springframework.web.context.ContextLoaderListener\"/>          \r\n	          	<bean class=\"org.springframework.web.context.request.RequestContextListener\"/>	   			\r\n			</list>\r\n		</property>\r\n		-->				 \r\n\r\n		<property name=\"stopAtShutdown\" value=\"true\" />\r\n		<property name=\"sendServerVersion\" value=\"true\" />\r\n		<property name=\"threadPool\">\r\n			<bean class=\"org.mortbay.thread.QueuedThreadPool\">\r\n				<property name=\"maxThreads\" value=\"2\" />\r\n			</bean>\r\n		</property>\r\n\r\n		<property name=\"connectors\">\r\n			<list>\r\n				<bean id=\"connector\" class=\"org.mortbay.jetty.nio.SelectChannelConnector\">\r\n					<property name=\"host\" value=\"127.0.0.1\"/>\r\n					<property name=\"port\" value=\"8080\" />\r\n					<property name=\"maxIdleTime\" value=\"30000\" />					\r\n				</bean>\r\n			</list>\r\n		</property>\r\n		\r\n		<property name=\"handler\">\r\n			<bean class=\"org.mortbay.jetty.handler.ContextHandlerCollection\">\r\n				<property name=\"handlers\">\r\n					<list>\r\n				\r\n						<bean id=\"contexts\" class=\"org.mortbay.jetty.servlet.Context\">												\r\n						\r\n							<property name=\"contextPath\" value=\"/\" />													\r\n							\r\n							<property name=\"sessionHandler\">\r\n								<bean class=\"org.mortbay.jetty.servlet.SessionHandler\" />\r\n							</property>													\r\n\r\n							<property name=\"servletHandler\">\r\n\r\n								<bean class=\"org.mortbay.jetty.servlet.ServletHandler\">\r\n\r\n									<property name=\"servlets\">\r\n										<list>\r\n																						\r\n											<bean class=\"org.mortbay.jetty.servlet.ServletHolder\">\r\n												<property name=\"name\" value=\"dispatcher\" />\r\n												<property name=\"servlet\">\r\n													<bean class=\"org.springframework.web.servlet.DispatcherServlet\" />\r\n												</property>												\r\n											</bean>\r\n																																										\r\n											<bean class=\"org.mortbay.jetty.servlet.ServletHolder\">\r\n												<property name=\"name\" value=\"jerseySpringServlet\" />\r\n												<property name=\"servlet\">\r\n													<bean\r\n														class=\"com.sun.jersey.spi.spring.container.servlet.SpringServlet\" />\r\n												</property>\r\n												<property name=\"initParameters\">\r\n													<map>\r\n														<entry key=\"com.sun.jersey.config.property.packages\"\r\n															value=\"server\" />\r\n														<entry key=\"com.sun.jersey.config.property.resourceConfigClass\"\r\n															value=\"com.sun.jersey.api.core.PackagesResourceConfig\" />														\r\n													</map>\r\n												</property>\r\n											</bean>\r\n										</list>\r\n									</property>\r\n									\r\n									<property name=\"servletMappings\">\r\n										<list>										    										   \r\n											<bean class=\"org.mortbay.jetty.servlet.ServletMapping\">\r\n												<property name=\"pathSpecs\">\r\n													<list>\r\n														<value>/*</value>\r\n													</list>\r\n												</property>\r\n												<property name=\"servletName\" value=\"jerseySpringServlet\" />\r\n											</bean>\r\n										</list>\r\n									</property>\r\n								</bean>\r\n\r\n							</property>							\r\n\r\n						</bean>\r\n\r\n\r\n					</list>\r\n				</property>\r\n			</bean>					\r\n		</property>\r\n		\r\n	</bean>\r\n\r\n</beans>',20,'c3d44d2b0449e5bb11307f49877296'),('Jetty Srping Server',123,'Jon','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\r\n	xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:context=\"http://www.springframework.org/schema/context\"\r\n	xmlns:lang=\"http://www.springframework.org/schema/lang\" xmlns:util=\"http://www.springframework.org/schema/util\"\r\n	xmlns:aop=\"http://www.springframework.org/schema/aop\"\r\n	xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd\r\n          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd\r\n          http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-2.5.xsd\r\n          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd\r\n          http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd\">\r\n\r\n	<description>\r\n\r\n	</description>\r\n\r\n	<!-- Jetty Related Services -->\r\n	<bean id=\"jettyServer\" class=\"org.mortbay.jetty.Server\"\r\n		destroy-method=\"stop\">\r\n		\r\n		<!-- \r\n		<property name=\'listeners\'>\r\n			<list>				\r\n				<bean class=\"org.springframework.web.context.ContextLoaderListener\"/>          \r\n	          	<bean class=\"org.springframework.web.context.request.RequestContextListener\"/>	   			\r\n			</list>\r\n		</property>\r\n		-->				 \r\n\r\n		<property name=\"stopAtShutdown\" value=\"true\" />\r\n		<property name=\"sendServerVersion\" value=\"true\" />\r\n		<property name=\"threadPool\">\r\n			<bean class=\"org.mortbay.thread.QueuedThreadPool\">\r\n				<property name=\"maxThreads\" value=\"2\" />\r\n			</bean>\r\n		</property>\r\n\r\n		<property name=\"connectors\">\r\n			<list>\r\n				<bean id=\"connector\" class=\"org.mortbay.jetty.nio.SelectChannelConnector\">\r\n					<property name=\"host\" value=\"127.0.0.1\"/>\r\n					<property name=\"port\" value=\"8080\" />\r\n					<property name=\"maxIdleTime\" value=\"30000\" />					\r\n				</bean>\r\n			</list>\r\n		</property>\r\n		\r\n		<property name=\"handler\">\r\n			<bean class=\"org.mortbay.jetty.handler.ContextHandlerCollection\">\r\n				<property name=\"handlers\">\r\n					<list>\r\n				\r\n						<bean id=\"contexts\" class=\"org.mortbay.jetty.servlet.Context\">												\r\n						\r\n							<property name=\"contextPath\" value=\"/\" />													\r\n							\r\n							<property name=\"sessionHandler\">\r\n								<bean class=\"org.mortbay.jetty.servlet.SessionHandler\" />\r\n							</property>													\r\n\r\n							<property name=\"servletHandler\">\r\n\r\n								<bean class=\"org.mortbay.jetty.servlet.ServletHandler\">\r\n\r\n									<property name=\"servlets\">\r\n										<list>\r\n																						\r\n											<bean class=\"org.mortbay.jetty.servlet.ServletHolder\">\r\n												<property name=\"name\" value=\"dispatcher\" />\r\n												<property name=\"servlet\">\r\n													<bean class=\"org.springframework.web.servlet.DispatcherServlet\" />\r\n												</property>												\r\n											</bean>\r\n																																										\r\n											<bean class=\"org.mortbay.jetty.servlet.ServletHolder\">\r\n												<property name=\"name\" value=\"jerseySpringServlet\" />\r\n												<property name=\"servlet\">\r\n													<bean\r\n														class=\"com.sun.jersey.spi.spring.container.servlet.SpringServlet\" />\r\n												</property>\r\n												<property name=\"initParameters\">\r\n													<map>\r\n														<entry key=\"com.sun.jersey.config.property.packages\"\r\n															value=\"server\" />\r\n														<entry key=\"com.sun.jersey.config.property.resourceConfigClass\"\r\n															value=\"com.sun.jersey.api.core.PackagesResourceConfig\" />														\r\n													</map>\r\n												</property>\r\n											</bean>\r\n										</list>\r\n									</property>\r\n									\r\n									<property name=\"servletMappings\">\r\n										<list>										    										   \r\n											<bean class=\"org.mortbay.jetty.servlet.ServletMapping\">\r\n												<property name=\"pathSpecs\">\r\n													<list>\r\n														<value>/*</value>\r\n													</list>\r\n												</property>\r\n												<property name=\"servletName\" value=\"jerseySpringServlet\" />\r\n											</bean>\r\n										</list>\r\n									</property>\r\n								</bean>\r\n\r\n							</property>							\r\n\r\n						</bean>\r\n\r\n\r\n					</list>\r\n				</property>\r\n			</bean>					\r\n		</property>\r\n		\r\n	</bean>\r\n\r\n</beans>',6,'3c5e96466c21f1becfd93fadb2ed1b'),('Jersey Spring Jetty',124,'Jon','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\r\n	xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:context=\"http://www.springframework.org/schema/context\"\r\n	xmlns:lang=\"http://www.springframework.org/schema/lang\" xmlns:util=\"http://www.springframework.org/schema/util\"\r\n	xmlns:aop=\"http://www.springframework.org/schema/aop\"\r\n	xsi:schemaLocation=\"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd\r\n          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd\r\n          http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-2.5.xsd\r\n          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd\r\n          http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd\">\r\n\r\n	<description>\r\n\r\n	</description>\r\n\r\n	<!-- Jetty Related Services -->\r\n	<bean id=\"jettyServer\" class=\"org.mortbay.jetty.Server\"\r\n		destroy-method=\"stop\">				\r\n\r\n		<property name=\"stopAtShutdown\" value=\"true\" />\r\n		<property name=\"sendServerVersion\" value=\"true\" />\r\n		<property name=\"threadPool\">\r\n			<bean class=\"org.mortbay.thread.QueuedThreadPool\">\r\n				<property name=\"maxThreads\" value=\"2\" />\r\n			</bean>\r\n		</property>\r\n\r\n		<property name=\"connectors\">\r\n			<list>\r\n				<bean id=\"connector\" class=\"org.mortbay.jetty.nio.SelectChannelConnector\">\r\n					<property name=\"host\" value=\"127.0.0.1\"/>\r\n					<property name=\"port\" value=\"8080\" />\r\n					<property name=\"maxIdleTime\" value=\"30000\" />					\r\n				</bean>\r\n			</list>\r\n		</property>\r\n		\r\n		<property name=\"handler\">\r\n			<bean class=\"org.mortbay.jetty.handler.ContextHandlerCollection\">\r\n				<property name=\"handlers\">\r\n					<list>\r\n				\r\n						<bean id=\"contexts\" class=\"org.mortbay.jetty.servlet.Context\">												\r\n						\r\n							<property name=\"contextPath\" value=\"/\" />													\r\n							\r\n							<property name=\"sessionHandler\">\r\n								<bean class=\"org.mortbay.jetty.servlet.SessionHandler\" />\r\n							</property>													\r\n\r\n							<property name=\"servletHandler\">\r\n\r\n								<bean class=\"org.mortbay.jetty.servlet.ServletHandler\">\r\n\r\n									<property name=\"servlets\">\r\n										<list>																							\r\n																																										\r\n											<bean class=\"org.mortbay.jetty.servlet.ServletHolder\">\r\n												<property name=\"name\" value=\"jerseySpringServlet\" />\r\n												<property name=\"servlet\">\r\n													<bean\r\n														class=\"com.sun.jersey.spi.spring.container.servlet.SpringServlet\" />\r\n												</property>\r\n												<property name=\"initParameters\">\r\n													<map>\r\n														<entry key=\"com.sun.jersey.config.property.packages\"\r\n															value=\"my.server\" />\r\n														<entry key=\"com.sun.jersey.config.property.resourceConfigClass\"\r\n															value=\"com.sun.jersey.api.core.PackagesResourceConfig\" />														\r\n													</map>\r\n												</property>\r\n											</bean>\r\n										</list>\r\n									</property>\r\n									\r\n									<property name=\"servletMappings\">\r\n										<list>										    										   \r\n											<bean class=\"org.mortbay.jetty.servlet.ServletMapping\">\r\n												<property name=\"pathSpecs\">\r\n													<list>\r\n														<value>/*</value>\r\n													</list>\r\n												</property>\r\n												<property name=\"servletName\" value=\"jerseySpringServlet\" />\r\n											</bean>\r\n										</list>\r\n									</property>\r\n								</bean>\r\n\r\n							</property>							\r\n\r\n						</bean>\r\n\r\n\r\n					</list>\r\n				</property>\r\n			</bean>					\r\n		</property>\r\n		\r\n	</bean>\r\n\r\n</beans>',1,'3ecad2c73823995fa0f2a2686e3959'),('Resource Resolver',125,'Jon','package message_extractor.analyzer.model;\r\n\r\nimport java.io.BufferedInputStream;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.io.Reader;\r\n\r\nimport org.w3c.dom.ls.LSInput;\r\nimport org.w3c.dom.ls.LSResourceResolver;\r\n\r\npublic class ResourceResolver implements LSResourceResolver {\r\n\r\n    @Override\r\n    public LSInput resolveResource(String type, String namespaceURI, String publicId, String systemId, String baseURI) {\r\n        \r\n        InputStream resourceAsStream = this.getClass().getResourceAsStream(systemId);\r\n        return new LSInputImpl(publicId, systemId, resourceAsStream);\r\n    }    \r\n    \r\n    protected class LSInputImpl implements LSInput {\r\n\r\n        private String publicId;\r\n\r\n        private String systemId;\r\n\r\n        public String getPublicId() {\r\n            return publicId;\r\n        }\r\n\r\n        public void setPublicId(String publicId) {\r\n            this.publicId = publicId;\r\n        }\r\n\r\n        @Override\r\n        public String getBaseURI() {\r\n            return null;\r\n        }\r\n\r\n        @Override\r\n        public InputStream getByteStream() {            \r\n            return null;\r\n        }\r\n\r\n        @Override\r\n        public boolean getCertifiedText() {\r\n            return false;\r\n        }\r\n\r\n        @Override\r\n        public Reader getCharacterStream() {\r\n            return null;\r\n        }\r\n\r\n        @Override\r\n        public String getEncoding() {\r\n            return null;\r\n        }\r\n\r\n        @Override\r\n        public String getStringData() {\r\n            synchronized (inputStream) {\r\n                try {\r\n                    byte[] input = new byte[inputStream.available()];\r\n                    inputStream.read(input);\r\n                    String contents = new String(input);\r\n                    return contents;\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                    System.out.println(\"Exception \" + e);\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n\r\n        @Override\r\n        public void setBaseURI(String baseURI) {\r\n        }\r\n\r\n        @Override\r\n        public void setByteStream(InputStream byteStream) {         \r\n        }\r\n\r\n        @Override\r\n        public void setCertifiedText(boolean certifiedText) {\r\n        }\r\n\r\n        @Override\r\n        public void setCharacterStream(Reader characterStream) {\r\n        }\r\n\r\n        @Override\r\n        public void setEncoding(String encoding) {\r\n        }\r\n\r\n        @Override\r\n        public void setStringData(String stringData) {           \r\n        }\r\n\r\n        public String getSystemId() {\r\n            return systemId;\r\n        }\r\n\r\n        public void setSystemId(String systemId) {\r\n            this.systemId = systemId;\r\n        }\r\n\r\n        public BufferedInputStream getInputStream() {\r\n            return inputStream;\r\n        }\r\n\r\n        public void setInputStream(BufferedInputStream inputStream) {\r\n            this.inputStream = inputStream;\r\n        }\r\n\r\n        private BufferedInputStream inputStream;\r\n\r\n        public LSInputImpl(String publicId, String sysId, InputStream input) {\r\n            this.publicId = publicId;\r\n            this.systemId = sysId;\r\n            this.inputStream = new BufferedInputStream(input);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n',1,'5bfd2025380d9b84806b07237f0614'),('Resource Resolver',126,'Jon','package com.oogly;\r\n\r\nimport java.io.BufferedInputStream;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.io.Reader;\r\n\r\nimport org.w3c.dom.ls.LSInput;\r\nimport org.w3c.dom.ls.LSResourceResolver;\r\n\r\npublic class ResourceResolver implements LSResourceResolver {\r\n\r\n    @Override\r\n    public LSInput resolveResource(String type, String namespaceURI, String publicId, String systemId, String baseURI) {\r\n        \r\n        InputStream resourceAsStream = this.getClass().getResourceAsStream(systemId);\r\n        return new LSInputImpl(publicId, systemId, resourceAsStream);\r\n    }    \r\n    \r\n    protected class LSInputImpl implements LSInput {\r\n\r\n        private String publicId;\r\n\r\n        private String systemId;\r\n\r\n        public String getPublicId() {\r\n            return publicId;\r\n        }\r\n\r\n        public void setPublicId(String publicId) {\r\n            this.publicId = publicId;\r\n        }\r\n\r\n        @Override\r\n        public String getBaseURI() {\r\n            return null;\r\n        }\r\n\r\n        @Override\r\n        public InputStream getByteStream() {            \r\n            return null;\r\n        }\r\n\r\n        @Override\r\n        public boolean getCertifiedText() {\r\n            return false;\r\n        }\r\n\r\n        @Override\r\n        public Reader getCharacterStream() {\r\n            return null;\r\n        }\r\n\r\n        @Override\r\n        public String getEncoding() {\r\n            return null;\r\n        }\r\n\r\n        @Override\r\n        public String getStringData() {\r\n            synchronized (inputStream) {\r\n                try {\r\n                    byte[] input = new byte[inputStream.available()];\r\n                    inputStream.read(input);\r\n                    String contents = new String(input);\r\n                    return contents;\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                    System.out.println(\"Exception \" + e);\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n\r\n        @Override\r\n        public void setBaseURI(String baseURI) {\r\n        }\r\n\r\n        @Override\r\n        public void setByteStream(InputStream byteStream) {         \r\n        }\r\n\r\n        @Override\r\n        public void setCertifiedText(boolean certifiedText) {\r\n        }\r\n\r\n        @Override\r\n        public void setCharacterStream(Reader characterStream) {\r\n        }\r\n\r\n        @Override\r\n        public void setEncoding(String encoding) {\r\n        }\r\n\r\n        @Override\r\n        public void setStringData(String stringData) {           \r\n        }\r\n\r\n        public String getSystemId() {\r\n            return systemId;\r\n        }\r\n\r\n        public void setSystemId(String systemId) {\r\n            this.systemId = systemId;\r\n        }\r\n\r\n        public BufferedInputStream getInputStream() {\r\n            return inputStream;\r\n        }\r\n\r\n        public void setInputStream(BufferedInputStream inputStream) {\r\n            this.inputStream = inputStream;\r\n        }\r\n\r\n        private BufferedInputStream inputStream;\r\n\r\n        public LSInputImpl(String publicId, String sysId, InputStream input) {\r\n            this.publicId = publicId;\r\n            this.systemId = sysId;\r\n            this.inputStream = new BufferedInputStream(input);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n',1,'2a70d763929ce3053085bfaa1d78e2'),('Eclipse Templates',127,'Jon','So this page grew out of a Stackoverflow post that I asked a while ago:\r\n\r\nhttp://stackoverflow.com/questions/1028858/useful-eclipse-java-code-templates\r\n  \r\nThe intent is to document user generated Code Templates for Eclipse which are very useful timesavers.  \r\n\r\nTo use these go into:\r\n Eclipse->Window->Preferences\r\n Java->Editor->Templates\r\n\r\nSelect New and give the template a Name, Description and paste in the code template below.\r\n\r\nLog4j isDebugEnabled() - debug\r\n\r\nif(log.isDebugEnabled()){\r\n  log.debug(\"${cursor}\");\r\n}\r\n\r\nLog4j Import - log\r\n\r\n${:import(org.apache.log4j.Logger)}\r\nprivate static final Logger log = Logger.getLogger(${enclosing_type}.class);\r\n\r\nCore Java Lock - lock\r\n\r\n${lock}.acquire();\r\ntry {\r\n    ${line_selection}\r\n    ${cursor}\r\n} finally {\r\n    ${lock}.release();\r\n}\r\n\r\nCore Java MessageFormat - mf\r\n\r\n${:import(java.text.MessageFormat} \r\nMessageFormat.format(${word_selection}, ${cursor})\r\n\r\nEclipse syncexec - syncexec\r\n\r\nPlatformUI.getWorkbench().getDisplay().syncExec(new Runnable(){\r\n    public void run(){\r\n        ${line_selection}${cursor}\r\n    }\r\n});\r\n\r\nDesign Pattern - Singleton\r\n\r\n/**\r\n * The shared instance.\r\n */\r\nprivate static ${enclosing_type} instance = new ${enclosing_type}();\r\n\r\n/**\r\n * Private constructor.\r\n */\r\nprivate ${enclosing_type}() {\r\n    super();\r\n}\r\n\r\n/**\r\n * Returns this shared instance.\r\n *\r\n * @returns The shared instance\r\n */\r\npublic static ${enclosing_type} getInstance() {\r\n    return instance;\r\n}\r\n\r\nCore Java Constant - const\r\n\r\nprivate static final ${type} ${name} = new ${type} ${cursor};\r\n\r\nCore Java System Trace - traceout\r\n\r\nSystem.out.println(\"${enclosing_type}.${enclosing_method}()\");\r\n\r\nCore Java Readfile - readfile\r\n\r\n${:import(java.io.BufferedReader,  \r\n           java.io.FileNotFoundException,  \r\n           java.io.FileReader,  \r\n           java.io.IOException)}  \r\n BufferedReader in = null;  \r\n try {  \r\n    in = new BufferedReader(new FileReader(${fileName}));  \r\n    String line;  \r\n    while ((line = in.readLine()) != null) {  \r\n       ${process}  \r\n    }  \r\n }  \r\n catch (FileNotFoundException e) {  \r\n    logger.error(e) ;  \r\n }  \r\n catch (IOException e) {  \r\n    logger.error(e) ;  \r\n } finally {  \r\n    if(in != null) in.close();  \r\n }  \r\n ${cursor}\r\n\r\nCore Java - String Format - strf\r\n\r\nString.format(\"${cursor}\",)\r\n\r\nEclipse SWT Color swtc\r\n\r\nDisplay.getCurrent().getSystemColor(SWT.COLOR_${cursor})\r\n\r\nCore Java Field and Getter Setter - getset\r\n\r\nprivate ${elemType:nv} ${nv:newName(boolean)};  \r\n\r\npublic ${elemType:nv} get${nv}() {  \r\n    return ${nv};  \r\n}  \r\n\r\npublic void set${nv}( ${elemType:nv} ${nv}) {  \r\n    firePropertyChange(\"${nv}\", this.${nv}, this.${nv} = ${nv});\r\n}\r\n\r\n\r\nCommons Lang Equals Hashcode ToString - langid \r\n\r\n${:import(org.apache.commons.lang.builder.EqualsBuilder,org.apache.commons.lang.builder.HashCodeBuilder,org.apache.commons.lang.builder.ReflectionToStringBuilder)}\r\n@Override\r\npublic boolean equals(Object obj) {\r\n    return EqualsBuilder.reflectionEquals(this, obj);\r\n}\r\n    \r\n@Override\r\npublic String toString() {\r\n    return ReflectionToStringBuilder.toString(this);\r\n}\r\n    \r\n@Override\r\npublic int hashCode() {\r\n    return HashCodeBuilder.reflectionHashCode(this);\r\n}\r\n    \r\n',1,'2d2716248601aa6e1f167d3d93ca5c'),('Jetty Statistics Handler',128,'Jon','//========================================================================\r\n//Copyright 2006 Mort Bay Consulting Pty. Ltd.\r\n//------------------------------------------------------------------------\r\n//Licensed under the Apache License, Version 2.0 (the \"License\");\r\n//you may not use this file except in compliance with the License.\r\n//You may obtain a copy of the License at \r\n//http://www.apache.org/licenses/LICENSE-2.0\r\n//Unless required by applicable law or agreed to in writing, software\r\n//distributed under the License is distributed on an \"AS IS\" BASIS,\r\n//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n//See the License for the specific language governing permissions and\r\n//limitations under the License.\r\n//========================================================================\r\n\r\npackage org.mortbay.jetty.handler;\r\n\r\nimport java.io.IOException;\r\n\r\nimport javax.servlet.ServletException;\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\n\r\nimport org.mortbay.jetty.HttpConnection;\r\nimport org.mortbay.jetty.Request;\r\nimport org.mortbay.jetty.Response;\r\n\r\npublic class StatisticsHandler extends HandlerWrapper\r\n{\r\n    transient long _statsStartedAt;\r\n    \r\n    transient int _requests;\r\n    \r\n    transient long _requestsDurationMin;         // min request duration\r\n    transient long _requestsDurationMax;         // max request duration\r\n    transient long _requestsDurationTotal;       // total request duration\r\n    \r\n    transient int _requestsActive;\r\n    transient int _requestsActiveMin;            // min number of connections handled simultaneously\r\n    transient int _requestsActiveMax;\r\n    transient int _responses1xx; // Informal\r\n    transient int _responses2xx; // Success\r\n    transient int _responses3xx; // Redirection\r\n    transient int _responses4xx; // Client Error\r\n    transient int _responses5xx; // Server Error\r\n    \r\n\r\n    /* ------------------------------------------------------------ */\r\n    public void statsReset()\r\n    {\r\n        synchronized(this)\r\n        {\r\n            if (isStarted())\r\n                _statsStartedAt=System.currentTimeMillis();\r\n            _requests=0;\r\n            _requestsActiveMax=_requestsActive;\r\n            _responses1xx=0;\r\n            _responses2xx=0;\r\n            _responses3xx=0;\r\n            _responses4xx=0;\r\n            _responses5xx=0;\r\n          \r\n            _requestsActiveMin=_requestsActive;\r\n            _requestsActiveMax=_requestsActive;\r\n            _requestsActive=0;\r\n\r\n            _requestsDurationMin=0;\r\n            _requestsDurationMax=0;\r\n            _requestsDurationTotal=0;\r\n        }\r\n    }\r\n\r\n\r\n    /* ------------------------------------------------------------ */\r\n    public void handle(String target, HttpServletRequest request, HttpServletResponse response, int dispatch) throws IOException, ServletException\r\n    {\r\n        final Request base_request=(request instanceof Request)?((Request)request):HttpConnection.getCurrentConnection().getRequest();\r\n        final Response base_response=(response instanceof Response)?((Response)response):HttpConnection.getCurrentConnection().getResponse();\r\n        \r\n        try\r\n        {\r\n            synchronized(this)\r\n            {\r\n                _requests++;\r\n                _requestsActive++;\r\n                if (_requestsActive>_requestsActiveMax)\r\n                    _requestsActiveMax=_requestsActive;\r\n            }\r\n            \r\n            super.handle(target, request, response, dispatch);\r\n        }\r\n        finally\r\n        {\r\n            synchronized(this)\r\n            {\r\n                _requestsActive--;\r\n                if (_requestsActive<0)\r\n                    _requestsActive=0;\r\n                if (_requestsActive < _requestsActiveMin)\r\n                    _requestsActiveMin=_requestsActive;\r\n                \r\n                long duration = System.currentTimeMillis()-base_request.getTimeStamp();\r\n                \r\n                _requestsDurationTotal+=duration;\r\n                if (_requestsDurationMin==0 || duration<_requestsDurationMin)\r\n                    _requestsDurationMin=duration;\r\n                if (duration>_requestsDurationMax)\r\n                    _requestsDurationMax=duration;\r\n                \r\n                switch(base_response.getStatus()/100)\r\n                {\r\n                    case 1: _responses1xx++;break;\r\n                    case 2: _responses2xx++;break;\r\n                    case 3: _responses3xx++;break;\r\n                    case 4: _responses4xx++;break;\r\n                    case 5: _responses5xx++;break;\r\n                }\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n    /* ------------------------------------------------------------ */\r\n    protected void doStart() throws Exception\r\n    {\r\n        super.doStart();\r\n        _statsStartedAt=System.currentTimeMillis();\r\n    }\r\n\r\n    /* ------------------------------------------------------------ */\r\n    protected void doStop() throws Exception\r\n    {\r\n        super.doStop();\r\n    }\r\n\r\n    /* ------------------------------------------------------------ */\r\n    /**\r\n     * @return Get the number of requests handled by this context\r\n     * since last call of statsReset(). If setStatsOn(false) then this\r\n     * is undefined.\r\n     */\r\n    public int getRequests() {return _requests;}\r\n\r\n    /* ------------------------------------------------------------ */\r\n    /**\r\n     * @return Number of requests currently active.\r\n     * Undefined if setStatsOn(false).\r\n     */\r\n    public int getRequestsActive() {return _requestsActive;}\r\n\r\n    /* ------------------------------------------------------------ */\r\n    /**\r\n     * @return Maximum number of active requests\r\n     * since statsReset() called. Undefined if setStatsOn(false).\r\n     */\r\n    public int getRequestsActiveMax() {return _requestsActiveMax;}\r\n\r\n    /* ------------------------------------------------------------ */\r\n    /**\r\n     * @return Get the number of responses with a 2xx status returned\r\n     * by this context since last call of statsReset(). Undefined if\r\n     * if setStatsOn(false).\r\n     */\r\n    public int getResponses1xx() {return _responses1xx;}\r\n\r\n    /* ------------------------------------------------------------ */\r\n    /**\r\n     * @return Get the number of responses with a 100 status returned\r\n     * by this context since last call of statsReset(). Undefined if\r\n     * if setStatsOn(false).\r\n     */\r\n    public int getResponses2xx() {return _responses2xx;}\r\n\r\n    /* ------------------------------------------------------------ */\r\n    /**\r\n     * @return Get the number of responses with a 3xx status returned\r\n     * by this context since last call of statsReset(). Undefined if\r\n     * if setStatsOn(false).\r\n     */\r\n    public int getResponses3xx() {return _responses3xx;}\r\n\r\n    /* ------------------------------------------------------------ */\r\n    /**\r\n     * @return Get the number of responses with a 4xx status returned\r\n     * by this context since last call of statsReset(). Undefined if\r\n     * if setStatsOn(false).\r\n     */\r\n    public int getResponses4xx() {return _responses4xx;}\r\n\r\n    /* ------------------------------------------------------------ */\r\n    /**\r\n     * @return Get the number of responses with a 5xx status returned\r\n     * by this context since last call of statsReset(). Undefined if\r\n     * if setStatsOn(false).\r\n     */\r\n    public int getResponses5xx() {return _responses5xx;}\r\n\r\n    /* ------------------------------------------------------------ */\r\n    /** \r\n     * @return Timestamp stats were started at.\r\n     */\r\n    public long getStatsOnMs()\r\n    {\r\n        return System.currentTimeMillis()-_statsStartedAt;\r\n    }\r\n\r\n    /* ------------------------------------------------------------ */\r\n    /**\r\n     * @return Returns the requestsActiveMin.\r\n     */\r\n    public int getRequestsActiveMin()\r\n    {\r\n        return _requestsActiveMin;\r\n    }\r\n\r\n    /* ------------------------------------------------------------ */\r\n    /**\r\n     * @return Returns the requestsDurationMin.\r\n     */\r\n    public long getRequestsDurationMin()\r\n    {\r\n        return _requestsDurationMin;\r\n    }\r\n\r\n    /* ------------------------------------------------------------ */\r\n    /**\r\n     * @return Returns the requestsDurationTotal.\r\n     */\r\n    public long getRequestsDurationTotal()\r\n    {\r\n        return _requestsDurationTotal;\r\n    }\r\n\r\n    /* ------------------------------------------------------------ */\r\n    /** \r\n     * @return Average duration of request handling in milliseconds \r\n     * since statsReset() called. Undefined if setStatsOn(false).\r\n     */\r\n    public long getRequestsDurationAve() {return _requests==0?0:(_requestsDurationTotal/_requests);}\r\n\r\n    /* ------------------------------------------------------------ */\r\n    /** \r\n     * @return Get maximum duration in milliseconds of request handling\r\n     * since statsReset() called. Undefined if setStatsOn(false).\r\n     */\r\n    public long getRequestsDurationMax() {return _requestsDurationMax;}\r\n    \r\n\r\n}\r\n',1,'c723bbbd51cbf83a8fce6318a21496'),('scan .META.',129,'Jon','\r\nROW                          COLUMN+CELL                                                                      \r\n users,,1254520287878        column=historian:assignment, timestamp=1254520290501, value=Region assigned to se\r\n                             rver test-hadoop2,60020,1254505714221                                        \r\n users,,1254520287878        column=historian:creation, timestamp=1254520287920, value=Region creation        \r\n users,,1254520287878        column=historian:open, timestamp=1254520293507, value=Region opened on server : v\r\n                             an-test-hadoop2                                                                  \r\n users,,1254520300103        column=historian:assignment, timestamp=1254520302512, value=Region assigned to se\r\n                             rver test-hadoop7,60020,1254505714208                                        \r\n users,,1254520300103        column=historian:creation, timestamp=1254520300133, value=Region creation        \r\n users,,1254520300103        column=historian:open, timestamp=1254520305518, value=Region opened on server : v\r\n                             an-test-hadoop7                                                                  \r\n users,,1254520766302        column=historian:assignment, timestamp=1254520767882, value=Region assigned to se\r\n                             rver test-hadoop2,60020,1254505714221                                        \r\n users,,1254520766302        column=historian:creation, timestamp=1254520766332, value=Region creation        \r\n users,,1254520766302        column=historian:open, timestamp=1254520770886, value=Region opened on server : v\r\n                             an-test-hadoop2                                                                  \r\n users,,1254520778446        column=historian:assignment, timestamp=1254520779895, value=Region assigned to se\r\n                             rver test-hadoop2,60020,1254505714221                                        \r\n users,,1254520778446        column=historian:creation, timestamp=1254520778475, value=Region creation        \r\n users,,1254520778446        column=historian:open, timestamp=1254520782898, value=Region opened on server : v\r\n                             an-test-hadoop2                                                                  \r\n users,,1254521286073        column=historian:assignment, timestamp=1254521287711, value=Region assigned to se\r\n                             rver test-hadoop2,60020,1254505714221                                        \r\n users,,1254521286073        column=historian:open, timestamp=1254521290716, value=Region opened on server : v\r\n                             an-test-hadoop2                                                                  \r\n users,,1254521286073        column=historian:split, timestamp=1254521287006, value=Region split from: users,,\r\n                             1254520778446                                                                    \r\n users,,1254525499493        column=historian:assignment, timestamp=1254525500309, value=Region assigned to se\r\n                             rver test-hadoop2,60020,1254505714221                                        \r\n users,,1254525499493        column=historian:creation, timestamp=1254525499529, value=Region creation        \r\n users,,1254525499493        column=historian:open, timestamp=1254525503313, value=Region opened on server : v\r\n                             an-test-hadoop2                                                                  \r\n users,,1254525509661        column=historian:assignment, timestamp=1254525509851, value=Region assigned to se\r\n                             rver test-hadoop7,60020,1254505714208                                        \r\n users,,1254525509661        column=historian:creation, timestamp=1254525509697, value=Region creation        \r\n users,,1254525509661        column=historian:open, timestamp=1254525512855, value=Region opened on server : v\r\n                             an-test-hadoop7                                                                  \r\n users,,1254529257871        column=historian:assignment, timestamp=1254529259082, value=Region assigned to se\r\n                             rver test-hadoop2,60020,1254505714221                                        \r\n users,,1254529257871        column=historian:creation, timestamp=1254529257916, value=Region creation        \r\n users,,1254529257871        column=historian:open, timestamp=1254529262086, value=Region opened on server : v\r\n                             an-test-hadoop2                                                                  \r\n users,,1254529634650        column=historian:assignment, timestamp=1254529634969, value=Region assigned to se\r\n                             rver test-hadoop7,60020,1254505714208                                        \r\n users,,1254529634650        column=historian:creation, timestamp=1254529634689, value=Region creation        \r\n users,,1254529634650        column=historian:open, timestamp=1254529638069, value=Region opened on server : v\r\n                             an-test-hadoop7                                                                  \r\n users,,1254530439282        column=historian:assignment, timestamp=1254530452833, value=Region assigned to se\r\n                             rver test-hadoop7,60020,1254505714208                                        \r\n users,,1254530439282        column=historian:open, timestamp=1254530455839, value=Region opened on server : v\r\n                             an-test-hadoop7                                                                  \r\n users,,1254530439282        column=historian:split, timestamp=1254530451029, value=Region split from: users,,\r\n                             1254529634650                                                                    \r\n users,,1254531407246        column=historian:assignment, timestamp=1254531501100, value=Region assigned to se\r\n                             rver test-hadoop7,60020,1254505714208                                        \r\n users,,1254531407246        column=historian:open, timestamp=1254531504106, value=Region opened on server : v\r\n                             an-test-hadoop7                                                                  \r\n users,,1254531407246        column=historian:split, timestamp=1254531500309, value=Region split from: users,,\r\n                             1254530439282                                                                    \r\n users,,1254531855062        column=historian:assignment, timestamp=1254777632935, value=Region assigned to se\r\n                             rver test-hadoop7,60020,1254777560197                                        \r\n users,,1254531855062        column=historian:open, timestamp=1254777635945, value=Region opened on server : v\r\n                             an-test-hadoop7                                                                  \r\n users,,1254531855062        column=historian:split, timestamp=1254531856000, value=Region split from: users,,\r\n                             1254531407246                                                                    \r\n users,,1254865549910        column=historian:assignment, timestamp=1254865550486, value=Region assigned to se\r\n                             rver test-hadoop6,60020,1254777560228                                        \r\n users,,1254865549910        column=historian:creation, timestamp=1254865549914, value=Region creation        \r\n users,,1254865549910        column=historian:open, timestamp=1254865553491, value=Region opened on server : v\r\n                             an-test-hadoop6                                                                  \r\n users,,1254865750290        column=historian:assignment, timestamp=1254865751655, value=Region assigned to se\r\n                             rver test-hadoop6,60020,1254777560228                                        \r\n users,,1254865750290        column=historian:creation, timestamp=1254865750290, value=Region creation        \r\n users,,1254865750290        column=historian:open, timestamp=1254865754659, value=Region opened on server : v\r\n                             an-test-hadoop6                                                                  \r\n users,,1254865882573        column=historian:assignment, timestamp=1254865883766, value=Region assigned to se\r\n                             rver test-hadoop6,60020,1254777560228                                        \r\n users,,1254865882573        column=historian:creation, timestamp=1254865882574, value=Region creation        \r\n users,,1254865882573        column=historian:open, timestamp=1254865886768, value=Region opened on server : v\r\n                             an-test-hadoop6                                                                  \r\n users,,1254865962717        column=historian:assignment, timestamp=1254865963246, value=Region assigned to se\r\n                             rver test-hadoop5,60020,1254777560261                                        \r\n users,,1254865962717        column=historian:creation, timestamp=1254865962715, value=Region creation        \r\n users,,1254865962717        column=historian:open, timestamp=1254865966250, value=Region opened on server : v\r\n                             an-test-hadoop5                                                                  \r\n users,,1254866084101        column=historian:assignment, timestamp=1254866084923, value=Region assigned to se\r\n                             rver test-hadoop6,60020,1254777560228                                        \r\n users,,1254866084101        column=historian:creation, timestamp=1254866084099, value=Region creation        \r\n users,,1254866084101        column=historian:open, timestamp=1254866087928, value=Region opened on server : v\r\n                             an-test-hadoop6                                                                  \r\n users,,1254867212643        column=historian:assignment, timestamp=1254867213791, value=Region assigned to se\r\n                             rver test-hadoop6,60020,1254777560228                                        \r\n users,,1254867212643        column=historian:creation, timestamp=1254867212639, value=Region creation        \r\n users,,1254867212643        column=historian:open, timestamp=1254867216795, value=Region opened on server : v\r\n                             an-test-hadoop6                                                                  \r\n users,,1254867250784        column=historian:assignment, timestamp=1254867251211, value=Region assigned to se\r\n                             rver test-hadoop5,60020,1254777560261                                        \r\n users,,1254867250784        column=historian:creation, timestamp=1254867250780, value=Region creation        \r\n users,,1254867250784        column=historian:open, timestamp=1254867254179, value=Region opened on server : v\r\n                             an-test-hadoop5                                                                  \r\n users,,1254867339041        column=historian:assignment, timestamp=1254867339895, value=Region assigned to se\r\n                             rver test-hadoop6,60020,1254777560228                                        \r\n users,,1254867339041        column=historian:creation, timestamp=1254867339036, value=Region creation        \r\n users,,1254867339041        column=historian:open, timestamp=1254867342900, value=Region opened on server : v\r\n                             an-test-hadoop6                                                                  \r\n users,,1254867421011        column=historian:assignment, timestamp=1254867422304, value=Region assigned to se\r\n                             rver test-hadoop5,60020,1254777560261                                        \r\n users,,1254867421011        column=historian:creation, timestamp=1254867421006, value=Region creation        \r\n users,,1254867421011        column=historian:open, timestamp=1254867425309, value=Region opened on server : v\r\n                             an-test-hadoop5                                                                  \r\n users,,1254867498804        column=historian:assignment, timestamp=1254867499021, value=Region assigned to se\r\n                             rver test-hadoop6,60020,1254777560228                                        \r\n users,,1254867498804        column=historian:creation, timestamp=1254867498803, value=Region creation        \r\n users,,1254867498804        column=historian:open, timestamp=1254867502025, value=Region opened on server : v\r\n                             an-test-hadoop6                                                                  \r\n users,,1254867527312        column=historian:assignment, timestamp=1254867527384, value=Region assigned to se\r\n                             rver test-hadoop5,60020,1254777560261                                        \r\n users,,1254867527312        column=historian:creation, timestamp=1254867527307, value=Region creation        \r\n users,,1254867527312        column=historian:open, timestamp=1254867530389, value=Region opened on server : v\r\n                             an-test-hadoop5                                                                  \r\n users,,1254867768121        column=historian:assignment, timestamp=1254867769227, value=Region assigned to se\r\n                             rver test-hadoop6,60020,1254777560228                                        \r\n users,,1254867768121        column=historian:creation, timestamp=1254867768115, value=Region creation        \r\n users,,1254867768121        column=historian:open, timestamp=1254867772231, value=Region opened on server : v\r\n                             an-test-hadoop6                                                                  \r\n users,,1254867888008        column=historian:assignment, timestamp=1254867889326, value=Region assigned to se\r\n                             rver test-hadoop6,60020,1254777560228                                        \r\n users,,1254867888008        column=historian:creation, timestamp=1254867888003, value=Region creation        \r\n users,,1254867888008        column=historian:open, timestamp=1254867892330, value=Region opened on server : v\r\n                             an-test-hadoop6                                                                  \r\n users,,1254867969007        column=historian:assignment, timestamp=1254867971727, value=Region assigned to se\r\n                             rver test-hadoop5,60020,1254777560261                                        \r\n users,,1254867969007        column=historian:creation, timestamp=1254867969002, value=Region creation        \r\n users,,1254867969007        column=historian:open, timestamp=1254867974729, value=Region opened on server : v\r\n                             an-test-hadoop5                                                                  \r\n users,,1254868113462        column=historian:assignment, timestamp=1254868115840, value=Region assigned to se\r\n                             rver test-hadoop5,60020,1254777560261                                        \r\n users,,1254868113462        column=historian:creation, timestamp=1254868113456, value=Region creation        \r\n users,,1254868113462        column=historian:open, timestamp=1254868118843, value=Region opened on server : v\r\n                             an-test-hadoop5                                                                  \r\n users,,1254868267938        column=historian:assignment, timestamp=1254868268997, value=Region assigned to se\r\n                             rver test-hadoop5,60020,1254777560261                                        \r\n users,,1254868267938        column=historian:creation, timestamp=1254868267932, value=Region creation        \r\n users,,1254868267938        column=historian:open, timestamp=1254868272001, value=Region opened on server : v\r\n                             an-test-hadoop5                                                                  \r\n users,,1254868294058        column=historian:assignment, timestamp=1254868296019, value=Region assigned to se\r\n                             rver test-hadoop5,60020,1254777560261                                        \r\n users,,1254868294058        column=historian:creation, timestamp=1254868294052, value=Region creation        \r\n users,,1254868294058        column=historian:open, timestamp=1254868299023, value=Region opened on server : v\r\n                             an-test-hadoop5                                                                  \r\n users,,1254868378194        column=historian:assignment, timestamp=1254868383098, value=Region assigned to se\r\n                             rver test-hadoop5,60020,1254777560261                                        \r\n users,,1254868378194        column=historian:creation, timestamp=1254868378187, value=Region creation        \r\n users,,1254868378194        column=historian:open, timestamp=1254868386101, value=Region opened on server : v\r\n                             an-test-hadoop5                                                                  \r\n users,,1254868378194        column=info:regioninfo, timestamp=1254870672595, value=REGION => {NAME => \'users,\r\n                             ,1254868378194\', STARTKEY => \'\', ENDKEY => \'\', ENCODED => 1372494269, OFFLINE => \r\n                             true, TABLE => {{NAME => \'users\', FAMILIES => [{NAME => \'info\', VERSIONS => \'3\', \r\n                             COMPRESSION => \'NONE\', TTL => \'2147483647\', BLOCKSIZE => \'65536\', IN_MEMORY => \'f\r\n                             alse\', BLOCKCACHE => \'true\'}, {NAME => \'roster\', VERSIONS => \'3\', COMPRESSION => \r\n                             \'NONE\', TTL => \'2147483647\', BLOCKSIZE => \'65536\', IN_MEMORY => \'false\', BLOCKCAC\r\n                             HE => \'true\'}]}}                                                                 \r\n users,user1133586@gr.org,12 column=historian:assignment, timestamp=1254777620927, value=Region assigned to se\r\n 54531855062                 rver test-hadoop2,60020,1254777560198                                        \r\n users,user1133586@gr.org,12 column=historian:open, timestamp=1254777623944, value=Region opened on server : v\r\n 54531855062                 an-test-hadoop2                                                                  \r\n users,user1133586@gr.org,12 column=historian:split, timestamp=1254531856000, value=Region split from: users,,\r\n 54531855062                 1254531407246                                                                    \r\n users,user1514365@gr.org,12 column=historian:assignment, timestamp=1254531501101, value=Region assigned to se\r\n 54531407246                 rver test-hadoop7,60020,1254505714208                                        \r\n users,user1514365@gr.org,12 column=historian:open, timestamp=1254531504108, value=Region opened on server : v\r\n 54531407246                 an-test-hadoop7                                                                  \r\n users,user1514365@gr.org,12 column=historian:split, timestamp=1254531500310, value=Region split from: users,,\r\n 54531407246                 1254530439282                                                                    \r\n users,user1514365@gr.org,12 column=historian:assignment, timestamp=1254777620928, value=Region assigned to se\r\n 54531761967                 rver test-hadoop6,60020,1254777560228                                        \r\n users,user1514365@gr.org,12 column=historian:open, timestamp=1254777623951, value=Region opened on server : v\r\n 54531761967                 an-test-hadoop6                                                                  \r\n users,user1514365@gr.org,12 column=historian:split, timestamp=1254531763242, value=Region split from: users,u\r\n 54531761967                 ser1514365\\\\x40gr.org,1254531407246                                              \r\n users,user1647950@gr.org,12 column=historian:assignment, timestamp=1254777620930, value=Region assigned to se\r\n 54531761967                 rver test-hadoop5,60020,1254777560261                                        \r\n users,user1647950@gr.org,12 column=historian:open, timestamp=1254777623957, value=Region opened on server : v\r\n 54531761967                 an-test-hadoop5                                                                  \r\n users,user1647950@gr.org,12 column=historian:split, timestamp=1254531763242, value=Region split from: users,u\r\n 54531761967                 ser1514365\\\\x40gr.org,1254531407246                                              \r\n users,user2029642@gr.org,12 column=historian:assignment, timestamp=1254530452832, value=Region assigned to se\r\n 54530439282                 rver test-hadoop7,60020,1254505714208                                        \r\n users,user2029642@gr.org,12 column=historian:open, timestamp=1254530455837, value=Region opened on server : v\r\n 54530439282                 an-test-hadoop7                                                                  \r\n users,user2029642@gr.org,12 column=historian:split, timestamp=1254530451031, value=Region split from: users,,\r\n 54530439282                 1254529634650                                                                    \r\n users,user2029642@gr.org,12 column=historian:assignment, timestamp=1254531102669, value=Region assigned to se\r\n 54531074907                 rver test-hadoop2,60020,1254505714221                                        \r\n users,user2029642@gr.org,12 column=historian:open, timestamp=1254531105675, value=Region opened on server : v\r\n 54531074907                 an-test-hadoop2                                                                  \r\n users,user2029642@gr.org,12 column=historian:split, timestamp=1254531099624, value=Region split from: users,u\r\n 54531074907                 ser2029642\\\\x40gr.org,1254530439282                                              \r\n users,user2029642@gr.org,12 column=historian:assignment, timestamp=1254777635951, value=Region assigned to se\r\n 54531807946                 rver test-hadoop6,60020,1254777560228                                        \r\n users,user2029642@gr.org,12 column=historian:open, timestamp=1254777638958, value=Region opened on server : v\r\n 54531807946                 an-test-hadoop6                                                                  \r\n users,user2029642@gr.org,12 column=historian:split, timestamp=1254531809569, value=Region split from: users,u\r\n 54531807946                 ser2029642\\\\x40gr.org,1254531074907                                              \r\n users,user2236490@gr.org,12 column=historian:assignment, timestamp=1254777620929, value=Region assigned to se\r\n 54531807946                 rver test-hadoop6,60020,1254777560228                                        \r\n users,user2236490@gr.org,12 column=historian:open, timestamp=1254777623953, value=Region opened on server : v\r\n 54531807946                 an-test-hadoop6                                                                  \r\n users,user2236490@gr.org,12 column=historian:split, timestamp=1254531809615, value=Region split from: users,u\r\n 54531807946                 ser2029642\\\\x40gr.org,1254531074907                                              \r\n users,user234538@gr.org,125 column=historian:assignment, timestamp=1254521287710, value=Region assigned to se\r\n 4521286073                  rver test-hadoop2,60020,1254505714221                                        \r\n users,user234538@gr.org,125 column=historian:open, timestamp=1254521290714, value=Region opened on server : v\r\n 4521286073                  an-test-hadoop2                                                                  \r\n users,user234538@gr.org,125 column=historian:split, timestamp=1254521287006, value=Region split from: users,,\r\n 4521286073                  1254520778446                                                                    \r\n users,user234538@gr.org,125 column=historian:assignment, timestamp=1254521603244, value=Region assigned to se\r\n 4521577697                  rver test-hadoop7,60020,1254505714208                                        \r\n users,user234538@gr.org,125 column=historian:open, timestamp=1254521606254, value=Region opened on server : v\r\n 4521577697                  an-test-hadoop7                                                                  \r\n users,user234538@gr.org,125 column=historian:split, timestamp=1254521602087, value=Region split from: users,u\r\n 4521577697                  ser234538\\\\x40gr.org,1254521286073                                               \r\n users,user2561307@gr.org,12 column=historian:assignment, timestamp=1254531102669, value=Region assigned to se\r\n 54531074907                 rver test-hadoop2,60020,1254505714221                                        \r\n users,user2561307@gr.org,12 column=historian:open, timestamp=1254531105674, value=Region opened on server : v\r\n 54531074907                 an-test-hadoop2                                                                  \r\n users,user2561307@gr.org,12 column=historian:split, timestamp=1254531099624, value=Region split from: users,u\r\n 54531074907                 ser2029642\\\\x40gr.org,1254530439282                                              \r\n users,user2561307@gr.org,12 column=historian:assignment, timestamp=1254531526553, value=Region assigned to se\r\n 54531523596                 rver test-hadoop2,60020,1254505714221                                        \r\n users,user2561307@gr.org,12 column=historian:open, timestamp=1254531529559, value=Region opened on server : v\r\n 54531523596                 an-test-hadoop2                                                                  \r\n users,user2561307@gr.org,12 column=historian:split, timestamp=1254531525503, value=Region split from: users,u\r\n 54531523596                 ser2561307\\\\x40gr.org,1254531074907                                              \r\n users,user2561307@gr.org,12 column=historian:assignment, timestamp=1254777620921, value=Region assigned to se\r\n 54532155941                 rver test-hadoop2,60020,1254777560198                                        \r\n users,user2561307@gr.org,12 column=historian:open, timestamp=1254777623936, value=Region opened on server : v\r\n 54532155941                 an-test-hadoop2                                                                  \r\n users,user2561307@gr.org,12 column=historian:split, timestamp=1254532158262, value=Region split from: users,u\r\n 54532155941                 ser2561307\\\\x40gr.org,1254531523596                                              \r\n users,user2687691@gr.org,12 column=historian:assignment, timestamp=1254777635952, value=Region assigned to se\r\n 54532155941                 rver test-hadoop6,60020,1254777560228                                        \r\n users,user2687691@gr.org,12 column=historian:open, timestamp=1254777638960, value=Region opened on server : v\r\n 54532155941                 an-test-hadoop6                                                                  \r\n users,user2687691@gr.org,12 column=historian:split, timestamp=1254532158290, value=Region split from: users,u\r\n 54532155941                 ser2561307\\\\x40gr.org,1254531523596                                              \r\n users,user2687691@gr.org,12 column=historian:assignment, timestamp=1254782032365, value=Region assigned to se\r\n 54782027604                 rver test-hadoop5,60020,1254777560261                                        \r\n users,user2687691@gr.org,12 column=historian:open, timestamp=1254782035392, value=Region opened on server : v\r\n 54782027604                 an-test-hadoop5                                                                  \r\n users,user2687691@gr.org,12 column=historian:split, timestamp=1254782028207, value=Region split from: users,u\r\n 54782027604                 ser2687691\\\\x40gr.org,1254532155941                                              \r\n users,user2873040@gr.org,12 column=historian:assignment, timestamp=1254782032364, value=Region assigned to se\r\n 54782027604                 rver test-hadoop5,60020,1254777560261                                        \r\n users,user2873040@gr.org,12 column=historian:open, timestamp=1254782035390, value=Region opened on server : v\r\n 54782027604                 an-test-hadoop5                                                                  \r\n users,user2873040@gr.org,12 column=historian:split, timestamp=1254782028209, value=Region split from: users,u\r\n 54782027604                 ser2687691\\\\x40gr.org,1254532155941                                              \r\n users,user2873040@gr.org,12 column=historian:assignment, timestamp=1254782467992, value=Region assigned to se\r\n 54782465739                 rver test-hadoop5,60020,1254777560261                                        \r\n users,user2873040@gr.org,12 column=historian:open, timestamp=1254782470997, value=Region opened on server : v\r\n 54782465739                 an-test-hadoop5                                                                  \r\n users,user2873040@gr.org,12 column=historian:split, timestamp=1254782467007, value=Region split from: users,u\r\n 54782465739                 ser2873040\\\\x40gr.org,1254782027604                                              \r\n users,user374176@gr.org,125 column=historian:assignment, timestamp=1254521603244, value=Region assigned to se\r\n 4521577697                  rver test-hadoop7,60020,1254505714208                                        \r\n users,user374176@gr.org,125 column=historian:open, timestamp=1254521606252, value=Region opened on server : v\r\n 4521577697                  an-test-hadoop7                                                                  \r\n users,user374176@gr.org,125 column=historian:split, timestamp=1254521602089, value=Region split from: users,u\r\n 4521577697                  ser234538\\\\x40gr.org,1254521286073                                               \r\n users,user374176@gr.org,125 column=historian:assignment, timestamp=1254521795975, value=Region assigned to se\r\n 4521794523                  rver test-hadoop5,60020,1254505714204                                        \r\n users,user374176@gr.org,125 column=historian:open, timestamp=1254521798983, value=Region opened on server : v\r\n 4521794523                  an-test-hadoop5                                                                  \r\n users,user374176@gr.org,125 column=historian:split, timestamp=1254521795121, value=Region split from: users,u\r\n 4521794523                  ser374176\\\\x40gr.org,1254521577697                                               \r\n users,user4644057@gr.org,12 column=historian:assignment, timestamp=1254782468106, value=Region assigned to se\r\n 54782465739                 rver test-hadoop6,60020,1254777560228                                        \r\n users,user4644057@gr.org,12 column=historian:open, timestamp=1254782471110, value=Region opened on server : v\r\n 54782465739                 an-test-hadoop6                                                                  \r\n users,user4644057@gr.org,12 column=historian:split, timestamp=1254782467008, value=Region split from: users,u\r\n 54782465739                 ser2873040\\\\x40gr.org,1254782027604                                              \r\n users,user529106@gr.org,125 column=historian:assignment, timestamp=1254531526552, value=Region assigned to se\r\n 4531523596                  rver test-hadoop2,60020,1254505714221                                        \r\n users,user529106@gr.org,125 column=historian:open, timestamp=1254531529557, value=Region opened on server : v\r\n 4531523596                  an-test-hadoop2                                                                  \r\n users,user529106@gr.org,125 column=historian:split, timestamp=1254531525507, value=Region split from: users,u\r\n 4531523596                  ser2561307\\\\x40gr.org,1254531074907                                              \r\n users,user529106@gr.org,125 column=historian:assignment, timestamp=1254777620931, value=Region assigned to se\r\n 4532197721                  rver test-hadoop5,60020,1254777560261                                        \r\n users,user529106@gr.org,125 column=historian:open, timestamp=1254777623955, value=Region opened on server : v\r\n 4532197721                  an-test-hadoop5                                                                  \r\n users,user529106@gr.org,125 column=historian:split, timestamp=1254532198513, value=Region split from: users,u\r\n 4532197721                  ser529106\\\\x40gr.org,1254531523596                                               \r\n users,user53374@gr.org,1254 column=historian:assignment, timestamp=1254521795458, value=Region assigned to se\r\n 521794523                   rver test-hadoop7,60020,1254505714208                                        \r\n users,user53374@gr.org,1254 column=historian:open, timestamp=1254521798464, value=Region opened on server : v\r\n 521794523                   an-test-hadoop7                                                                  \r\n users,user53374@gr.org,1254 column=historian:split, timestamp=1254521795122, value=Region split from: users,u\r\n 521794523                   ser374176\\\\x40gr.org,1254521577697                                               \r\n users,user53374@gr.org,1254 column=historian:assignment, timestamp=1254522101807, value=Region assigned to se\r\n 522091560                   rver test-hadoop7,60020,1254505714208                                        \r\n users,user53374@gr.org,1254 column=historian:open, timestamp=1254522104814, value=Region opened on server : v\r\n 522091560                   an-test-hadoop7                                                                  \r\n users,user53374@gr.org,1254 column=historian:split, timestamp=1254522099353, value=Region split from: users,u\r\n 522091560                   ser53374\\\\x40gr.org,1254521794523                                                \r\n users,user655573@gr.org,125 column=historian:assignment, timestamp=1254522101806, value=Region assigned to se\r\n 4522091560                  rver test-hadoop7,60020,1254505714208                                        \r\n users,user655573@gr.org,125 column=historian:open, timestamp=1254522104812, value=Region opened on server : v\r\n 4522091560                  an-test-hadoop7                                                                  \r\n users,user655573@gr.org,125 column=historian:split, timestamp=1254522099354, value=Region split from: users,u\r\n 4522091560                  ser53374\\\\x40gr.org,1254521794523                                                \r\n users,user748984@gr.org,125 column=historian:assignment, timestamp=1254777632937, value=Region assigned to se\r\n 4532197721                  rver test-hadoop7,60020,1254777560197                                        \r\n users,user748984@gr.org,125 column=historian:open, timestamp=1254777635947, value=Region opened on server : v\r\n 4532197721                  an-test-hadoop7                                                                  \r\n users,user748984@gr.org,125 column=historian:split, timestamp=1254532198514, value=Region split from: users,u\r\n 4532197721                  ser529106\\\\x40gr.org,1254531523596   ',6,'27eab820b7beea08a7ff3bc744e5b2'),('SynchronizationServiceImpl.java',130,'Unknown','			// TODO pp: combine the following methods for better performance\r\n			final List<SyncItemJobModel>[] targetCatalogVersions = getTargetCatalogVersions(product);\r\n			final CatalogVersionModel sourceCatalogVersion = getCatalogVersionForItem(product);\r\n			final Set<CatalogVersionModel> sourceVersions = new HashSet<CatalogVersionModel>();\r\n			sourceVersions.add(sourceCatalogVersion);\r\n\r\n			final SyncInfo syncInfo = getSyncInfo(product);\r\n			final int productSynchronized = syncInfo.getSyncStatus();\r\n\r\n			ret = new SyncContextImpl(SYNCHRONIZATION_NOT_AVAILABLE, sourceVersions, targetCatalogVersions, productSynchronized,\r\n					null);\r\n			if (syncInfo.getAffectedItems() != null)\r\n			{\r\n				ret.setAffectedItems(syncInfo.getAffectedItems());',1,'a7e424d936f42b1c0e5dc6af153520'),('DefaultSynchronizationServiceDao.java',131,'Unknown','	public SearchResult<Object> getSyncSources(final Object product)\n	{\n		final Map<String, Object> params = new HashMap<String, Object>();\n		params.put(\"target\", product);\n		final String query = \"SELECT {ist:sourceItem}, {ist:sourceVersion} FROM {ItemSyncTimestamp AS ist} WHERE {ist:targetItem} = ?target AND {ist:sourceVersion} IS NOT NULL\";\n		final SearchResult<Object> result = flexibleSearchService.search(query, params);\n		if (LOG.isDebugEnabled())\n		{\n			LOG.debug(\"Search for sourceItem \" + product);\n			LOG.debug(\"Search query: \" + query);\n			LOG.debug(result.getCount() + \" items found\");\n		}\n		return result;\n	}',1,'53742c411f7e60001abad9a167b6dd'),('DefaultSynchronizationServiceDao.java',132,'Unknown','	@Override\n	public SearchResult<Object> getSyncTargets(final Object product)\n	{\n		final Map<String, Object> params = new HashMap<String, Object>();\n		params.put(\"source\", product);\n		final String query = \"SELECT {ist:targetItem}, {ist:targetVersion} FROM {ItemSyncTimestamp AS ist} WHERE {ist:sourceItem} = ?source AND {ist:targetVersion} IS NOT NULL\";\n		final SearchResult<Object> result = flexibleSearchService.search(query, params);\n		if (LOG.isDebugEnabled())\n		{\n			LOG.debug(\"Search for targetItem \" + product);\n			LOG.debug(\"Search query: \" + query);\n			LOG.debug(result.getCount() + \" items found\");\n		}\n		return result;\n	}',1,'c6019451602b8d0f3e6cdd00762a97'),('Serializable',133,'Abhijit Sharma','public interface Serializable {\r\n}\r\n',1,'cfde9014229326c39f5e64d6e324db'),('SynchronizeCelumAssetItemAction.java',134,'Unknown','public class SynchronizeCelumAssetItemAction extends ItemAction\n{\n	private final CelumAssetSynchronizeService synchronizer = (CelumAssetSynchronizeService) Registry.getApplicationContext()\n			.getBean(\"assetSynchronizeService\");\n\n	/*\n	 * (non-Javadoc)\n	 * \n	 * @see de.hybris.platform.hmc.util.action.ItemAction#perform(de.hybris.platform.hmc.util.action.ActionEvent)\n	 */\n	@Override\n	public ActionResult perform(final ActionEvent e) throws JaloBusinessException\n	{\n		final CelumAsset asset = (CelumAsset) getItem(e);\n		boolean synchResult = false;\n		ActionResult actionResult = new ActionResult(ActionResult.OK, true, false);\n		if (asset == null)\n		{\n			actionResult = new ActionResult(ActionResult.FAILED, MAMUtils.getLocalizedString(\"asset.is_null\"), false);\n		}\n		else\n		{\n			if (asset.isSynchronizedAsPrimitive())\n			{\n				synchResult = synchronizer.unsynchronize(asset);\n			}\n			else\n			{\n				synchResult = synchronizer.synchronize(asset);\n			}\n			if (!synchResult)\n			{\n				actionResult = new ActionResult(ActionResult.FAILED, MAMUtils.getLocalizedString(\"asset.synchronization.failed\"),\n						false);\n			}\n		}\n		return actionResult;\n	}\n}',1,'e04dc625a53dc87dd31f8bf7a2cf64'),('CelumAssetSynchronizeServiceImpl.java',135,'Unknown','	@Override\n	public boolean synchronize(final CelumAsset asset)\n	{\n		boolean result = false;\n		if (configService.isDownloadFormatExists(mediaFormatService.getFormatForAssetOrDefault(asset).getExternalID())\n				.booleanValue())\n		{\n			result = synchronizeAsset(asset);\n		}\n		return result;\n	}',1,'ce88c626347d047911721661254f91'),('CelumAssetSynchronizeServiceImpl.java',136,'Unknown','	private boolean synchronizeAsset(final CelumAsset asset)\n	{\n		boolean result = false;\n		if (asset.isAlive())\n		{\n			if (!asset.isDeletedAsPrimitive())\n			{\n				asset.clearCache();\n				asset.setFileNameCache(null);\n				asset.setUrlCache(null);\n				asset.setSynchronized(true);\n				result = true;\n			}\n			else\n			{\n				try\n				{\n					JaloSession.getCurrentSession().setAttribute(FlexibleSearch.DISABLE_RESTRICTIONS, Boolean.TRUE);\n					if (asset.isRaw())\n					{\n						asset.remove();\n					}\n					else if (asset.getRawAsset() != null)\n					{\n						asset.getRawAsset().remove();\n					}\n					result = true;\n					JaloSession.getCurrentSession().setAttribute(FlexibleSearch.DISABLE_RESTRICTIONS, Boolean.FALSE);\n				}\n				catch (final ConsistencyCheckException e)\n				{\n					LOG.error(\"Data consistency error\", e);\n				}\n			}\n		}\n		return result;\n	}',1,'074f9be5ac81d0a936ae671a27a1a8'),('SynchronizeCelumAssetItemAction.java',137,'Unknown','public class SynchronizeCelumAssetItemAction extends ItemAction\n{\n	private final CelumAssetSynchronizeService synchronizer = (CelumAssetSynchronizeService) Registry.getApplicationContext()\n			.getBean(\"assetSynchronizeService\");\n\n	/*\n	 * (non-Javadoc)\n	 * \n	 * @see de.hybris.platform.hmc.util.action.ItemAction#perform(de.hybris.platform.hmc.util.action.ActionEvent)\n	 */\n	@Override\n	public ActionResult perform(final ActionEvent e) throws JaloBusinessException\n	{\n		final CelumAsset asset = (CelumAsset) getItem(e);\n		boolean synchResult = false;\n		ActionResult actionResult = new ActionResult(ActionResult.OK, isNeedRefresh(asset), false);\n\n		if (asset == null)\n		{\n			actionResult = new ActionResult(ActionResult.FAILED, MAMUtils.getLocalizedString(\"asset.is_null\"), false);\n		}\n		else\n		{\n			if (asset.isSynchronizedAsPrimitive())\n			{\n				synchResult = synchronizer.unsynchronize(asset);\n			}\n			else\n			{\n				synchResult = synchronizer.synchronize(asset);\n			}\n			if (!synchResult)\n			{\n				actionResult = new ActionResult(ActionResult.FAILED, MAMUtils.getLocalizedString(\"asset.synchronization.failed\"),\n						false);\n			}\n		}\n		return actionResult;\n	}\n\n\n	@Override\n	public boolean needSaveBeforePerform()\n	{\n		return false;\n	}\n\n	private boolean isNeedRefresh(final CelumAsset asset)\n	{\n		return asset.isDeletedAsPrimitive() ? false : true;\n	}\n}',1,'0512ab640ae1e9a71b376c35dad81f'),('HybrisConnector.java',138,'Unknown','		Authenticator.setDefault(new Authenticator()\r\n		{\r\n			@Override\r\n			protected PasswordAuthentication getPasswordAuthentication()\r\n			{\r\n				return new PasswordAuthentication(\"piter\", \"12345\".toCharArray());\r\n			}\r\n		});',1,'0b27dfac0973d66095437c2ef4f76f'),('CelumMediaFormatDaoImpl.java',139,'Unknown','	public SearchResult getCelumMediaFormats()\n	{\n		final ComposedType mediaFormatType = TypeManager.getInstance().getComposedType(MediaFormat.class);\n		final GenericQuery query = new GenericQuery(mediaFormatType.getCode());\n		query.addCondition(GenericCondition.createConditionForLiteralComparison(new GenericSearchField(MediaFormat.EXTERNALID),\n				Operator.IS_NOT_NULL));\n		return JaloSession.getCurrentSession().search(query);\n	}',1,'c8e5e643370a1ad2cfc224a751e4b8'),('ListView.java',140,'Unknown','CollectionUtils.transform(collection, new Transformer() {\r\n\r\n	@Override\r\n	public Object transform(Object input)\r\n	{\r\n		input = (FooBar) input;\r\n	}\r\n	\r\n});',1,'8bd2ebbe3a7bc90bcda1a5eed8b76f'),('ListView_PriceRow_ProductManager.xml',141,'Unknown','<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<list-view unassigned-group-name=\"Other\" allow-create-inline-items=\"true\">\n	<group name=\"General\">\n		<custom class=\"de.hybris.platform.cockpit.services.config.impl.LineNumberColumn\" name=\"Line nr\" visible=\"true\" editable=\"false\"/>		\n		<property qualifier=\"PriceRow.unit\" visible=\"true\" editable=\"true\"/>\n		<property qualifier=\"PriceRow.price\" visible=\"true\" editable=\"true\"/>\n		<property qualifier=\"PriceRow.currency\" visible=\"true\" editable=\"true\"/>\n	</group>\n</list-view>',1,'5e0d44fcf218922f8fa188e0da3e4e'),('ListView.java',142,'Unknown','			final ObjectValueContainer valueContainer = TypeTools.createValueContainer(currentRowObject, currentRowObject.getType()\r\n					.getPropertyDescriptors(), getCurrentSession().getSystemService().getAvailableLanguageIsos());\r\n			final Iterator<Entry<String, Object>> initValuesIterator = getInitialValues().entrySet().iterator();\r\n\r\n			while (initValuesIterator.hasNext())\r\n			{\r\n				final Map.Entry pairs = initValuesIterator.next();\r\n				final PropertyDescriptor propertyDescriptor = getTypeService().getPropertyDescriptor((String) pairs.getKey());\r\n				if (propertyDescriptor.isLocalized())\r\n				{\r\n					for (final String langIso : getCurrentSession().getSystemService().getAvailableLanguageIsos())\r\n					{\r\n						valueContainer.addValue(propertyDescriptor, langIso, pairs.getValue());\r\n					}\r\n				}\r\n				else\r\n				{\r\n					valueContainer.addValue(propertyDescriptor, null, pairs.getValue());\r\n				}\r\n			}',1,'27d06e9c76608b064b88d5f62b3f56'),('ContextAreaTableModelListener.java',143,'Unknown','			final NewItemService newItemService = UISessionUtils.getCurrentSession().getNewItemService();\r\n			try\r\n			{\r\n				final TypedObject result = newItemService.createNewItem(valueContainer, getCurrentRowObjectTemplate());\r\n\r\n			}\r\n			catch (final ValueHandlerException e)\r\n			{\r\n				// TODO Handle it somehow better\r\n				e.printStackTrace();\r\n			}',1,'73b8e014625e2083f6432990628b36'),('DynamicListViewHeaderColumnMenuPopupBuilder.java',144,'Unknown','										final DefaultCustomColumnConfiguration columnConfig = new DefaultCustomColumnConfiguration()\n										{\n											private DefaultColumnDescriptor colDescr = null;\n\n											@Override\n											public DefaultColumnDescriptor getColumnDescriptor()\n											{\n												if (this.colDescr == null)\n												{\n													this.colDescr = new DefaultColumnDescriptor(attrName);\n													this.colDescr.setEditable(true);\n													this.colDescr.setSelectable(true);\n													this.colDescr.setSortable(true);\n													this.colDescr.setVisible(this.isVisible());\n												}\n												return this.colDescr;\n											}\n										};\n										((DefaultColumnModel) getListView().getModel().getColumnComponentModel()).addColumn(columnConfig,\n												(DefaultColumnGroup) getListView().getModel().getColumnComponentModel().getRootColumnGroup());\n										getListView().fireShowColumn(columnConfig.getColumnDescriptor(), Integer.valueOf(colIndex));\n										getListView().focusFocusComponent();',1,'f188ef6035a61ad60e0b1b59a0870b'),('DynamicListViewHeaderColumnMenuPopupBuilder.java',145,'Unknown','								attribute.addEventListener(\"onLater\", new EventListener()\n								{\n									public void onEvent(final Event event) throws Exception //NOPMD: ZK specific\n									{\n										try\n										{\n											final PropertyDescriptor propertyDescriptor = UISessionUtils.getCurrentSession()\n													.getTypeService().getPropertyDescriptor(\n															getClassificationPath(subcategory, classificationAttributeModel));\n											final ColumnConfiguration config = new PropertyColumnConfiguration(propertyDescriptor);\n											final DefaultColumnModel columnModel = (DefaultColumnModel) getListView().getModel()\n													.getColumnComponentModel();\n\n											columnModel.addColumnToRootGroup(config);\n\n											getListView().fireShowColumn(config.getColumnDescriptor(), Integer.valueOf(colIndex));\n											getListView().focusFocusComponent();\n										}\n										finally\n										{\n											Clients.showBusy(null, false);\n										}\n									}\n								});\n							}',1,'6c6a4bc8459d106cb64b5cbd28e768'),('TinyFBClient.java',146,'Unknown','public class TinyFBClient {\n	String apiKey;\n	String secretKey;\n	String version=\"1.0\";\n	String format=\"JSON\";\n	String session;\n	TreeMap<String,String> standardParms=new TreeMap<String,String>();\n	ClientResponse restResponse;\n	Client restClient;\n	String facebookRestServer = \"http://api.facebook.com/restserver.php\";\n	String callId;\n    //post.addParameter(\"call_id\", );\n	',1,'d230a39154d6ad8322d46a21724262'),('TinyFBClient.java',147,'Unknown','public class TinyFBClient {\n	String apiKey;\n	String secretKey;\n	String version=\"1.0\";\n	String format=\"JSON\";\n	String session;\n	TreeMap<String,String> standardParms=new TreeMap<String,String>();\n	ClientResponse restResponse;\n	Client restClient;\n	String facebookRestServer = \"http://api.facebook.com/restserver.php\";\n	String callId;\n    //post.addParameter(\"call_id\", );\n	',1,'60d35a54e5754bbbd2a4c58e236cc6'),('PosixParser',148,'Jon','/**\r\n * Licensed to the Apache Software Foundation (ASF) under one or more\r\n * contributor license agreements.  See the NOTICE file distributed with\r\n * this work for additional information regarding copyright ownership.\r\n * The ASF licenses this file to You under the Apache License, Version 2.0\r\n * (the \"License\"); you may not use this file except in compliance with\r\n * the License.  You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\npackage org.apache.commons.cli;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.Iterator;\r\nimport java.util.List;\r\n\r\n/**\r\n * The class PosixParser provides an implementation of the\r\n * {@link Parser#flatten(Options,String[],boolean) flatten} method.\r\n *\r\n * @author John Keyes (john at integralsource.com)\r\n * @version $Revision: 695760 $, $Date: 2008-09-16 01:05:03 -0700 (Tue, 16 Sep 2008) $\r\n */\r\npublic class PosixParser extends Parser\r\n{\r\n    /** holder for flattened tokens */\r\n    private List tokens = new ArrayList();\r\n\r\n    /** specifies if bursting should continue */\r\n    private boolean eatTheRest;\r\n\r\n    /** holder for the current option */\r\n    private Option currentOption;\r\n\r\n    /** the command line Options */\r\n    private Options options;\r\n\r\n    /**\r\n     * Resets the members to their original state i.e. remove\r\n     * all of <code>tokens</code> entries and set <code>eatTheRest</code>\r\n     * to false.\r\n     */\r\n    private void init()\r\n    {\r\n        eatTheRest = false;\r\n        tokens.clear();\r\n    }\r\n\r\n    /**\r\n     * <p>An implementation of {@link Parser}\'s abstract\r\n     * {@link Parser#flatten(Options,String[],boolean) flatten} method.</p>\r\n     *\r\n     * <p>The following are the rules used by this flatten method.\r\n     * <ol>\r\n     *  <li>if <code>stopAtNonOption</code> is <b>true</b> then do not\r\n     *  burst anymore of <code>arguments</code> entries, just add each\r\n     *  successive entry without further processing.  Otherwise, ignore\r\n     *  <code>stopAtNonOption</code>.</li>\r\n     *  <li>if the current <code>arguments</code> entry is \"<b>--</b>\"\r\n     *  just add the entry to the list of processed tokens</li>\r\n     *  <li>if the current <code>arguments</code> entry is \"<b>-</b>\"\r\n     *  just add the entry to the list of processed tokens</li>\r\n     *  <li>if the current <code>arguments</code> entry is two characters\r\n     *  in length and the first character is \"<b>-</b>\" then check if this\r\n     *  is a valid {@link Option} id.  If it is a valid id, then add the\r\n     *  entry to the list of processed tokens and set the current {@link Option}\r\n     *  member.  If it is not a valid id and <code>stopAtNonOption</code>\r\n     *  is true, then the remaining entries are copied to the list of\r\n     *  processed tokens.  Otherwise, the current entry is ignored.</li>\r\n     *  <li>if the current <code>arguments</code> entry is more than two\r\n     *  characters in length and the first character is \"<b>-</b>\" then\r\n     *  we need to burst the entry to determine its constituents.  For more\r\n     *  information on the bursting algorithm see\r\n     *  {@link PosixParser#burstToken(String, boolean) burstToken}.</li>\r\n     *  <li>if the current <code>arguments</code> entry is not handled\r\n     *  by any of the previous rules, then the entry is added to the list\r\n     *  of processed tokens.</li>\r\n     * </ol>\r\n     * </p>\r\n     *\r\n     * @param options The command line {@link Options}\r\n     * @param arguments The command line arguments to be parsed\r\n     * @param stopAtNonOption Specifies whether to stop flattening\r\n     * when an non option is found.\r\n     * @return The flattened <code>arguments</code> String array.\r\n     */\r\n    protected String[] flatten(Options options, String[] arguments, boolean stopAtNonOption)\r\n    {\r\n        init();\r\n        this.options = options;\r\n\r\n        // an iterator for the command line tokens\r\n        Iterator iter = Arrays.asList(arguments).iterator();\r\n\r\n        // process each command line token\r\n        while (iter.hasNext())\r\n        {\r\n            // get the next command line token\r\n            String token = (String) iter.next();\r\n\r\n            // handle long option --foo or --foo=bar\r\n            if (token.startsWith(\"--\"))\r\n            {\r\n                int pos = token.indexOf(\'=\');\r\n                String opt = pos == -1 ? token : token.substring(0, pos); // --foo\r\n\r\n                if (!options.hasOption(opt))\r\n                {\r\n                    processNonOptionToken(token, stopAtNonOption);\r\n                }\r\n                else\r\n                {\r\n                    currentOption = options.getOption(opt);\r\n                    \r\n                    tokens.add(opt);\r\n                    if (pos != -1)\r\n                    {\r\n                        tokens.add(token.substring(pos + 1));\r\n                    }\r\n                }\r\n            }\r\n\r\n            // single hyphen\r\n            else if (\"-\".equals(token))\r\n            {\r\n                tokens.add(token);\r\n            }\r\n            else if (token.startsWith(\"-\"))\r\n            {\r\n                if (token.length() == 2 || options.hasOption(token))\r\n                {\r\n                    processOptionToken(token, stopAtNonOption);\r\n                }\r\n                // requires bursting\r\n                else\r\n                {\r\n                    burstToken(token, stopAtNonOption);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                processNonOptionToken(token, stopAtNonOption);\r\n            }\r\n\r\n            gobble(iter);\r\n        }\r\n\r\n        return (String[]) tokens.toArray(new String[tokens.size()]);\r\n    }\r\n\r\n    /**\r\n     * Adds the remaining tokens to the processed tokens list.\r\n     *\r\n     * @param iter An iterator over the remaining tokens\r\n     */\r\n    private void gobble(Iterator iter)\r\n    {\r\n        if (eatTheRest)\r\n        {\r\n            while (iter.hasNext())\r\n            {\r\n                tokens.add(iter.next());\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Add the special token \"<b>--</b>\" and the current <code>value</code>\r\n     * to the processed tokens list. Then add all the remaining\r\n     * <code>argument</code> values to the processed tokens list.\r\n     *\r\n     * @param value The current token\r\n     */\r\n    private void processNonOptionToken(String value, boolean stopAtNonOption)\r\n    {\r\n        if (stopAtNonOption && (currentOption == null || !currentOption.hasArg()))\r\n        {\r\n            eatTheRest = true;\r\n            tokens.add(\"--\");\r\n        }\r\n\r\n        tokens.add(value);\r\n    }\r\n\r\n    /**\r\n     * <p>If an {@link Option} exists for <code>token</code> then\r\n     * add the token to the processed list.</p>\r\n     *\r\n     * <p>If an {@link Option} does not exist and <code>stopAtNonOption</code>\r\n     * is set then add the remaining tokens to the processed tokens list\r\n     * directly.</p>\r\n     *\r\n     * @param token The current option token\r\n     * @param stopAtNonOption Specifies whether flattening should halt\r\n     * at the first non option.\r\n     */\r\n    private void processOptionToken(String token, boolean stopAtNonOption)\r\n    {\r\n        if (stopAtNonOption && !options.hasOption(token))\r\n        {\r\n            eatTheRest = true;\r\n        }\r\n\r\n        if (options.hasOption(token))\r\n        {\r\n            currentOption = options.getOption(token);\r\n        }\r\n\r\n        tokens.add(token);\r\n    }\r\n\r\n    /**\r\n     * Breaks <code>token</code> into its constituent parts\r\n     * using the following algorithm.\r\n     *\r\n     * <ul>\r\n     *  <li>ignore the first character (\"<b>-</b>\")</li>\r\n     *  <li>foreach remaining character check if an {@link Option}\r\n     *  exists with that id.</li>\r\n     *  <li>if an {@link Option} does exist then add that character\r\n     *  prepended with \"<b>-</b>\" to the list of processed tokens.</li>\r\n     *  <li>if the {@link Option} can have an argument value and there\r\n     *  are remaining characters in the token then add the remaining\r\n     *  characters as a token to the list of processed tokens.</li>\r\n     *  <li>if an {@link Option} does <b>NOT</b> exist <b>AND</b>\r\n     *  <code>stopAtNonOption</code> <b>IS</b> set then add the special token\r\n     *  \"<b>--</b>\" followed by the remaining characters and also\r\n     *  the remaining tokens directly to the processed tokens list.</li>\r\n     *  <li>if an {@link Option} does <b>NOT</b> exist <b>AND</b>\r\n     *  <code>stopAtNonOption</code> <b>IS NOT</b> set then add that\r\n     *  character prepended with \"<b>-</b>\".</li>\r\n     * </ul>\r\n     *\r\n     * @param token The current token to be <b>burst</b>\r\n     * @param stopAtNonOption Specifies whether to stop processing\r\n     * at the first non-Option encountered.\r\n     */\r\n    protected void burstToken(String token, boolean stopAtNonOption)\r\n    {\r\n        for (int i = 1; i < token.length(); i++)\r\n        {\r\n            String ch = String.valueOf(token.charAt(i));\r\n\r\n            if (options.hasOption(ch))\r\n            {\r\n                tokens.add(\"-\" + ch);\r\n                currentOption = options.getOption(ch);\r\n\r\n                if (currentOption.hasArg() && (token.length() != (i + 1)))\r\n                {\r\n                    tokens.add(token.substring(i + 1));\r\n\r\n                    break;\r\n                }\r\n            }\r\n            else if (stopAtNonOption)\r\n            {\r\n                processNonOptionToken(token.substring(i), true);\r\n                break;\r\n            }\r\n            else\r\n            {\r\n                tokens.add(token);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n',1,'0065baf5725241333e3585268423db'),('Hello mundo',149,'Unknown','Class helloMundo extends people{\r\n        public $falar;\r\n\r\n         private function setFala(){\r\n             $this->falar = \"OlÃ¡ mundo\";\r\n            }\r\n          public function fazFalar(){\r\n                return $this->falar;\r\n            }\r\n\r\n}',2,'31047be86bb1dd0e3fb5888a2ff2c5'),('GET',150,'tester','$__debug = $HTTP_GET_VARS[\'testing\'] === \'True\' ? True : False;',2,'088432267413b685655b82fd64b444'),('HjJTyKLvWwIEEEBCL',151,'gamqxztbdd','7xhbw6  <a href=\"http://dsdlnpgdbbon.com/\">dsdlnpgdbbon</a>, [url=http://lpspqrdmkzyb.com/]lpspqrdmkzyb[/url], [link=http://smcffjigmbvp.com/]smcffjigmbvp[/link], http://pdlwpmvaptkt.com/',18,'f1e47f6ac14f154bcabb8729a1fbce'),('KtaOHmyXrNiuE',152,'xwuwmbxa','bwBc2B  <a href=\"http://hxfzkwghdkkj.com/\">hxfzkwghdkkj</a>, [url=http://maukemfswelt.com/]maukemfswelt[/url], [link=http://qcpnzanwuiuu.com/]qcpnzanwuiuu[/link], http://lppnvzuiucbp.com/',11,'ee27e1cf10ce6f8656c4b00bdf75e8');
/*!40000 ALTER TABLE `listings` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2014-03-23 20:49:46
